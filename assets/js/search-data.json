{
  
    
        "post0": {
            "title": "Golf Swing Part II- Separating Swing Positions",
            "content": ". Overview . In a previous part Part 1 a neural network model was used to find positions on the body during a golf swing. This work used images taken from videos of golf swing (analysed using the code below by the authors listed) because it is often easier to work with images rather than videos. . But to get images of the golf swing to analyse it can be useful to get them at different parts of the golf swing. This is what this part does. . Taken from https://github.com/wmcnally/golfdb and shown in the paper here https://arxiv.org/abs/1903.06528 . [Ref Paper] McNally, William, et al. &quot;Golfdb: A video database for golf swing sequencing.&quot; Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition Workshops. 2019 . The code separates the golf swing into a number of different segments based on body and golf club positions. . This code can be run on kaggle here https://www.kaggle.com/thomassimm/golfdb-lessimports . The input is an mp3 file of a golf swing . The ouput is a series of images at different parts of the golf swing . . The Code . Specify the file to use . Add downloaded directory (not always necsessary) and specify the video file. . !cp -r ../input/golfdb3/* ./ stra=&#39;../input/golfdb3/test_video.mp4&#39; stra=&#39;../input/golfdb2/golfdb/data/videos_160/1017.mp4&#39; stra . Imports, classes and defs . Some imports. Neural nets using Torch . import scipy.io import pandas as pd import torch from torch.utils.data import Dataset, DataLoader from torchvision import transforms # from eval import ToTensor, Normalize # from model import EventDetector import numpy as np import torch.nn.functional as F import cv2 from torch.autograd import Variable . The following classes and definitions are taken from the files in the GitHub directory . class SampleVideo(Dataset): def __init__(self, path, input_size=160, transform=None): self.path = path self.input_size = input_size self.transform = transform def __len__(self): return 1 def __getitem__(self, idx): cap = cv2.VideoCapture(self.path) frame_size = [cap.get(cv2.CAP_PROP_FRAME_HEIGHT), cap.get(cv2.CAP_PROP_FRAME_WIDTH)] ratio = self.input_size / max(frame_size) new_size = tuple([int(x * ratio) for x in frame_size]) delta_w = self.input_size - new_size[1] delta_h = self.input_size - new_size[0] top, bottom = delta_h // 2, delta_h - (delta_h // 2) left, right = delta_w // 2, delta_w - (delta_w // 2) # preprocess and return frames images = [] for pos in range(int(cap.get(cv2.CAP_PROP_FRAME_COUNT))): _, img = cap.read() resized = cv2.resize(img, (new_size[1], new_size[0])) b_img = cv2.copyMakeBorder(resized, top, bottom, left, right, cv2.BORDER_CONSTANT, value=[0.406 * 255, 0.456 * 255, 0.485 * 255]) # ImageNet means (BGR) b_img_rgb = cv2.cvtColor(b_img, cv2.COLOR_BGR2RGB) images.append(b_img_rgb) cap.release() labels = np.zeros(len(images)) # only for compatibility with transforms sample = {&#39;images&#39;: np.asarray(images), &#39;labels&#39;: np.asarray(labels)} if self.transform: sample = self.transform(sample) return sample . class ToTensor(object): &quot;&quot;&quot;Convert ndarrays in sample to Tensors.&quot;&quot;&quot; def __call__(self, sample): images, labels = sample[&#39;images&#39;], sample[&#39;labels&#39;] images = images.transpose((0, 3, 1, 2)) return {&#39;images&#39;: torch.from_numpy(images).float().div(255.), &#39;labels&#39;: torch.from_numpy(labels).long()} class Normalize(object): def __init__(self, mean, std): self.mean = torch.tensor(mean, dtype=torch.float32) self.std = torch.tensor(std, dtype=torch.float32) def __call__(self, sample): images, labels = sample[&#39;images&#39;], sample[&#39;labels&#39;] images.sub_(self.mean[None, :, None, None]).div_(self.std[None, :, None, None]) return {&#39;images&#39;: images, &#39;labels&#39;: labels} . import torch.nn as nn import math &quot;&quot;&quot; https://github.com/tonylins/pytorch-mobilenet-v2 &quot;&quot;&quot; def conv_bn(inp, oup, stride): return nn.Sequential( nn.Conv2d(inp, oup, 3, stride, 1, bias=False), nn.BatchNorm2d(oup), nn.ReLU6(inplace=True) ) def conv_1x1_bn(inp, oup): return nn.Sequential( nn.Conv2d(inp, oup, 1, 1, 0, bias=False), nn.BatchNorm2d(oup), nn.ReLU6(inplace=True) ) class InvertedResidual(nn.Module): def __init__(self, inp, oup, stride, expand_ratio): super(InvertedResidual, self).__init__() self.stride = stride assert stride in [1, 2] hidden_dim = round(inp * expand_ratio) self.use_res_connect = self.stride == 1 and inp == oup if expand_ratio == 1: self.conv = nn.Sequential( # dw nn.Conv2d(hidden_dim, hidden_dim, 3, stride, 1, groups=hidden_dim, bias=False), nn.BatchNorm2d(hidden_dim), nn.ReLU6(inplace=True), # pw-linear nn.Conv2d(hidden_dim, oup, 1, 1, 0, bias=False), nn.BatchNorm2d(oup), ) else: self.conv = nn.Sequential( # pw nn.Conv2d(inp, hidden_dim, 1, 1, 0, bias=False), nn.BatchNorm2d(hidden_dim), nn.ReLU6(inplace=True), # dw nn.Conv2d(hidden_dim, hidden_dim, 3, stride, 1, groups=hidden_dim, bias=False), nn.BatchNorm2d(hidden_dim), nn.ReLU6(inplace=True), # pw-linear nn.Conv2d(hidden_dim, oup, 1, 1, 0, bias=False), nn.BatchNorm2d(oup), ) def forward(self, x): if self.use_res_connect: return x + self.conv(x) else: return self.conv(x) class MobileNetV2(nn.Module): def __init__(self, n_class=1000, input_size=224, width_mult=1.): super(MobileNetV2, self).__init__() block = InvertedResidual min_depth = 16 input_channel = 32 last_channel = 1280 interverted_residual_setting = [ # t, c, n, s [1, 16, 1, 1], [6, 24, 2, 2], [6, 32, 3, 2], [6, 64, 4, 2], [6, 96, 3, 1], [6, 160, 3, 2], [6, 320, 1, 1], ] # building first layer assert input_size % 32 == 0 input_channel = int(input_channel * width_mult) if width_mult &gt;= 1.0 else input_channel self.last_channel = int(last_channel * width_mult) if width_mult &gt; 1.0 else last_channel self.features = [conv_bn(3, input_channel, 2)] # building inverted residual blocks for t, c, n, s in interverted_residual_setting: output_channel = max(int(c * width_mult), min_depth) for i in range(n): if i == 0: self.features.append(block(input_channel, output_channel, s, expand_ratio=t)) else: self.features.append(block(input_channel, output_channel, 1, expand_ratio=t)) input_channel = output_channel # building last several layers self.features.append(conv_1x1_bn(input_channel, self.last_channel)) # make it nn.Sequential self.features = nn.Sequential(*self.features) # building classifier self.classifier = nn.Sequential( nn.Dropout(0.2), nn.Linear(self.last_channel, n_class), ) self._initialize_weights() def forward(self, x): x = self.features(x) x = x.mean(3).mean(2) x = self.classifier(x) return x def _initialize_weights(self): for m in self.modules(): if isinstance(m, nn.Conv2d): n = m.kernel_size[0] * m.kernel_size[1] * m.out_channels m.weight.data.normal_(0, math.sqrt(2. / n)) if m.bias is not None: m.bias.data.zero_() elif isinstance(m, nn.BatchNorm2d): m.weight.data.fill_(1) m.bias.data.zero_() elif isinstance(m, nn.Linear): n = m.weight.size(1) m.weight.data.normal_(0, 0.01) m.bias.data.zero_() . import torch.nn as nn class EventDetector(nn.Module): def __init__(self, pretrain, width_mult, lstm_layers, lstm_hidden, bidirectional=True, dropout=True): super(EventDetector, self).__init__() self.width_mult = width_mult self.lstm_layers = lstm_layers self.lstm_hidden = lstm_hidden self.bidirectional = bidirectional self.dropout = dropout net = MobileNetV2(width_mult=width_mult) state_dict_mobilenet = torch.load(&#39;mobilenet_v2.pth.tar&#39;) if pretrain: net.load_state_dict(state_dict_mobilenet) self.cnn = nn.Sequential(*list(net.children())[0][:19]) self.rnn = nn.LSTM(int(1280*width_mult if width_mult &gt; 1.0 else 1280), self.lstm_hidden, self.lstm_layers, batch_first=True, bidirectional=bidirectional) if self.bidirectional: self.lin = nn.Linear(2*self.lstm_hidden, 9) else: self.lin = nn.Linear(self.lstm_hidden, 9) if self.dropout: self.drop = nn.Dropout(0.5) def init_hidden(self, batch_size): if self.bidirectional: return (Variable(torch.zeros(2*self.lstm_layers, batch_size, self.lstm_hidden).cuda(), requires_grad=True), Variable(torch.zeros(2*self.lstm_layers, batch_size, self.lstm_hidden).cuda(), requires_grad=True)) else: return (Variable(torch.zeros(self.lstm_layers, batch_size, self.lstm_hidden).cuda(), requires_grad=True), Variable(torch.zeros(self.lstm_layers, batch_size, self.lstm_hidden).cuda(), requires_grad=True)) def forward(self, x, lengths=None): batch_size, timesteps, C, H, W = x.size() self.hidden = self.init_hidden(batch_size) # CNN forward c_in = x.view(batch_size * timesteps, C, H, W) c_out = self.cnn(c_in) c_out = c_out.mean(3).mean(2) if self.dropout: c_out = self.drop(c_out) # LSTM forward r_in = c_out.view(batch_size, timesteps, -1) r_out, states = self.rnn(r_in, self.hidden) out = self.lin(r_out) out = out.view(batch_size*timesteps,9) return out . Run the code . seq_length=64 ds = SampleVideo(stra, transform=transforms.Compose([ToTensor(), Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])])) dl = DataLoader(ds, batch_size=1, shuffle=False, drop_last=False) model = EventDetector(pretrain=True, width_mult=1., lstm_layers=1, lstm_hidden=256, bidirectional=True, dropout=False) try: save_dict = torch.load(&#39;models/swingnet_1800.pth.tar&#39;) except: print(&quot;Model weights not found. Download model weights and place in &#39;models&#39; folder. See README for instructions&quot;) device = torch.device(&#39;cuda&#39; if torch.cuda.is_available() else &#39;cpu&#39;) print(&#39;Using device:&#39;, device) model.load_state_dict(save_dict[&#39;model_state_dict&#39;]) model.to(device) model.eval() print(&quot;Loaded model weights&quot;) print(&#39;Testing...&#39;) for sample in dl: images = sample[&#39;images&#39;] # full samples do not fit into GPU memory so evaluate sample in &#39;seq_length&#39; batches batch = 0 while batch * seq_length &lt; images.shape[1]: if (batch + 1) * seq_length &gt; images.shape[1]: image_batch = images[:, batch * seq_length:, :, :, :] else: image_batch = images[:, batch * seq_length:(batch + 1) * seq_length, :, :, :] logits = model(image_batch.cuda()) if batch == 0: probs = F.softmax(logits.data, dim=1).cpu().numpy() else: probs = np.append(probs, F.softmax(logits.data, dim=1).cpu().numpy(), 0) batch += 1 events = np.argmax(probs, axis=0)[:-1] print(&#39;Predicted event frames: {}&#39;.format(events)) confidence = [] for i, e in enumerate(events): confidence.append(probs[e, i]) print(&#39;Confidence: {}&#39;.format([np.round(c, 3) for c in confidence])) . Output: . Using device: cuda . Loaded model weights . Testing... . Predicted event frames: [ 82 121 137 166 189 203 213 245] . Confidence: [0.215, 0.376, 0.79, 0.767, 0.827, 0.968, 0.935, 0.247] . Plot the results . import os ##delte images lsa=os.listdir() fimg=[ ll for ll in lsa if ll.split(&#39;.&#39;)[-1]==&#39;jpg&#39;] # print(fimg) imgs=[os.remove(ff) for ff in fimg] fimg=[ ll for ll in lsa if ll.split(&#39;.&#39;)[-1]==&#39;jpg&#39;] . def createImages(fila,pos,nomS): &#39;&#39;&#39; Given a video file location (fila) it will save as images to a folder Given positions in video (pos) these images from the video are saved pos is created based on positions of swings &#39;&#39;&#39; import cv2 cap = cv2.VideoCapture(fila) eventNom=[0,1,2,3,4,5,6,7] for i, e in enumerate(events): cap.set(cv2.CAP_PROP_POS_FRAMES, e) _, img = cap.read() cv2.imwrite(os.path.join(os.getcwd(),&#39;_&#39;+ nomS+&#39;_&#39;+&quot;frame{:d}.jpg&quot;.format(eventNom[i])), img) # save frame as JPG file fila=stra pos=events createImages(fila,pos,&#39;10&#39;) . import matplotlib.pyplot as plt import matplotlib.image as mpimg lsa=os.listdir() fimg=[ ll for ll in lsa if ll.split(&#39;.&#39;)[-1]==&#39;jpg&#39;] fimg.sort() imgs=[mpimg.imread(ff) for ff in fimg] . cap = cv2.VideoCapture(stra) # plt.subplot(4,2,1) f, axs = plt.subplots(4,2,figsize=(15,15)) for i, e in enumerate(events): cap.set(cv2.CAP_PROP_POS_FRAMES, e) _, img = cap.read() plt.subplot(4,2,i+1) plt.imshow(img) plt.title(e) . .",
            "url": "https://thomashsimm.com/neural%20networks/pytourch/golf%20swing/python/2022/02/26/GolfSwingPart2.html",
            "relUrl": "/neural%20networks/pytourch/golf%20swing/python/2022/02/26/GolfSwingPart2.html",
            "date": " • Feb 26, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Creating a property prediction App",
            "content": ". Overview . This is an app for predicting house prices in Swansea using Streamlit https://streamlit.io/ . The app uses the following for predictions: . House price sales (price and date) | Name of street and number | Location of property (Lattitude and Longitude) | Data on Census regions | More details of the prediction side of the app, using Random Forrests and neural networks, is dealt with here https://thomashsimm.com/jupyter/python/randomforests/tabulardata/sklearn/2022/02/17/SwanseaHousePrices_Part2.html. . A video of the app is shown below or can be accessed via https://share.streamlit.io/dmaterialia/propertystreamlit/main/PropertyApp.py . The intention of the app is to provide a simple user interface to allow price predictions . . The Python Script for the App . Loading the data . The following function is used to load the data. . The data consists of 4 parts: . m = the model (this is by far the biggest part in terms of data size) | to = a data frame object of the house data | xsAll = this is a form of &#39;to&#39; used by the model (the input values of the model) | yAll = a form of &#39;to&#39; the values the model is trying to predict (house price values) | The data is saved as a pickle file in a Jupyter Notebook, then uploaded to googledrive as filesize has to be less than 100 Mb on GitHub. . gdown.download(url, output) downloads the data from GoogleDrive . @st.cache(allow_output_mutation=True) This line at the top of the python file means the data is cached and don&#39;t need to keep loading it . @st.cache(allow_output_mutation=True) def load_data(): &quot;&quot;&quot; Loads the data &quot;&quot;&quot; import gdown url = &#39;https://drive.google.com/uc?id=1OD2l7ynVzLlqY92gYiCx5xq32-D1wJMe&#39; output = &#39;one1.pkl&#39; gdown.download(url, output) cda = os.getcwd() with open(&#39;one1.pkl&#39;, &#39;rb&#39;)as f: m2, to2, xsAll2, yAll2 = pickle.load(f) return m2, to2, xsAll2, yAll2 data_load_state = st.text(&#39;Loading data...&#39;) m1, to1, xsAll1, yAll1=load_data() data_load_state.text(&quot;Loaded data (using st.cache)&quot;) . Updating data so prediction is for today . The following function changes the date of sale details for each property so that they are today&#39;s date . def add_datepart(df, field_name, prefix=None, drop=True, time=False): . Getting the predictions . The following function takes the address selected and outputs the predicted property price . get_predTodayNotExact(m,address,toTEMP,xs_final,y) . Help with reducing code for selecting data . The following function is used to allow to select different details from the dataframes. Really just a function to get around the slightly unusual way data is selected in &#39;to&#39; and dataFrames . def doSelect(typee,option2,typeeOut,toTEMP): . The user interface parts of the app . optionSELECT = st.sidebar.selectbox( &#39;Select how to search&#39;, choice) . This is a select box loacted in the LHS sidebar. The options for the user are as follows and choice dictates what boxes they see: . choice=[&#39;Post Code&#39;,&#39;Region&#39;, &#39;Street&#39;] . For example if &#39;Post code&#39; is selected the folowing selectbox is shown with all post code options for first part of the postcode: . option2 = st.sidebar.selectbox( &#39;Select Postcode&#39;, indexPCSA) . Whatever option selected the individual address must be selected: . address = st.sidebar.selectbox( &#39;Select Address&#39;, AdSel) . Predictions and Output . Once the address is selected, teh predictions are found by calling the prediction function: . Pri1, Pri2, typa=get_predTodayNotExact(m,address,(to),(xsAll),(yAll)) . And then displayed in the main screen with the following code: . &#39;You selected: &#39;, option2, &#39;and&#39;, address . &#39;Property type is &#39;,typa . stra = &#39;The predicted price is: &#39; st.subheader(stra) st.header(&#39;£&#39;+ str(Pri1[0])+&#39;k&#39;) . Creating the App . The Python .py file along with a requirements file are uploaded to a GitHub repository. The one for this is at https://github.com/dMaterialia/PropertyStreamlit . The requirements file includes all the modules not included in python that need to be loaded. For this function the file is as follows: . numpy pandas matplotlib gdown scikit-learn fastai . Then simply log into Streamlit select the repository and the python file and hit go to get the app working . Full Python function . import streamlit as st # To make things easier later, we&#39;re also importing numpy and pandas for # working with sample data. import numpy as np import pandas as pd import matplotlib.pyplot as plt import os import pickle import copy from sklearn.ensemble import RandomForestRegressor st.title(&#39;Swansea Property Price Predictor&#39;) @st.cache(allow_output_mutation=True) def load_data(): &quot;&quot;&quot; Loads the data &quot;&quot;&quot; import gdown url = &#39;https://drive.google.com/uc?id=1OD2l7ynVzLlqY92gYiCx5xq32-D1wJMe&#39; output = &#39;one1.pkl&#39; gdown.download(url, output) cda = os.getcwd() with open(&#39;one1.pkl&#39;, &#39;rb&#39;)as f: m2, to2, xsAll2, yAll2 = pickle.load(f) return m2, to2, xsAll2, yAll2 data_load_state = st.text(&#39;Loading data...&#39;) m1, to1, xsAll1, yAll1=load_data() data_load_state.text(&quot;Loaded data (using st.cache)&quot;) def add_datepart(df, field_name, prefix=None, drop=True, time=False): &quot;Helper function that adds columns relevant to a date in the column `field_name` of `df`.&quot; import re import pandas as pd import numpy as np def ifnone(a, b): &quot;`b` if `a` is None else `a`&quot; return b if a is None else a def make_date(df, date_field): &quot;Make sure `df[date_field]` is of the right date type.&quot; field_dtype = df[date_field].dtype if isinstance(field_dtype, pd.core.dtypes.dtypes.DatetimeTZDtype): field_dtype = np.datetime64 if not np.issubdtype(field_dtype, np.datetime64): df[date_field] = pd.to_datetime(df[date_field], infer_datetime_format=True) make_date(df, field_name) field = df[field_name] prefix = ifnone(prefix, re.sub(&#39;[Dd]ate$&#39;, &#39;&#39;, field_name)) attr = [&#39;Year&#39;, &#39;Month&#39;, &#39;Week&#39;, &#39;Day&#39;, &#39;Dayofweek&#39;, &#39;Dayofyear&#39;, &#39;Is_month_end&#39;, &#39;Is_month_start&#39;, &#39;Is_quarter_end&#39;, &#39;Is_quarter_start&#39;, &#39;Is_year_end&#39;, &#39;Is_year_start&#39;] if time: attr = attr + [&#39;Hour&#39;, &#39;Minute&#39;, &#39;Second&#39;] # Pandas removed `dt.week` in v1.1.10 week = field.dt.isocalendar().week.astype(field.dt.day.dtype) if hasattr(field.dt, &#39;isocalendar&#39;) else field.dt.week for n in attr: df[prefix + n] = getattr(field.dt, n.lower()) if n != &#39;Week&#39; else week mask = ~field.isna() df[prefix + &#39;Elapsed&#39;] = np.where(mask,field.values.astype(np.int64) // 10 ** 9,np.nan) if drop: df.drop(field_name, axis=1, inplace=True) return df def get_predTodayNotExact(m,address,toTEMP,xs_final,y): &quot;&quot;&quot; Given model m, address, initial pd of houses to, and adjusted pd xs_final output is house price prediction &quot;&quot;&quot; import copy # convert to current date colsAll=xs_final.columns colsNoDate=[&#39;Type&#39;, &#39;Index of Multiple Deprivation&#39;, &#39;Latitude&#39;, &#39;Average Income&#39;, &#39;Longitude&#39;, &#39;Postcode&#39;, &#39;Introduced&#39;, &#39;Address&#39;, &#39;Altitude&#39;] xsNoDate=copy.copy(xs_final.drop(columns=[&#39;Elapsed&#39;,&#39;Year&#39;])) xsNoDate[&#39;Date&#39;] = pd.to_datetime(&quot;today&quot;) xsNoDate = add_datepart(xsNoDate, &#39;Date&#39;) xs_finalTEMP=xsNoDate.loc[:,colsAll] # each address has a unique number aa=toTEMP.classes[&#39;Address&#39;] # findwhich number is address give (take 1st if more than 1) try: ii=[ii for ii,aa1 in enumerate(aa) if aa1== address][0] # 1 address can have multiple sales so we need index in dataframes ii=toTEMP[toTEMP[&#39;Address&#39;]==ii].index[0] preda = np.round( np.exp( m.predict(xs_finalTEMP.loc[ii:ii]) )/1000 ,1) prev = np.round( np.exp(y.loc[ii])/1000 ,1) typeAll=toTEMP.classes[&#39;Type&#39;] typa=typeAll[xs_finalTEMP.loc[ii:ii,&#39;Type&#39;]][0] except: aa=toTEMP.classes[&#39;Address&#39;] aaStreet=toTEMP.classes[&#39;Street&#39;] ii=[ii for ii,aa1 in enumerate(aaStreet) if aa1== Street][0] xsTemp=copy.copy( xs_finalTEMP[xs_finalTEMP[&#39;Street&#39;]==ii] ) xsTemp.reset_index(inplace=True,drop=True) # find nearest house by houseno No=np.array(xsTemp[&#39;HouseNo&#39;]) yo=(np.abs(No-HouseNo)) yo1=np.min(yo) # get index of the nearest house yo=No[yo==yo1][0] ii=[ii for ii,aa1 in enumerate(xsTemp.HouseNo) if aa1== yo][0] xsTemp.loc[ii:ii,&#39;HouseNo&#39;]=HouseNo # If want to change house type # xsTemp.loc[ii:ii,&#39;Type&#39;]=2 # print(xsTemp.loc[ii:ii,&#39;Type&#39;]) # print(xsTemp.loc[ii:ii]) preda = np.round( np.exp( m.predict(xsTemp.loc[ii:ii]) )/1000 ,1)[0] prev=0 typeAll=toTEMP.classes[&#39;Type&#39;] typa=typeAll[xsTemp.loc[ii:ii,&#39;Type&#39;]][0] return preda, prev, typa def doSelect(typee,option2,typeeOut,toTEMP): streetAll=toTEMP.classes[typee] AdAll=toTEMP.classes[typeeOut] # this finds index of postcode for example SA1 0EA = 62 indexPC1=[ita for ita,ij in enumerate(streetAll) if ij==option2][0] # finds all indexes of addresses with given post code index indexAdds=[ita for ita, ij in enumerate(toTEMP[typee]) if ij==indexPC1] # Find address index numbers for those given above indexAddSel=toTEMP.iloc[indexAdds][typeeOut] # Convert these to actual addresses AdSel=AdAll[indexAddSel] # unique values AdSel=np.unique(AdSel) return AdSel pcodesSA=[&#39;SA1&#39;, &#39;SA2&#39;, &#39;SA3&#39;, &#39;SA4&#39;, &#39;SA5&#39;, &#39;SA6&#39;, &#39;SA7&#39;, &#39;SA8&#39;, &#39;SA9&#39;, &#39;SA10&#39; ,&#39;SA11&#39;, &#39;SA12&#39;, &#39;SA13&#39;, &#39;SA14&#39;,&#39;SA15&#39;,&#39;SA18&#39;] choice=[&#39;Post Code&#39;,&#39;Region&#39;, &#39;Street&#39;] to=copy.copy(to1) m=copy.copy(m1) xsAll=copy.copy(xsAll1) yAll=copy.copy(yAll1) # These are the list of all addresses etc by actual name AdAll=(to.classes[&#39;Address&#39;]) pcAll=(to.classes[&#39;Postcode&#39;]) regionAll=(to.classes[&#39;Region&#39;]) streetAll=(to.classes[&#39;Street&#39;]) # An optionbox- Select How search optionSELECT = st.sidebar.selectbox( &#39;Select how to search&#39;, choice) if optionSELECT==&#39;Post Code&#39;: # An optionbox- Select Postcode Start e.g. SA1 option = st.sidebar.selectbox( &#39;Select Area&#39;, pcodesSA) # Select Postcode All # This finds a set of postcodes given by optionbox indexPCSA=[ij for ij in pcAll if ij.split(&#39; &#39;)[0]==option] # optionbox to select particular postcode # Outcome e.g. SA1 0EA option2 = st.sidebar.selectbox( &#39;Select Postcode&#39;, indexPCSA) AdSel = doSelect(typee=&#39;Postcode&#39;,option2=option2,typeeOut=&#39;Address&#39;,toTEMP=(to)) elif optionSELECT==&#39;Region&#39;: option2 = st.sidebar.selectbox( &#39;Select Region&#39;, regionAll) StreetSel = doSelect(typee=&#39;Region&#39;,option2=option2,typeeOut=&#39;Street&#39;,toTEMP=(to)) option3 = st.sidebar.selectbox( &#39;Select Street&#39;, StreetSel) AdSel = doSelect(typee=&#39;Street&#39;,option2=option3,typeeOut=&#39;Address&#39;,toTEMP=(to)) elif optionSELECT==&#39;Street&#39;: option2 = st.sidebar.selectbox( &#39;Select Street&#39;, streetAll) AdSel = doSelect(typee=&#39;Street&#39;,option2=option2,typeeOut=&#39;Address&#39;,toTEMP=(to)) address = st.sidebar.selectbox( &#39;Select Address&#39;, AdSel) Pri1, Pri2, typa=get_predTodayNotExact(m,address,(to),(xsAll),(yAll)) #tell user what they selected &#39;You selected: &#39;, option2, &#39;and&#39;, address &#39;Property type is &#39;,typa stra = &#39;The predicted price is: &#39; st.subheader(stra) st.header(&#39;£&#39;+ str(Pri1[0])+&#39;k&#39;) .",
            "url": "https://thomashsimm.com/streamlit/randomforrests/houseprices/python/2022/02/23/SwanseaHousePriceApp.html",
            "relUrl": "/streamlit/randomforrests/houseprices/python/2022/02/23/SwanseaHousePriceApp.html",
            "date": " • Feb 23, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Swansea House Prices- Part 2",
            "content": ". Overview . In part 1 (https://thomashsimm.com/2021/08/04/Swansea-House-Price-Report.html) house price predictions were done using Census regions and information about the locations. . Whereas, in this part the main focus is on using property sales data to obtain price predictions. . Import modules and prepare the data . Some imports . import os import requests import wget import pandas as pd from fastbook import * from kaggle import api from pandas.api.types import is_string_dtype, is_numeric_dtype, is_categorical_dtype from fastai.tabular.all import * from sklearn.ensemble import RandomForestRegressor from sklearn.tree import DecisionTreeRegressor from dtreeviz.trees import * from IPython.display import Image, display_svg, SVG pd.options.display.max_rows = 20 pd.options.display.max_columns = 8 . Create a local path . path = URLs.path(&#39;SwansProp&#39;) Path.BASE_PATH = path path . Path(&#39;.&#39;) . if not path.exists(): path.mkdir(parents=true) . Download the data . A) Get the property sales from https://www.doogal.co.uk/PropertySalesCSV.ashx?area= . B) And then the postcode details from https://www.doogal.co.uk/UKPostcodesCSV.ashx?Search=SA for . lattitude and longitude | Census data and related data Avg income | Deprivation index | etc | . | . Unique postcode starts SA1 SA2 SA3 SA4 SA5 SA6 SA7 SA8 SA9 SA10 SA11 SA12 SA13 SA80 SA99 . try: os.mkdir(&#39;data&#39;) except: pass pcodesSA=[&#39;SA1&#39;, &#39;SA2&#39;, &#39;SA3&#39;, &#39;SA4&#39;, &#39;SA5&#39;, &#39;SA6&#39;, &#39;SA7&#39;, &#39;SA8&#39;, &#39;SA9&#39;, &#39;SA10&#39; ,&#39;SA11&#39;, &#39;SA12&#39;, &#39;SA13&#39;, &#39;SA14&#39;,&#39;SA15&#39;,&#39;SA18&#39;] . &#39;A&#39; Property Sales Data . Download the data . url=&#39;https://www.doogal.co.uk/PropertySalesCSV.ashx?area=&#39; for pc in pcodesSA: patha=path/&#39;{}.csv&#39;.format(pc) wget.download(url+pc, str(patha)) . 100% [............................................................................] 935424 / 935424 . Create a dataframe from the downloaded csv files . for i,pc in enumerate(pcodesSA): patha=path/&#39;{}.csv&#39;.format(pc) dfTemp=pd.read_csv(str(patha)) if i==0: df=dfTemp print(i) else: df=df.append(dfTemp) print(df.shape[0]) df.reset_index(drop=True, inplace=True) . 0 19432 35015 47639 67896 79210 92148 99680 104480 109669 122570 136404 147937 155697 169021 183674 195094 . df.head() . Date Address Postcode Price Type Ownership NewBuild . 0 2021-10-22 | 60 Danygraig Road, Port Tennant | SA1 8LZ | 192000 | Terraced | Freehold | No | . 1 2021-10-01 | 2 Camona Drive, Maritime Quarter | SA1 1YJ | 179950 | Flat | Leasehold | No | . 2 2021-09-24 | 36 Balaclava Street, St Thomas | SA1 8BR | 140000 | Terraced | Freehold | No | . 3 2021-09-21 | 7 Abernethy Square, Maritime Quarter | SA1 1UH | 133000 | Flat | Leasehold | No | . 4 2021-09-17 | 6 Brynffordd, Townhill | SA1 6RA | 176000 | Semi-detached | Freehold | No | . import copy dfOrig = copy.copy(df) . &#39;B&#39; The PostCode data . Dwonload the data . url=&quot;https://www.doogal.co.uk/UKPostcodesCSV.ashx?Search=SA&quot; patha = path/&#39;SA.csv&#39; wget.download(url, str(patha)) . -1 / unknown . &#39;C: Users 44781 .fastai archive SwansProp SA (1).csv&#39; . https://www.doogal.co.uk/PostcodeCsvFields.php . Latitude | Longitude | Introduced | Rural/urban | Altitude | Index of Multiple Deprivation | Average income | [&#39;Latitude&#39;,&#39;Longitude&#39;,&#39;Introduced&#39;,&#39;Rural/urban&#39;,&#39;&#39;Altitude&#39;,&#39;Index of Multiple Deprivation&#39;,&#39;Average income&#39;] . Create a dataFrame from the data . dfCensus=pd.read_csv(str(patha),usecols=[&quot;Postcode&quot;,&quot;Ward Code&quot;,&quot;District Code&quot;,&#39;Latitude&#39;,&#39;Longitude&#39;,&#39;Introduced&#39;,&#39;Rural/urban&#39;,&#39;Altitude&#39;,&#39;Index of Multiple Deprivation&#39;,&#39;Average Income&#39;]) dfCensus . Postcode Latitude Longitude District Code ... Rural/urban Altitude Index of Multiple Deprivation Average Income . 0 SA1 1AA | 51.647984 | -3.923586 | W06000011 | ... | Urban city and town | 16.0 | 355 | 29200.0 | . 1 SA1 1AB | 51.618878 | -3.939834 | W06000011 | ... | Urban city and town | 10.0 | 1105 | 28600.0 | . 2 SA1 1AD | 51.618878 | -3.939834 | W06000011 | ... | Urban city and town | 10.0 | 1105 | 28600.0 | . 3 SA1 1AE | 51.618878 | -3.939834 | W06000011 | ... | Urban city and town | 10.0 | 1105 | 28600.0 | . 4 SA1 1AF | 51.619766 | -3.939424 | W06000011 | ... | Urban city and town | 13.0 | 36 | 28600.0 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | . 29399 SA99 1ZU | 51.669997 | -3.945445 | W06000011 | ... | Urban city and town | 132.0 | 1230 | 30500.0 | . 29400 SA99 1ZW | 51.669997 | -3.945445 | W06000011 | ... | Urban city and town | 132.0 | 1230 | 30500.0 | . 29401 SA99 1ZX | 51.669997 | -3.945445 | W06000011 | ... | Urban city and town | 132.0 | 1230 | 30500.0 | . 29402 SA99 1ZY | 51.669997 | -3.945445 | W06000011 | ... | Urban city and town | 132.0 | 1230 | 30500.0 | . 29403 SA99 1ZZ | 51.669997 | -3.945445 | W06000011 | ... | Urban city and town | 132.0 | 1230 | 30500.0 | . 29404 rows × 10 columns . Merge the two data frames . df=pd.merge(df,dfCensus) df.columns . Index([&#39;Date&#39;, &#39;Address&#39;, &#39;Postcode&#39;, &#39;Price&#39;, &#39;Type&#39;, &#39;Ownership&#39;, &#39;NewBuild&#39;, &#39;Latitude&#39;, &#39;Longitude&#39;, &#39;District Code&#39;, &#39;Ward Code&#39;, &#39;Introduced&#39;, &#39;Rural/urban&#39;, &#39;Altitude&#39;, &#39;Index of Multiple Deprivation&#39;, &#39;Average Income&#39;], dtype=&#39;object&#39;) . df.dtypes . Date object Address object Postcode object Price int64 Type object Ownership object NewBuild object Latitude float64 Longitude float64 District Code object Ward Code object Introduced object Rural/urban object Altitude float64 Index of Multiple Deprivation int64 Average Income float64 dtype: object . dfOrig=dfOrig.iloc[df.index] . Modify data ready for model . Add date details . From date get Year, Month, Week etc . df = add_datepart(df, &#39;Date&#39;) df.columns . Index([&#39;Address&#39;, &#39;Postcode&#39;, &#39;Price&#39;, &#39;Type&#39;, &#39;Ownership&#39;, &#39;NewBuild&#39;, &#39;Latitude&#39;, &#39;Longitude&#39;, &#39;District Code&#39;, &#39;Ward Code&#39;, &#39;Introduced&#39;, &#39;Rural/urban&#39;, &#39;Altitude&#39;, &#39;Index of Multiple Deprivation&#39;, &#39;Average Income&#39;, &#39;Year&#39;, &#39;Month&#39;, &#39;Week&#39;, &#39;Day&#39;, &#39;Dayofweek&#39;, &#39;Dayofyear&#39;, &#39;Is_month_end&#39;, &#39;Is_month_start&#39;, &#39;Is_quarter_end&#39;, &#39;Is_quarter_start&#39;, &#39;Is_year_end&#39;, &#39;Is_year_start&#39;, &#39;Elapsed&#39;], dtype=&#39;object&#39;) . Seperate details of address out . Want to sepaerate details of address so that . chx=&#39;Flat 30, Henllys, Wind Street, Swansea&#39; . gives modAdd(chx)=(&#39;Swansea&#39;, 900, &#39;Henllys&#39;) . Or . chx=&#39;15A Bethania Road, Upper Tumble&#39; . gives modAdd(chx)=(&#39;Upper Tumble&#39;, 15, &#39;Bethania Road&#39;) . def modAdd(address): import re split1 = address.split(&#39;,&#39;) if len(split1)&lt;2: split1 = address.split(&#39; &#39;) print(&#39;####&#39;,split1 ) FirstLine=split1[0] Region = split1[-1] try: Region=re.search(&quot;[A-Za-z][A-Za-z s]*&quot;,Region)[0] except: Region=Region try: HouseNo=re.search(&quot;[0-9]*&quot;,FirstLine) # print(HouseNo) HouseNo =int(HouseNo[0]) except: FirstLine=split1[1] HouseNo=re.search(&quot;[ s0-9]*&quot;,FirstLine) try: HouseNo =int(HouseNo[0]) except: HouseNo=900 try: Street=re.search(&quot; s[A-Za-z][A-Za-z s]*&quot;,FirstLine) Street=Street[0] Street=Street[1:] except: try: Street=split1[1] Street=re.search(&quot; s[A-Za-z][A-Za-z s]*&quot;,Street)[0] Street=Street[1:] except: Street=&#39;NA&#39; # print(FirstLine) # print(&#39;Region {} n Number {} n Street {} &#39;.format(Region,HouseNo,Street)) return Region,HouseNo,Street def addAdddets_df(df): Street,HouseNo,Region=[],[],[] for ita,oo in enumerate(df.index): addTemp=df.iloc[ita].Address RegionTemp,HouseNoTemp,StreetTemp=modAdd(addTemp) Region.append(RegionTemp) HouseNo.append(HouseNoTemp) Street.append(StreetTemp) df.insert(1,&#39;Street&#39;,Street) df.insert(1,&#39;HouseNo&#39;,HouseNo) df.insert(1,&#39;Region&#39;,Region) return df . try: df.drop(columns=[&#39;Street&#39;,&#39;HouseNo&#39;,&#39;Region&#39;],inplace=True) except: pass df=addAdddets_df(df) . Create train and validation sets . Do this randomly in this case 97:3 split . sza=np.shape(df)[0] randAr=np.random.randint(0,100, size=sza) cond = randAr&gt;=3 train_idx = np.where( cond)[0] valid_idx = np.where(~cond)[0] splits = (list(train_idx),list(valid_idx)) valid_idx.shape[0]/train_idx.shape[0] . Specify which column we are fitting to . dep_var = &#39;Price&#39; # for this fit to the log of it df[dep_var] = np.log(df[dep_var]) . Split into test and validation and convert to TabularPandas . cont,cat = cont_cat_split(df, 1, dep_var=dep_var) procs = [Categorify, FillMissing] to = TabularPandas(df, procs, cat, cont, y_names=dep_var, splits=splits) xs,y = to.train.xs,to.train.y valid_xs,valid_y = to.valid.xs,to.valid.y . What are the columns? . [ii for ii in to.all_col_names] . [&#39;Address&#39;, &#39;Region&#39;, &#39;Street&#39;, &#39;Postcode&#39;, &#39;Type&#39;, &#39;Ownership&#39;, &#39;NewBuild&#39;, &#39;District Code&#39;, &#39;Ward Code&#39;, &#39;Introduced&#39;, &#39;Rural/urban&#39;, &#39;Is_month_end&#39;, &#39;Is_month_start&#39;, &#39;Is_quarter_end&#39;, &#39;Is_quarter_start&#39;, &#39;Is_year_end&#39;, &#39;Is_year_start&#39;, &#39;HouseNo&#39;, &#39;Latitude&#39;, &#39;Longitude&#39;, &#39;Altitude&#39;, &#39;Index of Multiple Deprivation&#39;, &#39;Average Income&#39;, &#39;Year&#39;, &#39;Month&#39;, &#39;Week&#39;, &#39;Day&#39;, &#39;Dayofweek&#39;, &#39;Dayofyear&#39;, &#39;Elapsed&#39;, &#39;Price&#39;] . Some functions to fit or get results of fit . def r_mse(pred,y): return round(math.sqrt(((pred-y)**2).mean()), 6) def m_rmse(m, xs, y): return r_mse(m.predict(xs), y) def r_abs(pred,y): return round( (np.abs( np.exp(pred)-np.exp(y) ).mean()), 0) def m_abs(m, xs, y): return r_abs(m.predict(xs), y)/1000 def rf(xs, y, n_estimators=400, max_samples=100_000, max_features=0.5, min_samples_leaf=5, **kwargs): return RandomForestRegressor(n_jobs=-1, n_estimators=n_estimators, max_samples=max_samples, max_features=max_features, min_samples_leaf=min_samples_leaf, oob_score=True).fit(xs, y) . Fit the model and optimise . Basic model with 4 nodes . m = DecisionTreeRegressor(max_leaf_nodes=4) m.fit(xs, y); . m_rmse(m, xs, y),m_rmse(m, valid_xs, valid_y) . (0.511491, 0.503983) . Increase the number of leafs, reduces the errors . m = DecisionTreeRegressor(min_samples_leaf=25) m.fit(to.train.xs, to.train.y) m_rmse(m, xs, y), m_rmse(m, valid_xs, valid_y) . (0.338283, 0.370846) . Using the modified function above . m = rf(xs, y) m_rmse(m, xs_imp, y), m_rmse(m, valid_xs_imp, valid_y) . (0.287589, 0.335017) . Look at which columns are important . cluster_columns(xs) . . def rf_feat_importance(m, df): return pd.DataFrame({&#39;cols&#39;:df.columns, &#39;imp&#39;:m.feature_importances_} ).sort_values(&#39;imp&#39;, ascending=False) . fi = rf_feat_importance(m, xs) def plot_fi(fi): return fi.plot(&#39;cols&#39;, &#39;imp&#39;, &#39;barh&#39;, figsize=(12,7), legend=False) plot_fi(fi[:30]); . . Keep ones with most importance . Reduces columns to use from 30 to 17 . to_keep = fi[fi.imp&gt;0.01].cols len(to_keep),len(fi.cols) . (13, 30) . to_keep=to_keep[to_keep!=&#39;Address&#39;] . xs_imp = xs[to_keep] valid_xs_imp = valid_xs[to_keep] m_imp = rf(xs_imp, y) m_rmse(m_imp, xs_imp, y), m_rmse(m_imp, valid_xs_imp, valid_y) . (0.296979, 0.335829) . fi2 = rf_feat_importance(m_imp, xs_imp) def plot_fi(fi2): return fi2.plot(&#39;cols&#39;, &#39;imp&#39;, &#39;barh&#39;, figsize=(10,6), legend=False) plot_fi(fi2[:30]); . . Save the results . Combine the test and valid datasets . xsAll=pd.concat([xs_imp,valid_xs_imp]) yAll = pd.concat([y, valid_y]) . import os import pickle cda = os.getcwd() cda = cda + &#39; pickles &#39; # Saving the objects: with open(cda+&#39;RFrand_New4varB.pkl&#39;, &#39;wb&#39;) as f: pickle.dump([m_imp, to, xsAll, yAll], f) . np.exp(0.335829) . 1.3990997582955578 . Get the Predictions . Reload the data saved . import os import pickle with open(cda+&#39;RFrand_New4varB.pkl&#39;, &#39;rb&#39;)as f: m2, to2, xsAll2, yAll2 = pickle.load(f) . First need a way to convert sale date to today&#39;s date . Function takes the dataFrame and changes &#39;Date&#39; features to today&#39;s date Taken from fastai functions . def add_datepart(df, field_name, prefix=None, drop=True, time=False): &quot;Helper function that adds columns relevant to a date in the column `field_name` of `df`.&quot; import re import pandas as pd import numpy as np def ifnone(a, b): &quot;`b` if `a` is None else `a`&quot; return b if a is None else a def make_date(df, date_field): &quot;Make sure `df[date_field]` is of the right date type.&quot; field_dtype = df[date_field].dtype if isinstance(field_dtype, pd.core.dtypes.dtypes.DatetimeTZDtype): field_dtype = np.datetime64 if not np.issubdtype(field_dtype, np.datetime64): df[date_field] = pd.to_datetime(df[date_field], infer_datetime_format=True) make_date(df, field_name) field = df[field_name] prefix = ifnone(prefix, re.sub(&#39;[Dd]ate$&#39;, &#39;&#39;, field_name)) attr = [&#39;Year&#39;, &#39;Month&#39;, &#39;Week&#39;, &#39;Day&#39;, &#39;Dayofweek&#39;, &#39;Dayofyear&#39;, &#39;Is_month_end&#39;, &#39;Is_month_start&#39;, &#39;Is_quarter_end&#39;, &#39;Is_quarter_start&#39;, &#39;Is_year_end&#39;, &#39;Is_year_start&#39;] if time: attr = attr + [&#39;Hour&#39;, &#39;Minute&#39;, &#39;Second&#39;] # Pandas removed `dt.week` in v1.1.10 week = field.dt.isocalendar().week.astype(field.dt.day.dtype) if hasattr(field.dt, &#39;isocalendar&#39;) else field.dt.week for n in attr: df[prefix + n] = getattr(field.dt, n.lower()) if n != &#39;Week&#39; else week mask = ~field.isna() df[prefix + &#39;Elapsed&#39;] = np.where(mask,field.values.astype(np.int64) // 10 ** 9,np.nan) if drop: df.drop(field_name, axis=1, inplace=True) return df . The next function uses the above function to update the date details. . Then looks up the address given so that predictions can be made. This is because address are not in xsAll2 dataFrame . xsAll2.columns . Index([&#39;Elapsed&#39;, &#39;Type&#39;, &#39;Year&#39;, &#39;Index of Multiple Deprivation&#39;, &#39;Latitude&#39;, &#39;Average Income&#39;, &#39;Longitude&#39;, &#39;Introduced&#39;, &#39;Postcode&#39;, &#39;Altitude&#39;, &#39;HouseNo&#39;, &#39;Street&#39;], dtype=&#39;object&#39;) . colsNoDate=[ &#39;Type&#39;, &#39;Index of Multiple Deprivation&#39;, &#39;Latitude&#39;, &#39;Average Income&#39;, &#39;Longitude&#39;, &#39;Introduced&#39;, &#39;Postcode&#39;, &#39;Altitude&#39;, &#39;HouseNo&#39;, &#39;Street&#39;] colsDate=[&#39;Elapsed&#39;,&#39;Year&#39;] . def get_predTodayNotExact(m,address,toTEMP,xs_final,y): &quot;&quot;&quot; Given model m, address, initial pd of houses to, and adjusted pd xs_final output is house price prediction &quot;&quot;&quot; import copy colsAll=xs_final.columns #columns with dates need to remove colsDate=[&#39;Elapsed&#39;,&#39;Year&#39;] xsNoDate=copy.copy(xs_final.drop(columns=colsDate)) # add date part to dataframe xsNoDate[&#39;Date&#39;] = pd.to_datetime(&quot;today&quot;) xsNoDate = add_datepart(xsNoDate, &#39;Date&#39;) xs_finalTEMP=xsNoDate.loc[:,colsAll] # each address has a unique number aa=toTEMP.classes[&#39;Address&#39;] # findwhich number is address give (take 1st if more than 1) try: ii=[ii for ii,aa1 in enumerate(aa) if aa1== address][0] # 1 address can have multiple sales so we need index in dataframes ii=toTEMP[toTEMP[&#39;Address&#39;]==ii].index[0] preda = np.round( np.exp( m.predict(xs_finalTEMP.loc[ii:ii]) )/1000 ,1) prev = np.round( np.exp(y.loc[ii])/1000 ,1) typeAll=toTEMP.classes[&#39;Type&#39;] typa=typeAll[xs_finalTEMP.loc[ii:ii,&#39;Type&#39;]][0] except: aa=toTEMP.classes[&#39;Address&#39;] aaStreet=toTEMP.classes[&#39;Street&#39;] ii=[ii for ii,aa1 in enumerate(aaStreet) if aa1== Street][0] xsTemp=copy.copy( xs_finalTEMP[xs_finalTEMP[&#39;Street&#39;]==ii] ) xsTemp.reset_index(inplace=True,drop=True) # find nearest house by houseno No=np.array(xsTemp[&#39;HouseNo&#39;]) yo=(np.abs(No-HouseNo)) yo1=np.min(yo) # get index of the nearest house yo=No[yo==yo1][0] ii=[ii for ii,aa1 in enumerate(xsTemp.HouseNo) if aa1== yo][0] xsTemp.loc[ii:ii,&#39;HouseNo&#39;]=HouseNo # If want to change house type # xsTemp.loc[ii:ii,&#39;Type&#39;]=2 # print(xsTemp.loc[ii:ii,&#39;Type&#39;]) # print(xsTemp.loc[ii:ii]) preda = np.round( np.exp( m.predict(xsTemp.loc[ii:ii]) )/1000 ,1)[0] prev=0 typeAll=toTEMP.classes[&#39;Type&#39;] typa=typeAll[xsTemp.loc[ii:ii,&#39;Type&#39;]][0] return preda, prev, typa . address=&#39;20 Malvern Terrace, Brynmill&#39; get_predTodayNotExact(m2,address,to2,xsAll2,yAll2) . (array([180.1]), 54.5, &#39;Terraced&#39;) . Summary . def r_abs(pred,y): return round( (np.abs( np.exp(pred)-np.exp(y) ).mean()), 0) def m_abs(m, xs, y): return r_abs(m.predict(xs), y)/1000 m_abs(m2, xsAll2, yAll2)#, m_abs(m, valid_xs_final, valid_y) . 23.159 . The average error in price predictions is £23,000 . Which is comparable to values seen with regions and fairly good given the details of the houses used in the model are limited . This model is put into an app here https://thomashsimm.com/streamlit/randomforrests/houseprices/python/2022/02/23/SwanseaHousePriceApp.html .",
            "url": "https://thomashsimm.com/jupyter/python/randomforests/tabulardata/sklearn/2022/02/17/SwanseaHousePrices_Part2.html",
            "relUrl": "/jupyter/python/randomforests/tabulardata/sklearn/2022/02/17/SwanseaHousePrices_Part2.html",
            "date": " • Feb 17, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Working with videos",
            "content": ". Intoduction . Some bits of python code to use videos . Some imports . import pandas as pd import os import cv2 import numpy as np df = pd.read_pickle(loca) idUSE = 6 df1=df.loc[idUSE] . Youtube videos . Can have various issues so check https://pytube.io/en/latest/user/install.html if issues in use. . I used !pip install pytube then after a week I was getting errors. So in terminal I did . !pip install pytube then clone directory . git clone git://github.com/pytube/pytube.git and finally install . cd pytube python -m pip install . . Import the module, and here I&#39;ll use the golf dataset from another post . from pytube import YouTube ytID=df1[&#39;youtube_id&#39;] yt = YouTube(&#39;http://youtube.com/watch?v=&#39;+ytID) . The youtube object contains several videos in different formats. . yt.streams . [&lt;Stream: itag=&#34;17&#34; mime_type=&#34;video/3gpp&#34; res=&#34;144p&#34; fps=&#34;7fps&#34; vcodec=&#34;mp4v.20.3&#34; acodec=&#34;mp4a.40.2&#34; progressive=&#34;True&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;18&#34; mime_type=&#34;video/mp4&#34; res=&#34;360p&#34; fps=&#34;30fps&#34; vcodec=&#34;avc1.42001E&#34; acodec=&#34;mp4a.40.2&#34; progressive=&#34;True&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;22&#34; mime_type=&#34;video/mp4&#34; res=&#34;720p&#34; fps=&#34;30fps&#34; vcodec=&#34;avc1.64001F&#34; acodec=&#34;mp4a.40.2&#34; progressive=&#34;True&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;137&#34; mime_type=&#34;video/mp4&#34; res=&#34;1080p&#34; fps=&#34;30fps&#34; vcodec=&#34;avc1.640028&#34; progressive=&#34;False&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;248&#34; mime_type=&#34;video/webm&#34; res=&#34;1080p&#34; fps=&#34;30fps&#34; vcodec=&#34;vp9&#34; progressive=&#34;False&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;136&#34; mime_type=&#34;video/mp4&#34; res=&#34;720p&#34; fps=&#34;30fps&#34; vcodec=&#34;avc1.4d401f&#34; progressive=&#34;False&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;247&#34; mime_type=&#34;video/webm&#34; res=&#34;720p&#34; fps=&#34;30fps&#34; vcodec=&#34;vp9&#34; progressive=&#34;False&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;135&#34; mime_type=&#34;video/mp4&#34; res=&#34;480p&#34; fps=&#34;30fps&#34; vcodec=&#34;avc1.4d401f&#34; progressive=&#34;False&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;244&#34; mime_type=&#34;video/webm&#34; res=&#34;480p&#34; fps=&#34;30fps&#34; vcodec=&#34;vp9&#34; progressive=&#34;False&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;134&#34; mime_type=&#34;video/mp4&#34; res=&#34;360p&#34; fps=&#34;30fps&#34; vcodec=&#34;avc1.4d401e&#34; progressive=&#34;False&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;243&#34; mime_type=&#34;video/webm&#34; res=&#34;360p&#34; fps=&#34;30fps&#34; vcodec=&#34;vp9&#34; progressive=&#34;False&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;133&#34; mime_type=&#34;video/mp4&#34; res=&#34;240p&#34; fps=&#34;30fps&#34; vcodec=&#34;avc1.4d4015&#34; progressive=&#34;False&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;242&#34; mime_type=&#34;video/webm&#34; res=&#34;240p&#34; fps=&#34;30fps&#34; vcodec=&#34;vp9&#34; progressive=&#34;False&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;160&#34; mime_type=&#34;video/mp4&#34; res=&#34;144p&#34; fps=&#34;30fps&#34; vcodec=&#34;avc1.4d400c&#34; progressive=&#34;False&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;278&#34; mime_type=&#34;video/webm&#34; res=&#34;144p&#34; fps=&#34;30fps&#34; vcodec=&#34;vp9&#34; progressive=&#34;False&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;139&#34; mime_type=&#34;audio/mp4&#34; abr=&#34;48kbps&#34; acodec=&#34;mp4a.40.5&#34; progressive=&#34;False&#34; type=&#34;audio&#34;&gt;, &lt;Stream: itag=&#34;140&#34; mime_type=&#34;audio/mp4&#34; abr=&#34;128kbps&#34; acodec=&#34;mp4a.40.2&#34; progressive=&#34;False&#34; type=&#34;audio&#34;&gt;, &lt;Stream: itag=&#34;249&#34; mime_type=&#34;audio/webm&#34; abr=&#34;50kbps&#34; acodec=&#34;opus&#34; progressive=&#34;False&#34; type=&#34;audio&#34;&gt;, &lt;Stream: itag=&#34;250&#34; mime_type=&#34;audio/webm&#34; abr=&#34;70kbps&#34; acodec=&#34;opus&#34; progressive=&#34;False&#34; type=&#34;audio&#34;&gt;, &lt;Stream: itag=&#34;251&#34; mime_type=&#34;audio/webm&#34; abr=&#34;160kbps&#34; acodec=&#34;opus&#34; progressive=&#34;False&#34; type=&#34;audio&#34;&gt;] . . We can then filter the results based on criteria. By running yt.streams.filter?? we can see more on the code, as shown below . Signature: yt.streams.filter( fps=None, res=None, resolution=None, mime_type=None, type=None, subtype=None, file_extension=None, abr=None, bitrate=None, video_codec=None, audio_codec=None, only_audio=None, only_video=None, progressive=None, adaptive=None, is_dash=None, custom_filter_functions=None, ) . streams= yt.streams.filter(file_extension=&#39;mp4&#39;,res=&#39;360p&#39;) streams . [&lt;Stream: itag=&#34;18&#34; mime_type=&#34;video/mp4&#34; res=&#34;360p&#34; fps=&#34;30fps&#34; vcodec=&#34;avc1.42001E&#34; acodec=&#34;mp4a.40.2&#34; progressive=&#34;True&#34; type=&#34;video&#34;&gt;, &lt;Stream: itag=&#34;134&#34; mime_type=&#34;video/mp4&#34; res=&#34;360p&#34; fps=&#34;30fps&#34; vcodec=&#34;avc1.4d401e&#34; progressive=&#34;False&#34; type=&#34;video&#34;&gt;] . Download the stream . streams.first().download(filename=ytID+&#39;.mp4&#39;) . &#39;C: Users 44781 Documents GitHub THS_website _notebooks iPuVhnI8pJU.mp4&#39; . Video Player . To play the videos I&#39;ll be using VLC. There can be some issues with installing so I used the exe file from here https://get.videolan.org/vlc/3.0.11/win64/vlc-3.0.11-win64.exe . Another fix to install issues is inserting a line like os.add_dll_directory(&quot;Location anaconda3 Lib site-packages&quot;) into the script . More details of using VLC with Python can be found here https://bigl.es/tooling-tuesday-using-vlc-with-python/ . Importing vlc and creating a media object and then playing it. . import vlc vidLoc=ytID+&#39;.mp4&#39; media = vlc.MediaPlayer(vidLoc) media.play() . 0 . . .play opens a player as shown above. Note there is no pause/play/rewind buttons and the player cannot be closed. The only way to close is to use the command media.stop() or restart the kernel . media.stop() . To make it more like a standard video player the following can be used: . media.play() to play . | media.pause() to pause . | media.set_rate(3) to increase speed of video . | media.get_time() and media.set_time(5) to get and set the time of video . | media.stop() to close the video . | . Intsead of doing these on the command line it makes sense to have them as button presses. . I&#39;ll use easygui here as it&#39;s quite easy and I&#39;m not too bothered about the aesthetics or functionality. Because easygui is a bit clunky. https://bigl.es/tooling-tuesday-easygui/ . So to use create a easygui buttonbox with different features to control the video. Once clicked the button will then close (can&#39;t keep same button open with this) and open again. . import easygui while True: choice = easygui.buttonbox(title=&quot;@Golf Media Player&quot;, choices=[&quot;Play&quot;,&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&lt;&quot;,&quot;&gt;&gt;&quot;,&quot;&gt;&gt;&gt;&quot;,&quot;Pause&quot;,&quot;Stop&quot;]) if choice == &quot;Play&quot;: media.set_rate(1) media.play() elif choice == &quot;Pause&quot;: media.pause() elif choice ==&quot;&gt;&gt;&quot;: media.set_rate(2) elif choice==&quot;&gt;&gt;&gt;&quot;: media.set_rate(4) elif choice==&quot;&lt;&lt;&quot;: timo=media.get_time() timo=timo-2.5*1000 if timo&lt;0: timo=0 media.set_time(timo) elif choice==&quot;&lt;&lt;&lt;&quot;: timo=media.get_time() timo=timo-5*1000 if timo&lt;0: timo=0 media.set_time(timo) else: time_use = media.get_time()/1000 print(&#39;the time is {}&#39;.format(time_use)) media.stop() break . the time is 15.652 . . Extracting images from the video . To work with a video it is most often easier to convert it to an image. . To do this I&#39;ll use cv2 https://pypi.org/project/opencv-python/ . First we create a cv2 object of the video with cap = cv2.VideoCapture(vidLoc) then success, image = cap.read() to get images as we scroll through the frames, as shown below. . cap = cv2.VideoCapture(vidLoc) success, image = cap.read() while success: success, image = cap.read() print(success) . True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True True False . . Some useful features of the cap object that will be used are: . cap.get(cv2.CAP_PROP_POS_MSEC) the duration of the video . | cap.get(cv2.CAP_PROP_FRAME_COUNT) the frame count . | frame_count / fps the duration in seconds (the previous two divided) . | cv2.CAP_PROP_FRAME_WIDTH) frame width . | cv2.CAP_PROP_FRAME_HEIGHT) frame height . | cv2.copyMakeBorder() to create an image object to save and select which area of the video to save . | cv2.imwrite(fnom, img) to save the frame as an image . | . We could instead use other ways as shown https://learnopencv.com/read-write-and-display-a-video-using-opencv-cpp-python/ to extract images but I&#39;ll use the above . The below is modified from https://github.com/wmcnally/golfdb . It creates images at a given frame where the video is cropped based on the variable bbox (which is between 0 and 1) . Note also dim=600 which adjusts the size of the output image . def getImages(cap,bbox,frame_use): x = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH) * bbox[0]) y = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT) * bbox[1]) w = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH) * bbox[2]) h = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT) * bbox[3]) count = 0 success, image = cap.read() while success: count += 1 if abs(count-frame_use)==0: dim=600 crop_img = image[y:y + h, x:x + w] crop_size = crop_img.shape[:2] ratio = dim / max(crop_size) new_size = tuple([int(x*ratio) for x in crop_size]) resized = cv2.resize(crop_img, (new_size[1], new_size[0])) delta_w = dim - new_size[1] delta_h = dim - new_size[0] top, bottom = delta_h // 2, delta_h - (delta_h // 2) left, right = delta_w // 2, delta_w - (delta_w // 2) b_img = cv2.copyMakeBorder(resized, top, bottom, left, right, cv2.BORDER_CONSTANT, value=[0.406*255, 0.456*255, 0.485*255]) # ImageNet means (BGR) cv2.imwrite(os.path.join(ytID+str(count)+&quot;.jpg&quot;),b_img) elif count &gt; frame_use: break success, image = cap.read() . And to run the above function . cap = cv2.VideoCapture(vidLoc) getImages(cap,df1[&#39;bbox&#39;],100) . bbox . array([0.1453125 , 0.00138889, 0.46796875, 0.99930556]) . .",
            "url": "https://thomashsimm.com/jupyter/2021/12/16/WorkingWithVideos.html",
            "relUrl": "/jupyter/2021/12/16/WorkingWithVideos.html",
            "date": " • Dec 16, 2021"
        }
        
    
  
    
        ,"post4": {
            "title": "Body position recognition using FastAI",
            "content": ". Introduction . This is a first step in a project to analyse golf swings. . In this first step I try to identify different parts of the body and golf equipment during the golf swing. This step is of limited success for overall analysis but the steps used are useful for the lessons learnt. . This work uses deep learning to identify locations (vectors) on images and fitting by regression. . In this step I will use a dataSet found at Git Hub GolfSwing and the paper of the work https://arxiv.org/abs/1903.06528. . What this dataset/paper does is split the golf swing into a number of sequences based on the position of the body and golf club, e.g. start, golf club parallel to ground, striking the ball etc. We will call these the golf positions. These positions are shown below. . via GIPHY . . The dataset includes a series of videos that have been characterised based on the different swing sequences. . Steps in this page . Download the video dataset and the details of the frames of the different positions . | Create images at the different positions from the videos . | Classify points on the images and a file for each image of these . | Upload data to GitHub and download on notebook for analysis . | Use deep learning to identify the positions on the images . | Use the video analysis dataset to create images of golf swings . First I cloned the directory (https://github.com/wmcnally/golfdb) onto my local PC. I then need to identify which videos to use- I want the ones behind the golfer and preferably of lower frame rate. . Below are the names of the videos I selected . import numpy as np import os useVids=[1,3,5,7,13,24,43,46,48,71,77,81,83,89,93,242,681,1060] np.shape(useVids) . (18,) . I now want to find the frames in each video that represent the selected positions. . These exist in a &#39;.pkl&#39; file. So we open the file and then select the videos (rows) we want to use. . import pandas as pd import pickle file_path= cda + &quot; data golfDB.pkl&quot; . data = pickle.load(open(file_path,&quot;rb&quot;)) aa=[] i=0 for ii in useVids: if i==0: aa=data[ii==data.id] else: aa=aa.append(data[ii==data.id]) i=i+1 aa.reset_index(drop=True,inplace=True) aa.tail() . . In the DataFrame (aa) the details we want are just the &#39;events&#39; so we know what frames to save as images from the videos . First we create a function that takes a video location and details of the frames (or the selected golf positions) and then creates a new folder containing images of those frames. . This uses the library cv2 and a secondary check to normalise the positions if it is different from that given (this was useful in earlier versions but later ones the frame number matched that given by the aa dataFrame). . The function works by finding a frame rate then stepping through the video by adding the time per frame after each step. If the frame is at a position given by the input (from aa) it is saved as an image. . def createImages(fila,pos): &#39;&#39;&#39; Given a video file location (fila) it will save as images to a folder Given positions in video (pos) these images from the video are saved pos is created based on positions of swings &#39;&#39;&#39; import cv2 import numpy as np import os # create a video capture object cap = cv2.VideoCapture(fila) # get details of the video clip duration = cap.get(cv2.CAP_PROP_POS_MSEC) frame_count = cap.get(cv2.CAP_PROP_FRAME_COUNT) fps = cap.get(cv2.CAP_PROP_FPS) duration_seconds = frame_count / fps print(&#39;duration is &#39;,duration,&#39;. frame_count is &#39;,frame_count,&#39;. fps is &#39;,fps,&#39;. duration sec is&#39;,duration_seconds) #alter pos based on frame count posb4=pos pos=(pos/(np.max(pos)/frame_count)) pos=np.array([int(nn) for nn in pos]) pos=pos[1:-2]#ignore first value and last two # create a folder if it doesn&#39;t exist folder = fila.split(&#39; &#39;)[-1].split(&#39;.&#39;)[0] folder = &#39;_images&#39;+folder print(folder) try: os.mkdir(folder) except: pass vidcap = cap # this function creates an image from part of a video and # saves as a JPG file def getFrame(sec,go): vidcap.set(cv2.CAP_PROP_POS_MSEC,sec) hasFrames,image = vidcap.read() if hasFrames and go: cv2.imwrite(os.path.join(folder,&quot;frame{:d}.jpg&quot;.format(count)), image) # save frame as JPG file return hasFrames # goes through the video clip and steps through based on frame rate sec = 0 frameRate = 1000/fps count=1 go=0 success = True while success: count = count + 1 sec = sec + frameRate #only saves images if at positions in pos if count in pos: go=1 else: go=0 success = getFrame(sec,go) print(&quot;{} images are extacted in {}.&quot;.format(count,folder)) . And below I call the script for the videos I selected . import cv2 fila = cda + &#39; data videos_160 &#39; for ii,aai in enumerate(aa.id): fold = fila + str(aai)+&#39;.mp4&#39; pos=aa.iloc[ii,7] pos=pos-pos[0] if ii&gt;1: cII(fold,pos) cap = createImages.VideoCapture(fold) . So now we have a series of folders for each video with images given by the selected positions . Manually classify points on the images . To be able to perform analysis on the images they first need to be labelled. . To do this I decided to take the manual approach and classify the images myself. I decided to choose the following regions in each image: . The ball | The end of the golf club (clubhead) | The back wrist | the back elbow | the top of the head | . This is done using the follwing function . def imDo(im): fig=plt.figure(figsize=(20, 15)) plt.imshow(im) def tellme(s): print(s) plt.title(s, fontsize=16) tellme(&#39;You will define golf swing, click to begin&#39;) plt.waitforbuttonpress() while True: pts = [] while len(pts) &lt; 5: tellme(&#39;Select golf ball-golf club- wrist- elbow- head with mouse&#39;) pts = np.asarray(plt.ginput(5, timeout=-1)) if len(pts) &lt; 5: tellme(&#39;Too few points, starting over&#39;) time.sleep(1) # Wait a second ph = plt.plot(pts[:, 0], pts[:, 1], marker=&#39;x&#39;,markersize=20,markeredgewidth=3) tellme(&#39;Happy? Key click for yes, mouse click for no&#39;) if plt.waitforbuttonpress(): break plt.close(fig) return pts . Before we can call this function we want to make sure the image appears as a new window . Also some imports . import fastbook from fastbook import * from fastai.vision.all import * import matplotlib cda = os.getcwd() matplotlib.use(&#39;TKAgg&#39;) . Now for each image file created, the script below runs imDo which plots the image then asks the user to select 5 points on the image for classification. . these points are then save as txt file with the same name as the image file to be used later in modeling . . foldOuta=cda+&#39;//_dataSel//&#39; lsa = os.listdir(foldOuta) lsa ptsALL=[] for ii,folds in enumerate(lsa): if ii&gt;0: print(folds) img_files = get_image_files(foldOuta+folds) for fils in img_files: im = PILImage.create(fils) pts=imDo(im) ptsALL.append(pts) fnom=str(fils).split(&#39; &#39;)[-1].split(&#39;.&#39;)[0] np.savetxt(foldOuta+folds+&#39; &#39;+fnom+&#39;.txt&#39;,pts) . Upload data for use in modeling . Fastai has a function called untar_data that prepares images in a .tgz folder ready to use for analysis. . A tgz file can be made by a Python script, but all the ones I tried produced an error, so instead I used . To create a tar file see https://opensource.com/article/17/7/how-unzip-targz-file . Open up a terminal go to the folder that contains the folder wanting to compress and then tar with the command line . tar --create --verbose --file GC.tgz GolfComb . I have then uploaded it to GitHub. Go to the file on Github open it and right click on &#39;view raw&#39; and select copy link. . . Model the data . The rest needs to be done with a GPU. I have done this with https://colab.research.google.com/ (free time is limited but details not published) and the code tab for a notebook on https://www.kaggle.com/ (36 h per month for free) . First import the fastai stuff . !pip install -Uqq fastbook import fastbook fastbook.setup_book() from fastbook import * . from fastai.vision.all import * import os import re import numpy . untar the data and set the path . url=&#39;https://github.com/ThomasHSimm/GolfSwingTSimm/blob/main/_dataSel/GC.tgz?raw=true&#39; path = untar_data(url) . Path.BASE_PATH = path . Have a look at the data . (path/&#39;Test&#39;).ls() . . A function to classify the points on the image . Loads the text file for each image and returns a TensorPoint object of points on the image . def get_pointa_img(fileo): txtfile = str(fileo)[0:-4] + &#39;.txt&#39; # print(txtfile) pts=np.loadtxt(txtfile) pp=pts[-1,:] # print(pp) return TensorPoint(pp) . Create a DataBlock . The DataBlock is the foundation of the model. It needs to know . the location of the images, | the label for the images (points on images in this case) | separation of data into test and validation sets (done automatically if not specified) | the type of data used blocks=(ImageBlock, PointBlock) | any resizing of images | any transforms (Data Augmentation) | . item_tfms = [Resize(448, method=&#39;squish&#39;)] biwi = DataBlock( blocks=(ImageBlock, PointBlock), get_items=get_image_files, item_tfms=item_tfms, get_y=get_pointa_img, batch_tfms=[*aug_transforms(size=224, min_scale=0.75), Normalize.from_stats(*imagenet_stats)]) . Now create a DataLoaders object which has the path of the data and the batch size (here 30) . Batch size is important to specify to avoid memory issues . dls = biwi.dataloaders(path,30) . Now create the learner . Pass it the dataLoaders, we&#39;re doing transfer learning from resnet50 (imageNet trained model), what metrics we&#39;ll use for loss, and the range in y values we want . learn = cnn_learner(dls, resnet50, metrics=partial(accuracy_multi, thresh=0.02),y_range=(-1,1)) . Have a look at the data. Can see the transforms . dls.show_batch(max_n=8, figsize=(12,12)) . Find the best learning rate . learn.lr_find() . . To fit the model we have a few options: . learn.fit(10,lr=4e-3) | learn.fit_one_cycle() | learn.fine_tune(10, base_lr=1e-3, freeze_epochs=7) | learn.fine_tune(15, lr) | . FastAI adds an extra 2 layers on the end of neural network these can then be fitted using fine_tune. It is recommended to do a few fits frozen before unfreezing. This is normally the best option for transfer learning. . But the other ones can be used. In general fit can be more unstable and lead to bigger losses, but can be useful if fine_tune is not bringing losses down. . https://forums.fast.ai/t/fine-tune-vs-fit-one-cycle/66029/6 . fit_one_cycle = New Model fine_tuning = with Transfer Learning? I’d say yes but with a very strong but, only because it’s easy to fall into a trap that way. fine_tuning is geared towards transfer learning specifically, but you can also just do fit_one_cycle as well! (Or flat_cos). For beginners it’s a great starting fit function (and advanced too), but also don’t forget that you can then build on what that function is doing. For instance, I wonder how modifying/adapting that function for Ranger/flat_cos would need to change! . learn.fine_tune(10, base_lr=1e-3, freeze_epochs=7) . . learn.lr_find() . . Some more fitting, reducing the learning rate after steps . learn.fit(20,lr=1e-4) . . Some more fitting . Mixing fit with fine_tune and reducing learning rate seems to work best for reducing loss . Loss here is: . train_loss valid_loss 0.054042 0.008305 . Results . Look at the results, pretty good for ~10 mins of 81 images of learning although doesn&#39;t always get the top of the head. . learn.show_results() . . learn.export(fname=&#39;headTry1.pkl&#39;) . However, when this is generalised to other points, such as hands and clubhead, that are less static the results are poor. . Presumably a combination of the low resolution of the images making it difficult to identify features and the lack of images. . . Increasing the res of the images/videos improves the classification considerably. . But still not quite there, probably needs more labelling . train_loss valid_loss 0.030079 0.031188 . .",
            "url": "https://thomashsimm.com/jupyter/2021/12/01/GolfPos1FastAI.html",
            "relUrl": "/jupyter/2021/12/01/GolfPos1FastAI.html",
            "date": " • Dec 1, 2021"
        }
        
    
  
    
        ,"post5": {
            "title": "Web scraping",
            "content": ". Overview . Photo by Ilya Pavlov on Unsplash . &quot;Web scraping, web harvesting, or web data extraction is data scraping used for extracting data from websites.&quot; from https://en.wikipedia.org/wiki/Web_scraping . There are legal issues around web scraping, so be careful &quot;The legality of web scraping varies across the world. In general, web scraping may be against the terms of use of some websites, but the enforceability of these terms is unclear.&quot; . The first step is to go to a website and add /robots.txt onto the end of the web address to see what they allow. Most will disallow most areas. . I am only doing this for research and learning purposes and the information is all available freely. . Indeed, BeautifulSoup and Pandas . . Photo by Clem Onojeghuo on Unsplash . Indeed has a wealth of job information across the UK and beyond for virtually every job. So whether you are looking for work or examining economic activity, it is a good resource. But how do you get the data from the website into a form you can work with? . By web scraping Indeed . Examine the website . The first step in web scraping is to examine the website. Here I’ll use Google Chrome, but the same capabilities are in most browsers. Let’s open indeed and do a search for jobs in an area. The output is below . . When searching for “electrician mate” in the location Swansea we get the url https://uk.indeed.com/jobs?q=electrician+mate&amp;l=Swansea%2C+Swansea. . Hence, in Python we can specify the url as follows, this allows us to change for job type and location later if we want: . location=&quot;Swansea%2C+Swansea&quot; jobtype=&quot;electrician+mate&quot; URL=&quot;https://uk.indeed.com/jobs?q=&quot;+jobtype+&quot;&amp;l=&quot;+location URL . &#39;https://uk.indeed.com/jobs?q=electrician+mate&amp;l=Swansea%2C+Swansea&#39; . Next open developer tools on Chrome (Ctrl+Shift+I or More Tools-&gt; developer tools) . . Then click on the icon circled in the image below to examine the website. Placing the cursor over the website reveals the html structure. When this is done on one of the job blocks we can see that it is identified as: . &lt;div class=&quot;job_seen_beacon&quot;&gt; OR &lt;a id=&quot;..........&gt; . Examining other blocks shows this is repeated for them all. So we can get the job blocks! . We’ll return to this later… . BeautifulSoup . Beautiful soup (https://www.crummy.com/software/BeautifulSoup/bs4/doc/) is a Python library for pulling data out of HTML and XML files. Something similar can be done with pandas, but for this situation I’ll use the soup. . import requests import bs4 from bs4 import BeautifulSoup . To use: the libraries are loaded, then get get the page, then pass to Beautiful soup. . Soup can be viewed. But it is still a mess so we’ll now use what we learned about the job tabs and extract these. . #Using beautiful soup-get page page = requests.get(URL) #get soup soup = BeautifulSoup(page.text, &quot;html.parser&quot;) soup . &lt;!DOCTYPE html&gt; &lt;html&gt;&lt;head&gt;&lt;meta content=&#34;website&#34; property=&#34;og:type&#34;/&gt;&lt;meta content=&#34;Matmatch&#34; name=&#34;apple-mobile-web-app-title&#34;/&gt;&lt;meta content=&#34;Matmatch&#34; name=&#34;application-name&#34;/&gt;&lt;link href=&#34;/static/images/favicon/favicon-16x16.png&#34; rel=&#34;icon&#34; sizes=&#34;16x16&#34; type=&#34;image/png&#34;/&gt;&lt;link href=&#34;/static/images/favicon/favicon-32x32.png&#34; rel=&#34;icon&#34; sizes=&#34;32x32&#34; type=&#34;image/png&#34;/&gt;&lt;link href=&#34;/static/images/favicon/apple-touch-icon.png&#34; rel=&#34;apple-touch-icon&#34; sizes=&#34;180x180&#34;/&gt;&lt;link href=&#34;/static/images/favicon/manifest.json&#34; rel=&#34;manifest&#34;/&gt;&lt;link color=&#34;#526294}&#34; href=&#34;/static/images/favicon/safari-pinned-tab.svg&#34; rel=&#34;mask-icon&#34;/&gt;&lt;link href=&#34;/static/images/favicon/favicon.ico?v2=pgrv6keokB&#34; rel=&#34;shortcut icon&#34;/&gt;&lt;script src=&#34;https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js&#34;&gt;&lt;/script&gt;&lt;script&gt;WebFont.load({custom: {families: [&#34;Open Sans&#34;],urls: [&#34;/static/fonts/fonts.css&#34;]}});&lt;/script&gt;&lt;script type=&#34;application/ld+json&#34;&gt;{ &#34;@context&#34;: &#34;http://schema.org&#34;, &#34;@type&#34;: &#34;Corporation&#34;, &#34;name&#34;: &#34;Matmatch&#34;, &#34;url&#34;: &#34;https://matmatch.com&#34;, &#34;logo&#34;: &#34;https://matmatch.com/blog/wp-content/uploads/2019/01/matmatch_logo_stacked_large.png&#34;, &#34;contactPoint&#34;: { &#34;@type&#34;: &#34;ContactPoint&#34;, &#34;telephone&#34;: &#34;+49089262075200&#34;, &#34;contactType&#34;: &#34;customer service&#34;, &#34;availableLanguage&#34;: [&#34;English&#34;,&#34;Spanish&#34;,&#34;German&#34;] }, &#34;sameAs&#34;: [ &#34;https://www.facebook.com/MatmatchGmbH/&#34;, &#34;https://twitter.com/matmatchgmbh&#34;, &#34;https://www.youtube.com/channel/UCUaSuhkac7eIGDt_oslErqg&#34;, &#34;https://www.linkedin.com/company/matmatch/&#34; ] }&lt;/script&gt;&lt;meta charset=&#34;utf-8&#34;/&gt;&lt;meta content=&#34;initial-scale=1.0, width=device-width&#34; name=&#34;viewport&#34;/&gt;&lt;meta content=&#34;/static/images/og-homepage.png&#34; property=&#34;og:image&#34;/&gt;&lt;script&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({&#39;gtm.start&#39;: new Date().getTime(),event:&#39;gtm.js&#39;});var f=d.getElementsByTagName(s)[0], j=d.createElement(s),dl=l!=&#39;dataLayer&#39;?&#39;&amp;l=&#39;+l:&#39;&#39;;j.async=true;j.src= &#39;https://www.googletagmanager.com/gtm.js?id=&#39;+i+dl;f.parentNode.insertBefore(j,f); })(window,document,&#39;script&#39;,&#39;dataLayer&#39;,&#39;GTM-PV6RPFJ&#39;);&lt;/script&gt;&lt;script&gt;(function(i,s,o,g,r,a,m){i[&#39;GoogleAnalyticsObject&#39;]=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,&#39;script&#39;,&#39;https://www.google-analytics.com/analytics.js&#39;,&#39;ga&#39;); ga(&#39;create&#39;, &#39;UA-85033665-5&#39;, { &#39;cookieName&#39;: &#39;_ga&#39;, &#39;cookieExpires&#39;: 0, storeGac: false }); ga(&#39;require&#39;, &#39;GTM-KQK3NFF&#39;); ga(&#39;set&#39;, &#39;anonymizeIp&#39;, true); &lt;/script&gt;&lt;title&gt;Advanced Search - Matmatch&lt;/title&gt;&lt;meta content=&#34;6&#34; name=&#34;next-head-count&#34;/&gt;&lt;noscript data-n-css=&#34;&#34;&gt;&lt;/noscript&gt;&lt;script defer=&#34;&#34; nomodule=&#34;&#34; src=&#34;/_next/static/chunks/polyfills-5cd94c89d3acac5f.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;&#34; src=&#34;/_next/static/chunks/webpack-7f7ce7d3b611b805.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;&#34; src=&#34;/_next/static/chunks/framework-00d20ba7ea4a049e.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;&#34; src=&#34;/_next/static/chunks/main-e7e93353c7fa0f3d.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;&#34; src=&#34;/_next/static/chunks/pages/_app-d283c11d990f5118.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;&#34; src=&#34;/_next/static/chunks/4287-f7e14c54c16c4711.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;&#34; src=&#34;/_next/static/chunks/8423-5df76c682adf5f31.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;&#34; src=&#34;/_next/static/chunks/5345-398cd87d7cf78279.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;&#34; src=&#34;/_next/static/chunks/3789-912517a4e13b4a43.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;&#34; src=&#34;/_next/static/chunks/pages/advanced-search-2c198b26c959d4ab.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;&#34; src=&#34;/_next/static/d4287122/_buildManifest.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;&#34; src=&#34;/_next/static/d4287122/_ssgManifest.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;&#34; src=&#34;/_next/static/d4287122/_middlewareManifest.js&#34;&gt;&lt;/script&gt;&lt;style data-styled=&#34;&#34; data-styled-version=&#34;5.3.3&#34;&gt;html{line-height:1.15;-webkit-text-size-adjust:100%;}/*!sc*/ body{margin:0;}/*!sc*/ main{display:block;}/*!sc*/ h1{font-size:2em;margin:0.67em 0;}/*!sc*/ hr{box-sizing:content-box;height:0;overflow:visible;}/*!sc*/ pre{font-family:monospace,monospace;font-size:1em;}/*!sc*/ a{background-color:transparent;}/*!sc*/ abbr[title]{border-bottom:none;-webkit-text-decoration:underline;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;}/*!sc*/ b,strong{font-weight:bolder;}/*!sc*/ code,kbd,samp{font-family:monospace,monospace;font-size:1em;}/*!sc*/ small{font-size:80%;}/*!sc*/ sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;}/*!sc*/ sub{bottom:-0.25em;}/*!sc*/ sup{top:-0.5em;}/*!sc*/ img{border-style:none;}/*!sc*/ button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0;}/*!sc*/ button,input{overflow:visible;}/*!sc*/ button,select{text-transform:none;}/*!sc*/ button,[type=&#34;button&#34;],[type=&#34;reset&#34;],[type=&#34;submit&#34;]{-webkit-appearance:button;}/*!sc*/ button::-moz-focus-inner,[type=&#34;button&#34;]::-moz-focus-inner,[type=&#34;reset&#34;]::-moz-focus-inner,[type=&#34;submit&#34;]::-moz-focus-inner{border-style:none;padding:0;}/*!sc*/ button:-moz-focusring,[type=&#34;button&#34;]:-moz-focusring,[type=&#34;reset&#34;]:-moz-focusring,[type=&#34;submit&#34;]:-moz-focusring{outline:1px dotted ButtonText;}/*!sc*/ fieldset{padding:0.35em 0.75em 0.625em;}/*!sc*/ legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal;}/*!sc*/ progress{vertical-align:baseline;}/*!sc*/ textarea{overflow:auto;}/*!sc*/ [type=&#34;checkbox&#34;],[type=&#34;radio&#34;]{box-sizing:border-box;padding:0;}/*!sc*/ [type=&#34;number&#34;]::-webkit-inner-spin-button,[type=&#34;number&#34;]::-webkit-outer-spin-button{height:auto;}/*!sc*/ [type=&#34;search&#34;]{-webkit-appearance:textfield;outline-offset:-2px;}/*!sc*/ [type=&#34;search&#34;]::-webkit-search-decoration{-webkit-appearance:none;}/*!sc*/ ::-webkit-file-upload-button{-webkit-appearance:button;font:inherit;}/*!sc*/ details{display:block;}/*!sc*/ summary{display:list-item;}/*!sc*/ template{display:none;}/*!sc*/ [hidden]{display:none;}/*!sc*/ data-styled.g1[id=&#34;sc-global-ecVvVt1&#34;]{content:&#34;sc-global-ecVvVt1,&#34;}/*!sc*/ .uluvW{margin:0;overflow:hidden;list-type:none;padding:0;}/*!sc*/ data-styled.g7[id=&#34;list__List-sc-7ainlj-0&#34;]{content:&#34;uluvW,&#34;}/*!sc*/ .RbSSA{color :#fff;text-align:left;}/*!sc*/ .bzfZbQ{color :#fff;}/*!sc*/ .bzfZbQ:not(:last-child){margin-bottom:6px;}/*!sc*/ .cJazBI{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color :#fff;}/*!sc*/ .cJazBI:not(:last-child){margin-bottom:6px;}/*!sc*/ .gJZFKn{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color :#fff;}/*!sc*/ data-styled.g8[id=&#34;list__ListItem-sc-7ainlj-1&#34;]{content:&#34;RbSSA,bzfZbQ,cJazBI,gJZFKn,&#34;}/*!sc*/ .ghQHoL{max-width:100%;margin:0;font-size :28px;font-weight :600;color:#3a4056;}/*!sc*/ .fEFHaQ{max-width:100%;margin:0;font-size :15px;color:#3a4056;margin-bottom:36px;}/*!sc*/ .fcGhiO{max-width:100%;margin:0;font-size :15px;color :#3880E5;display :inline-block;cursor :pointer;-webkit-text-decoration:underline;text-decoration:underline;margin-left:24px;}/*!sc*/ .hJBnMN{max-width:100%;margin:0;font-size :16px;color :#ffffff;cursor :pointer;-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/ .hJBnMN:hover{color:#e0e0e0;}/*!sc*/ .kFbVgZ{max-width:100%;margin:0;font-size :15px;font-weight :600;color :white;margin:3.5999999999999996px;}/*!sc*/ .wmqFD{max-width:100%;margin:0;font-size :16px;font-weight :600;color :#526193;margin-bottom:12px;}/*!sc*/ .cJojhb{max-width:100%;margin:0;font-size :12px;color:#3a4056;text-align :center;margin-top:6px;}/*!sc*/ .dzDHxo{max-width:100%;margin:0;font-size :15px;color:#3a4056;}/*!sc*/ .dSdjdP{max-width:100%;margin:0;font-size :15px;color :#526193;}/*!sc*/ .ehJUxb{max-width:100%;margin:0;font-size :16px;color :#4f4f4f;white-space:nowrap;margin-right:12px;}/*!sc*/ .jLqxex{max-width:100%;margin:0;font-size :15px;font-weight :600;color :#526193;text-transform:uppercase;}/*!sc*/ .cgTHVD{max-width:100%;margin:0;font-size :13px;color :#333333;}/*!sc*/ .hjLFxX{max-width:100%;margin:0;font-size :13px;color:#3a4056;display :inline-block;margin-left:6px;}/*!sc*/ .ldWNpx{max-width:100%;margin:0;font-size :13px;font-weight :600;color :#3880E5;cursor :pointer;}/*!sc*/ .LLywI{max-width:100%;margin:0;font-size :13px;color :#333333;margin-bottom:6px;}/*!sc*/ .hjtwVq{max-width:100%;margin:0;font-size :16px;color :#333333;}/*!sc*/ .hLVIHw{max-width:100%;margin:0;font-size :15px;font-weight :600;color :#526193;margin-bottom:12px;}/*!sc*/ .KmEHA{max-width:100%;margin:0;font-size :13px;color :#333333;margin-left:6px;}/*!sc*/ .fWynpt{max-width:100%;margin:0;font-size :13px;color :#333333;display :inline-block;}/*!sc*/ .eUTBqM{max-width:100%;margin:0;font-size :16px;color :#ff8200;}/*!sc*/ .hMWWGw{max-width:100%;margin:0;font-size :16px;color :#828282;}/*!sc*/ .iidREl{max-width:100%;margin:0;font-size :13px;color :#828282;}/*!sc*/ .lolWkU{max-width:100%;margin:0;font-size :13px;color:#3a4056;display :inline-block;margin-right:6px;}/*!sc*/ .tenyk{max-width:100%;margin:0;font-size :20px;font-weight :600;color :#526193;}/*!sc*/ .GTisG{max-width:100%;margin:0;font-size :16px;color :#333333;display :inline-block;margin-left:12px;}/*!sc*/ data-styled.g10[id=&#34;text__Text-sc-f4nboj-0&#34;]{content:&#34;ghQHoL,fEFHaQ,fcGhiO,hJBnMN,kFbVgZ,wmqFD,cJojhb,dzDHxo,dSdjdP,ehJUxb,jLqxex,cgTHVD,hjLFxX,ldWNpx,LLywI,hjtwVq,hLVIHw,KmEHA,fWynpt,eUTBqM,hMWWGw,iidREl,lolWkU,tenyk,GTisG,&#34;}/*!sc*/ .ipttFt{cursor:pointer;color:#03c7a7;display:block;margin:0 auto;}/*!sc*/ .ipttFt:hover{color:#02a187;-webkit-undefined;-ms-flex-undefined;undefined;}/*!sc*/ .eYFpTR{cursor:pointer;color:#03c7a7;}/*!sc*/ .eYFpTR:hover{-webkit-undefined;-ms-flex-undefined;undefined;}/*!sc*/ .eePTOF{cursor:pointer;color:#03c7a7;display:block;}/*!sc*/ .eePTOF:hover{color:#02a187;-webkit-undefined;-ms-flex-undefined;undefined;}/*!sc*/ .fpFFKD{cursor:pointer;color:#03c7a7;}/*!sc*/ .fpFFKD:hover{color:#02a187;-webkit-undefined;-ms-flex-undefined;undefined;}/*!sc*/ .QbWNQ{cursor:pointer;color:#3880E5;display:block;font-weight:600;}/*!sc*/ .QbWNQ:hover{-webkit-undefined;-ms-flex-undefined;undefined;}/*!sc*/ .dhcylR{cursor:pointer;color:#333333;font-size:13px;font-weight:600;}/*!sc*/ .dhcylR:hover{-webkit-undefined;-ms-flex-undefined;undefined;}/*!sc*/ .kdVFv{cursor:pointer;color:#333333;}/*!sc*/ .kdVFv:hover{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/ data-styled.g18[id=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0&#34;]{content:&#34;ipttFt,eYFpTR,eePTOF,fpFFKD,QbWNQ,dhcylR,kdVFv,&#34;}/*!sc*/ .jkkDbK{background-position:center;background-repeat:no-repeat;background-color:transparent;background-image:url(&#39;/static/images/inlined/logo_inverted.svg&#39;);width:167px;height:37px;}/*!sc*/ .dOZIXC{background-position:center;background-repeat:no-repeat;background-color:transparent;background-image:url(&#39;/static/images/inlined/logo_inverted.svg&#39;);width:95px;height:22px;}/*!sc*/ data-styled.g20[id=&#34;styled-link-styles__ImageLinkStyles-sc-l1ctuc-2&#34;]{content:&#34;jkkDbK,dOZIXC,&#34;}/*!sc*/ .lhTnpm{cursor:pointer;text-align:center;display:inline-block;padding:6px 12px;-webkit-transition:background-color 0.15s;transition:background-color 0.15s;border-radius:4px;padding:14.399999999999999px 18px;font-size:16px;font-weight:600;}/*!sc*/ .MSVaf{cursor:pointer;text-align:center;display:inline-block;padding:6px 12px;-webkit-transition:background-color 0.15s;transition:background-color 0.15s;border-radius:4px;}/*!sc*/ .kPiOHq{cursor:pointer;text-align:center;display:inline-block;padding:6px 12px;-webkit-transition:background-color 0.15s;transition:background-color 0.15s;width:100%;padding:18px 24px;font-size:20px;font-weight:600;}/*!sc*/ .NWGvI{cursor:pointer;text-align:center;display:inline-block;padding:6px 12px;-webkit-transition:background-color 0.15s;transition:background-color 0.15s;border-radius:4px;width:100%;}/*!sc*/ .eGHzTm{cursor:pointer;text-align:center;display:inline-block;padding:6px 12px;-webkit-transition:background-color 0.15s;transition:background-color 0.15s;border-radius:4px;opacity:0.7;pointer-events:none;background-repeat:no-repeat;background-size:12px;background-image:url(&#34;/static/images/icons/2.0/white/arrow-back.svg&#34;);padding:14.399999999999999px 18px;background-position:center;margin-right:24px;}/*!sc*/ .ljvJNw{cursor:pointer;text-align:center;display:inline-block;padding:6px 12px;-webkit-transition:background-color 0.15s;transition:background-color 0.15s;border-radius:4px;background-repeat:no-repeat;background-size:12px;background-image:url(&#34;/static/images/icons/2.0/white/arrow-forward.svg&#34;);padding:14.399999999999999px 18px;background-position:center;margin-left:24px;}/*!sc*/ data-styled.g29[id=&#34;button__BaseButton-sc-ekfcy0-0&#34;]{content:&#34;lhTnpm,MSVaf,kPiOHq,NWGvI,eGHzTm,ljvJNw,&#34;}/*!sc*/ .nqeas{color:#ffffff;background-color:#3880E5;border:1px solid #4c8de8;}/*!sc*/ data-styled.g30[id=&#34;button__ButtonPrimary-sc-ekfcy0-1&#34;]{content:&#34;nqeas,&#34;}/*!sc*/ .kTlrHY{color:#ffffff;border:1px solid #bdbdbd;background-color:#828282;}/*!sc*/ data-styled.g31[id=&#34;button__ButtonDefault-sc-ekfcy0-2&#34;]{content:&#34;kTlrHY,&#34;}/*!sc*/ .juQzaQ{color:#ffffff;border:1px solid #ffd8af;background-color:#ff8200;}/*!sc*/ .juQzaQ:hover{background-color:#cc6900;}/*!sc*/ data-styled.g33[id=&#34;button__ButtonSpecial-sc-ekfcy0-4&#34;]{content:&#34;juQzaQ,&#34;}/*!sc*/ .gKwwSj{color:#ffffff;border:1px solid #7cd16d;background-color:#67ac5b;}/*!sc*/ .gKwwSj:hover{background-color:#48A43F;}/*!sc*/ data-styled.g34[id=&#34;button__ButtonSuccess-sc-ekfcy0-5&#34;]{content:&#34;gKwwSj,&#34;}/*!sc*/ .jUHcrU{display:inline-block;cursor:pointer;}/*!sc*/ .hrfsee{margin-bottom:24px;}/*!sc*/ .hrfsee:after{content:&#34; &#34;;display:block;height:0;clear:both;}/*!sc*/ .cdlmON:after{content:&#34; &#34;;display:block;height:0;clear:both;}/*!sc*/ .zDQjJ{margin-bottom:24px;}/*!sc*/ .kneKJ{text-align:center;}/*!sc*/ .kTmWRN{margin-left:24px;}/*!sc*/ .kqTmue{width :438px;}/*!sc*/ .UxvCa{margin-top:6px;margin-bottom:6px;}/*!sc*/ .bcLXBB{margin-bottom:6px;}/*!sc*/ .bRaHnE{margin-bottom:12px;}/*!sc*/ .dTGKOg{margin-left:12px;}/*!sc*/ .kXMRZj{max-width :1170px;margin :0 auto;}/*!sc*/ .eHEnyb{max-width :1200px;margin :0 auto;}/*!sc*/ data-styled.g38[id=&#34;wrappers__Wrapper-sc-14fw43j-0&#34;]{content:&#34;cJNByu,jUHcrU,hrfsee,cdlmON,zDQjJ,kneKJ,kTmWRN,kqTmue,UxvCa,bcLXBB,bRaHnE,dTGKOg,kXMRZj,eHEnyb,&#34;}/*!sc*/ .hFcCJB{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/ .gFqwTB{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content :space-between;-ms-flex-pack:justify;justify-content :space-between;}/*!sc*/ .dMXLyl{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}/*!sc*/ .cwHZQB{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content :space-between;-ms-flex-pack:justify;justify-content :space-between;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}/*!sc*/ .cdLigN{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content :space-between;-ms-flex-pack:justify;justify-content :space-between;}/*!sc*/ data-styled.g41[id=&#34;wrappers__WrapperFlex-sc-14fw43j-3&#34;]{content:&#34;hFcCJB,gFqwTB,dMXLyl,cwHZQB,cdLigN,&#34;}/*!sc*/ .hzZiwD{max-width:1400px;margin:0 auto;padding:36px;}/*!sc*/ @media (max-width:991.98px){.hzZiwD{width:100%;}}/*!sc*/ @media (max-width:767.98px){.hzZiwD{width:100%;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;min-height:0px;}}/*!sc*/ @media (max-width:575.98px){.hzZiwD{padding:0px;min-height:0px;}}/*!sc*/ data-styled.g42[id=&#34;wrappers__WrapperStaticContent-sc-14fw43j-4&#34;]{content:&#34;hzZiwD,&#34;}/*!sc*/ .flfCwz{overflow:hidden;max-width:1400px;margin:0 auto;padding:36px;}/*!sc*/ @media (max-width:991.98px){.flfCwz{width:100%;}}/*!sc*/ @media (max-width:767.98px){.flfCwz{width:100%;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;min-height:0px;}}/*!sc*/ @media (max-width:575.98px){.flfCwz{padding:0px;min-height:0px;}}/*!sc*/ data-styled.g43[id=&#34;wrappers__WrapperStaticContentNoFlex-sc-14fw43j-5&#34;]{content:&#34;flfCwz,&#34;}/*!sc*/ .prlvG{width:calc((100% - 42px) * 0.7);margin-right:0px;margin-left:42px;float:left;}/*!sc*/ @media (max-width:991.98px){.prlvG{margin-top:24px;margin-left:0;margin-right:0;width:100%;}}/*!sc*/ data-styled.g47[id=&#34;wrappers__WrapperMainContent-sc-14fw43j-9&#34;]{content:&#34;prlvG,&#34;}/*!sc*/ .fUzxei{width:calc((100% - 42px) * 0.4);float:left;-webkit-transition:width 0.5s;transition:width 0.5s;}/*!sc*/ @media (max-width:991.98px){.fUzxei{width:100%;}}/*!sc*/ data-styled.g48[id=&#34;wrappers__WrapperSidebar-sc-14fw43j-10&#34;]{content:&#34;fUzxei,&#34;}/*!sc*/ .ftzCdl{max-height:0px;overflow:hidden;-webkit-transition:max-height .2s;transition:max-height .2s;}/*!sc*/ data-styled.g50[id=&#34;wrappers__CollapseContentWrapper-sc-14fw43j-12&#34;]{content:&#34;ftzCdl,&#34;}/*!sc*/ .ejKxFX{color:#ffffff;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background:#ff8200;width:36px;height:18px;border-radius:12px;-webkit-text-decoration:none;text-decoration:none;font-size:12px;margin-left:3px;}/*!sc*/ data-styled.g52[id=&#34;badge__LinkBadge-sc-1kc0y45-0&#34;]{content:&#34;ejKxFX,&#34;}/*!sc*/ .iIAlRS{width:25%;}/*!sc*/ @media (max-width:767.98px){.iIAlRS{float:left;width:50%;margin-top:24px;}}/*!sc*/ data-styled.g53[id=&#34;footer-list__FooterListWrapper-sc-17tjnty-0&#34;]{content:&#34;iIAlRS,&#34;}/*!sc*/ .gFyZtw{margin-bottom:12px;}/*!sc*/ data-styled.g54[id=&#34;footer-list__FooterListHeading-sc-17tjnty-1&#34;]{content:&#34;gFyZtw,&#34;}/*!sc*/ @media (max-width:767.98px){.jHUSlK{display:block;}}/*!sc*/ data-styled.g69[id=&#34;footer-copyright__FooterCopyrightWrapper-sc-p1jkef-0&#34;]{content:&#34;jHUSlK,&#34;}/*!sc*/ .EMFJO{background-size:contain;background-repeat:no-repeat;background-position:center;display:inline-block;cursor:pointer;height:24px;width:24px;background-image:url(&#34;/static/images/icons/white/search.svg&#34;);}/*!sc*/ .gpNPvA{background-size:contain;background-repeat:no-repeat;background-position:center;display:inline-block;cursor:pointer;height:24px;width:24px;background-image:url(&#34;/static/images/icons/2.0/white/ios-world-outline.svg&#34;);}/*!sc*/ .bZBKhy{background-size:contain;background-repeat:no-repeat;background-position:center;display:inline-block;cursor:pointer;height:30px;width:30px;background-image:url(&#34;/static/images/icons/2.0/default/arrow-up.svg&#34;);}/*!sc*/ .cXnjPW{background-size:contain;background-repeat:no-repeat;background-position:center;display:inline-block;cursor:pointer;height:24px;width:30px;background-image:url(&#34;/static/images/icons/2.0/white/ios-search-strong.svg&#34;);}/*!sc*/ .eyhBpa{background-size:contain;background-repeat:no-repeat;background-position:center;display:inline-block;cursor:pointer;height:22px;width:22px;background-image:url(&#34;/static/images/icons/2.0/white/android-menu.svg&#34;);}/*!sc*/ .kbRKml{background-size:contain;background-repeat:no-repeat;background-position:center;display:inline-block;cursor:pointer;height:14px;width:14px;background-image:url(&#34;/static/images/icons/2.0/primary/ios-arrow-down.svg&#34;);margin-left:6px;}/*!sc*/ .iNazJp{background-size:contain;background-repeat:no-repeat;background-position:center;display:inline-block;cursor:pointer;height:12px;width:12px;background-image:url(&#34;/static/images/icons/2.0/primary/ios-arrow-down.svg&#34;);margin-left:6px;}/*!sc*/ .eiXgPa{background-size:contain;background-repeat:no-repeat;background-position:center;display:inline-block;cursor:pointer;height:10px;width:10px;background-image:url(&#34;/static/images/icons/2.0/white/plus.svg&#34;);margin-left:6px;}/*!sc*/ .kXkjMs{background-size:contain;background-repeat:no-repeat;background-position:center;display:inline-block;cursor:pointer;height:12px;width:12px;background-image:url(&#34;/static/images/icons/2.0/default/close.svg&#34;);margin-right:12px;}/*!sc*/ .kTando{background-size:contain;background-repeat:no-repeat;background-position:center;display:inline-block;cursor:unset;height:20px;width:20px;margin-right:12px;background-image:url(&#34;/static/images/icons/2.0/multicolor/default.svg&#34;);}/*!sc*/ .duJtpp{background-size:contain;background-repeat:no-repeat;background-position:center;display:inline-block;cursor:pointer;height:30px;width:30px;background-image:url(&#34;/static/images/icons/2.0/footer/social-linkedin.svg&#34;);}/*!sc*/ .UGQFe{background-size:contain;background-repeat:no-repeat;background-position:center;display:inline-block;cursor:pointer;height:30px;width:30px;background-image:url(&#34;/static/images/icons/2.0/footer/social-twitter.svg&#34;);}/*!sc*/ .bfOfuL{background-size:contain;background-repeat:no-repeat;background-position:center;display:inline-block;cursor:pointer;height:30px;width:30px;background-image:url(&#34;/static/images/icons/2.0/footer/social-facebook.svg&#34;);}/*!sc*/ .cnxXUV{background-size:contain;background-repeat:no-repeat;background-position:center;display:inline-block;cursor:default;height:16px;width:16px;background-image:url(&#34;/static/images/icons/2.0/footer/ios-telephone.svg&#34;);}/*!sc*/ .jLgsnQ{background-size:contain;background-repeat:no-repeat;background-position:center;display:inline-block;cursor:default;height:16px;width:16px;background-image:url(&#34;/static/images/icons/2.0/footer/ios-location.svg&#34;);}/*!sc*/ data-styled.g70[id=&#34;icon__Icon-sc-1230ehg-0&#34;]{content:&#34;EMFJO,gpNPvA,bZBKhy,cXnjPW,eyhBpa,kbRKml,iNazJp,eiXgPa,kXkjMs,kTando,duJtpp,UGQFe,bfOfuL,cnxXUV,jLgsnQ,&#34;}/*!sc*/ .caVxgD{width:20px;height:20px;fill:#3880E5;stroke:none;stroke-linecap:round;stroke-linejoin:round;stroke-width:default;cursor:pointer;}/*!sc*/ .jWARuS{width:20px;height:20px;fill:#526193;stroke:none;stroke-linecap:round;stroke-linejoin:round;stroke-width:default;}/*!sc*/ .fXOOJz{width:32px;height:32px;fill:#3880e5;stroke:none;stroke-linecap:round;stroke-linejoin:round;stroke-width:default;}/*!sc*/ .haqEoE{width:14px;height:14px;fill:#333333;stroke:none;stroke-linecap:round;stroke-linejoin:round;stroke-width:default;cursor:pointer;}/*!sc*/ .hrGMmp{width:12px;height:12px;fill:#4496ec;stroke:none;stroke-linecap:round;stroke-linejoin:round;stroke-width:default;cursor:pointer;}/*!sc*/ .enTUov{width:28px;height:22px;fill:#4496ec;stroke:none;stroke-linecap:round;stroke-linejoin:round;stroke-width:default;cursor:pointer;margin-left:9px;}/*!sc*/ data-styled.g71[id=&#34;icon__Svg-sc-1230ehg-1&#34;]{content:&#34;caVxgD,jWARuS,fXOOJz,haqEoE,hrGMmp,enTUov,&#34;}/*!sc*/ @media (max-width:991.98px){.hwyVjw{-webkit-flex-basis:100%;-ms-flex-preferred-size:100%;flex-basis:100%;margin-top:48px;}}/*!sc*/ @media (max-width:767.98px){.hwyVjw{width:100%;display:inline-block;margin-top:24px;}}/*!sc*/ data-styled.g76[id=&#34;footer-social-links__SocialLinksList-sc-1hjdthk-0&#34;]{content:&#34;hwyVjw,&#34;}/*!sc*/ .jkNDpJ{display:inline-block;}/*!sc*/ .jkNDpJ:not(:first-child){margin-left:42px;}/*!sc*/ @media{.jkNDpJ:not(:first-child){margin-left:30px;}}/*!sc*/ data-styled.g77[id=&#34;footer-social-links__SocialLinksListItem-sc-1hjdthk-1&#34;]{content:&#34;jkNDpJ,&#34;}/*!sc*/ .lcDCgL{width:25%;}/*!sc*/ @media (max-width:767.98px){.lcDCgL{width:100%;}}/*!sc*/ data-styled.g78[id=&#34;footer-matmatch-logo-and-gdpr__NameAndDescriptionWrapper-sc-1mbx1ll-0&#34;]{content:&#34;lcDCgL,&#34;}/*!sc*/ .dLmbUA{border:none;height:1px;margin-top:24px;margin-bottom:24px;margin-top:12px;margin-bottom:12px;}/*!sc*/ .cVgbLf{border:none;height:1px;margin-top:24px;margin-bottom:24px;margin-top:12px;margin-left:36px;margin-right:36px;margin-bottom:12px;}/*!sc*/ data-styled.g79[id=&#34;separation-line__SeparationLine-sc-1gtqai2-0&#34;]{content:&#34;dLmbUA,cVgbLf,&#34;}/*!sc*/ .kwnPiJ{color:#bdbdbd;background-color:#bdbdbd;}/*!sc*/ data-styled.g80[id=&#34;separation-line__SeparationLineDefault-sc-1gtqai2-1&#34;]{content:&#34;kwnPiJ,&#34;}/*!sc*/ .fGzocz{width:100%;padding:0 12px;margin:0;}/*!sc*/ @media (min-width:768px){.fGzocz{padding-left:24px;padding-right:24px;}}/*!sc*/ @media (min-width:1170px){.fGzocz{max-width:1170px;margin-left:auto;margin-right:auto;}}/*!sc*/ data-styled.g84[id=&#34;static-page-wrappers__StaticPageContentWrapper-sc-fz58vx-1&#34;]{content:&#34;fGzocz,&#34;}/*!sc*/ .kUuTvA{padding:96px 0;background-color:#fcfcfd;}/*!sc*/ @media (max-width:767.98px){.kUuTvA{padding:36px 0;}}/*!sc*/ data-styled.g89[id=&#34;footer-container__FooterContainer-sc-16jfcf3-0&#34;]{content:&#34;kUuTvA,&#34;}/*!sc*/ html{-webkit-tap-highlight-color:transparent;}/*!sc*/ body{background-color:#fcfcfd;color:#3a4056;font-family:&#39;Open Sans&#39;,sans-serif;font-size:15px;line-height:1.6;}/*!sc*/ *,:after,:before{box-sizing:border-box;margin:0;}/*!sc*/ img{max-height:100%;max-width:100%;}/*!sc*/ a{color:#3880e5;-webkit-text-decoration:none;text-decoration:none;border:none;background:none;padding:0;}/*!sc*/ body.body-noscroll{overflow:hidden;}/*!sc*/ button{cursor:pointer;-webkit-appearance:button;outline:none;}/*!sc*/ div.DraftEditor-root{padding:12px;border:1px solid #3a4056;color:#3a4056;}/*!sc*/ div.about-google-map{height:100%;}/*!sc*/ .description ul{list-style-type:none;padding-left:24px;}/*!sc*/ @media (max-width:767.98px){.description ul{padding-left:12px;}}/*!sc*/ .description ol{padding-left:40px;}/*!sc*/ @media (max-width:767.98px){.description ol{padding-left:28px;}}/*!sc*/ .description ul li{position:relative;padding-left:16px;}/*!sc*/ .description ul li:before{width:8px;height:8px;border-radius:4px;background-color:#03c7a7;content:&#39;&#39;;margin-top:9px;position:absolute;left:0;}/*!sc*/ .write-message div.DraftEditor-root,.render-message div.DraftEditor-root{border:none;height:80%;overflow-y:auto;}/*!sc*/ .write-message div.DraftEditor-editorContainer,.render-message div.DraftEditor-editorContainer{height:100%;}/*!sc*/ .write-message div.public-DraftEditor-content,.render-message div.public-DraftEditor-content{height:100%;}/*!sc*/ .write-message-retargeting div.DraftEditor-root{border:none;height:100%;overflow-y:auto;}/*!sc*/ .write-message-retargeting div.DraftEditor-editorContainer{height:100%;}/*!sc*/ .write-message-retargeting div.public-DraftEditor-content{height:100%;}/*!sc*/ .grecaptcha-badge{visibility:hidden;}/*!sc*/ .hiddenBlockQuote{display:none;}/*!sc*/ .particle-table{width:100%;text-align:left;margin:24px 0;}/*!sc*/ data-styled.g90[id=&#34;sc-global-hpWtfi1&#34;]{content:&#34;sc-global-hpWtfi1,&#34;}/*!sc*/ .OhGlj{cursor:pointer;border-radius:2px;vertical-align:top;display:inline-block;background-color:#ffffff;width:18px;height:18px;min-width:18px;border:1px solid #828282;margin-right:6px;}/*!sc*/ .bBVMlc{cursor:pointer;border-radius:2px;vertical-align:top;display:inline-block;background-color:#ffffff;width:18px;height:18px;min-width:18px;border:1px solid #828282;margin-left:6px;}/*!sc*/ .kurrkX{cursor:pointer;border-radius:2px;vertical-align:top;display:inline-block;background-color:#ffffff;width:18px;height:18px;min-width:18px;border:1px solid #828282;}/*!sc*/ data-styled.g156[id=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0&#34;]{content:&#34;OhGlj,bBVMlc,kurrkX,&#34;}/*!sc*/ .dsaEue{cursor:pointer;border-radius:2px;vertical-align:top;display:inline-block;background-color:#ffffff;width:18px;height:18px;min-width:18px;border:1px solid #828282;background-size:contain;background-repeat:no-repeat;background-color:#3880E5;background-image:url(&#34;/static/images/icons/2.0/white/minus.svg&#34;);margin-left:6px;}/*!sc*/ data-styled.g157[id=&#34;check-box__MinusCheckboxDesign-sc-1ptpc08-1&#34;]{content:&#34;dsaEue,&#34;}/*!sc*/ .eajQMm{color:#ffffff;font-size:13px;margin-left:12px;border-radius:12px;padding:0 6px;background-color:#333333;}/*!sc*/ data-styled.g168[id=&#34;advanced-search-count-number__CountNumber-sc-8hlubs-0&#34;]{content:&#34;eajQMm,&#34;}/*!sc*/ .bhkHlB{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:6px 0px;padding-left:0px;}/*!sc*/ data-styled.g169[id=&#34;tree-item__TreeItem-sc-1ndoqn1-0&#34;]{content:&#34;bhkHlB,&#34;}/*!sc*/ .djLvdn{list-style-type:none;padding-inline-start:0px;}/*!sc*/ data-styled.g170[id=&#34;tree-renderer__TreeWrapper-sc-wdfwzn-0&#34;]{content:&#34;djLvdn,&#34;}/*!sc*/ .gslBUi{display:inline-block;cursor:pointer;width:45px;height:20px;border-radius:10px;-webkit-animation:cpCHCi 0.5s linear;animation:cpCHCi 0.5s linear;background:#67ac5b;border:1px solid #67ac5b;}/*!sc*/ data-styled.g178[id=&#34;toggle__ToggleWrapper-sc-th0yzv-0&#34;]{content:&#34;gslBUi,&#34;}/*!sc*/ .hbpQfU{display:inline-block;position:relative;left:5px;width:14px;height:18px;background-size:contain;background-repeat:no-repeat;background-position:center;background-image:url(&#34;/static/images/icons/2.0/white/checkmark.svg&#34;);opacity:1;-webkit-transition:opacity 0.5s;transition:opacity 0.5s;}/*!sc*/ data-styled.g179[id=&#34;toggle__ToggleCheckmark-sc-th0yzv-1&#34;]{content:&#34;hbpQfU,&#34;}/*!sc*/ .fArqYf{display:inline-block;position:relative;width:18px;height:18px;border-radius:9px;background-color:#ffffff;left:11px;-webkit-transition:left 0.5s;transition:left 0.5s;}/*!sc*/ data-styled.g180[id=&#34;toggle__ToggleToggle-sc-th0yzv-2&#34;]{content:&#34;fArqYf,&#34;}/*!sc*/ .eipfdL{width:100%;border-left:1px solid #828db1;margin-top:12px;will-change:max-height;max-height:0px;}/*!sc*/ data-styled.g189[id=&#34;mobile-profile-menu__HeaderProfileMenuList-sc-c6el3s-0&#34;]{content:&#34;eipfdL,&#34;}/*!sc*/ .eidcBU{color:#333333;padding:0 24px;margin:12px 0;list-style-type:none;border-right:1px solid transparent;font-weight:400;}/*!sc*/ data-styled.g190[id=&#34;mobile-profile-menu__HeaderProfileMenuItem-sc-c6el3s-1&#34;]{content:&#34;eidcBU,&#34;}/*!sc*/ .elfMjy{font-size:13px;cursor:pointer;color:#333333;display:inline-block;}/*!sc*/ .elfMjy:hover{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/ .hKoOWf{font-size:13px;cursor:pointer;color:#333333;display:inline-block;font-weight:600;}/*!sc*/ .hKoOWf:hover{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/ .fIeyGw{font-size:13px;cursor:pointer;color:#333333;display:inline-block;font-weight:600;margin-bottom:24px;}/*!sc*/ .fIeyGw:hover{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/ data-styled.g191[id=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0&#34;]{content:&#34;elfMjy,hKoOWf,fIeyGw,&#34;}/*!sc*/ .dlnRUd{margin-left:24px;}/*!sc*/ data-styled.g192[id=&#34;mobile-header-dynamic-categories-connected__MobileHeaderDropdownSecondLevelLinksWrapper-sc-rlj3br-0&#34;]{content:&#34;dlnRUd,&#34;}/*!sc*/ .eSAgkB{margin-left:24px;}/*!sc*/ data-styled.g194[id=&#34;mobile-header-dynamic-navigation__MobileHeaderDropdownSecondLevelLinksWrapper-sc-h9xaov-0&#34;]{content:&#34;eSAgkB,&#34;}/*!sc*/ .hHsZTR{margin-bottom:24px;}/*!sc*/ data-styled.g195[id=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1&#34;]{content:&#34;hHsZTR,&#34;}/*!sc*/ .gAQIST{left:0;right:0;z-index:100;cursor:auto;max-height:0px;overflow:hidden;position:absolute;-webkit-transition:max-height .4s;transition:max-height .4s;background-color:transparent;box-shadow:0 5px 6px 0 #B0B3BB;}/*!sc*/ data-styled.g197[id=&#34;common__DesktopHeaderDropdownWrapper-sc-170boom-0&#34;]{content:&#34;gAQIST,&#34;}/*!sc*/ .cTBSVf{width:50%;float:left;}/*!sc*/ .cTBSVf:not(:last-child){padding-right:12px;}/*!sc*/ data-styled.g198[id=&#34;common__DesktopHeaderDropdownWrapperInner-sc-170boom-1&#34;]{content:&#34;cTBSVf,&#34;}/*!sc*/ .fWKIzC{font-size:13px;cursor:pointer;color:#333333;display:inline-block;font-weight:600;margin-bottom:3px;}/*!sc*/ .fWKIzC:hover{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/ .kUjwEN{font-size:13px;cursor:pointer;color:#333333;display:inline-block;}/*!sc*/ .kUjwEN:hover{-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/ data-styled.g199[id=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2&#34;]{content:&#34;fWKIzC,kUjwEN,&#34;}/*!sc*/ .cdqTz{margin-top:18px;background-color:#fcfcfd;}/*!sc*/ data-styled.g200[id=&#34;desktop-header-dropdown__DesktopHeaderDropdownInnerWrapper-sc-y1g0lx-0&#34;]{content:&#34;cdqTz,&#34;}/*!sc*/ .dvhoXp:not(:last-child){margin-bottom:24px;}/*!sc*/ .dvhoXp a{line-height:0;}/*!sc*/ data-styled.g201[id=&#34;header-action-link__CtaWrapper-sc-1yhrwj5-0&#34;]{content:&#34;dvhoXp,&#34;}/*!sc*/ .hHnCBT{float:left;width:calc((100% / 3) - 0.1px);}/*!sc*/ .hHnCBT:not(:last-child){padding-right:12px;}/*!sc*/ data-styled.g202[id=&#34;desktop-header-dropdown-material-categories__CategoriesColumn-sc-1ousnfb-0&#34;]{content:&#34;hHnCBT,&#34;}/*!sc*/ .edSpfo:not(:last-child){margin-bottom:24px;}/*!sc*/ data-styled.g203[id=&#34;desktop-header-dropdown-material-categories__CategoriesBloackWrapper-sc-1ousnfb-1&#34;]{content:&#34;edSpfo,&#34;}/*!sc*/ .czLQLd{float:left;width:calc((100% / 3) - 0.1px);}/*!sc*/ .czLQLd:not(:last-child){padding-right:12px;}/*!sc*/ data-styled.g204[id=&#34;desktop-header-suppliers-dropdown__Column-sc-1gypbt4-0&#34;]{content:&#34;czLQLd,&#34;}/*!sc*/ .CVmbS{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}/*!sc*/ data-styled.g208[id=&#34;bubble__BubbleWrapper-sc-i30r9c-0&#34;]{content:&#34;CVmbS,&#34;}/*!sc*/ .hWwxLn{height:112px;}/*!sc*/ @media (max-width:991.98px){.hWwxLn{display:none;}}/*!sc*/ data-styled.g211[id=&#34;main-content-spacer__MainContentSpacer-sc-1g5s1bz-0&#34;]{content:&#34;hWwxLn,&#34;}/*!sc*/ .greBxI{padding:24px 0;}/*!sc*/ @media (max-width:767.98px){.greBxI{padding:12px 0;}}/*!sc*/ data-styled.g218[id=&#34;footer__FooterWrapper-sc-1vgte7v-0&#34;]{content:&#34;greBxI,&#34;}/*!sc*/ @media (max-width:767.98px){.hZBBnE{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}}/*!sc*/ data-styled.g219[id=&#34;footer__FooterMiddleWrapper-sc-1vgte7v-1&#34;]{content:&#34;hZBBnE,&#34;}/*!sc*/ .jdQCEK{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:0 auto;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;max-width:1170px;}/*!sc*/ @media (max-width:767.98px){.jdQCEK{display:block;overflow:hidden;}}/*!sc*/ data-styled.g220[id=&#34;footer__FooterResponsiveWrapper-sc-1vgte7v-2&#34;]{content:&#34;jdQCEK,&#34;}/*!sc*/ .hutcBS{position:fixed;background-color:#ffffff;padding:24px;max-width:660px;z-index:100;bottom:12px;box-shadow:0px 2px 5px #b0b3bb;border-radius:4px;left:calc(-50vw + 50%);right:calc(-50vw + 50%);margin-left:auto;margin-right:auto;}/*!sc*/ data-styled.g221[id=&#34;cookie-banner__CookieBannerWrapper-sc-1n3o3md-0&#34;]{content:&#34;hutcBS,&#34;}/*!sc*/ .drTDou{background-color:#6a77a2;z-index:10;}/*!sc*/ data-styled.g253[id=&#34;desktop-header-search-bar__SearchButton-sc-n2cbkq-1&#34;]{content:&#34;drTDou,&#34;}/*!sc*/ .iAiHqb{background-color:#ffffff;border-radius:4px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;height:38px;}/*!sc*/ data-styled.g255[id=&#34;desktop-header-search-bar__DesktopHeaderSearchBarInputBlockWrapper-sc-n2cbkq-3&#34;]{content:&#34;iAiHqb,&#34;}/*!sc*/ .cQdUuW{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;position:relative;-webkit-flex:1;-ms-flex:1;flex:1;}/*!sc*/ data-styled.g256[id=&#34;desktop-header-search-bar__DesktopHeaderSearchInputWrapper-sc-n2cbkq-4&#34;]{content:&#34;cQdUuW,&#34;}/*!sc*/ .ioBjKD{border:none;margin-left:12px;width:100%;}/*!sc*/ .ioBjKD::-webkit-input-placeholder{color:#bdbdbd;opacity:1;}/*!sc*/ .ioBjKD::-moz-placeholder{color:#bdbdbd;opacity:1;}/*!sc*/ .ioBjKD:-ms-input-placeholder{color:#bdbdbd;opacity:1;}/*!sc*/ .ioBjKD::placeholder{color:#bdbdbd;opacity:1;}/*!sc*/ .ioBjKD::-ms-clear{display:none;}/*!sc*/ .ioBjKD:focus{outline:none;}/*!sc*/ data-styled.g257[id=&#34;desktop-header-search-bar__DesktopHeaderSearchInputField-sc-n2cbkq-5&#34;]{content:&#34;ioBjKD,&#34;}/*!sc*/ .fuuwzT{position:relative;}/*!sc*/ data-styled.g258[id=&#34;desktop-header-search-bar__DesktopHeaderAutoSuggestionsWrapper-sc-n2cbkq-6&#34;]{content:&#34;fuuwzT,&#34;}/*!sc*/ .hvBjgr{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:100%;}/*!sc*/ data-styled.g263[id=&#34;mobile-header-user-not-signed-in__MobileHeaderUserNotSignedInWrapper-sc-195838o-0&#34;]{content:&#34;hvBjgr,&#34;}/*!sc*/ .lpgqvm{color:#ff8200;background-color:#fcfcfd;border:2px solid #ff8200;max-width:303px;}/*!sc*/ data-styled.g264[id=&#34;mobile-header-user-not-signed-in__MobileHeaderUserSignUpButton-sc-195838o-1&#34;]{content:&#34;lpgqvm,&#34;}/*!sc*/ .bTObyH{color:#67ac5b;margin-bottom:12px;background-color:#fcfcfd;border:2px solid #67ac5b;max-width:303px;}/*!sc*/ data-styled.g265[id=&#34;mobile-header-user-not-signed-in__MobileHeaderUserSignInButton-sc-195838o-2&#34;]{content:&#34;bTObyH,&#34;}/*!sc*/ .evPxyJ{list-style:none;overflow-y:auto;padding:0 36px;}/*!sc*/ data-styled.g266[id=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBar-sc-ssinjx-0&#34;]{content:&#34;evPxyJ,&#34;}/*!sc*/ .bxYrpi{cursor:auto;max-height:0;overflow:hidden;background-color:#fcfcfd;}/*!sc*/ data-styled.g267[id=&#34;mobile-header-dynamic-menu__MobileHeaderDropdownWrapper-sc-ssinjx-1&#34;]{content:&#34;bxYrpi,&#34;}/*!sc*/ .bjzJUu{-webkit-flex:1;-ms-flex:1;flex:1;color:#526193;will-change:font-weight;font-weight:400;}/*!sc*/ data-styled.g268[id=&#34;mobile-header-dynamic-menu__MobileHeaderDropdownFirstLevelCategoryText-sc-ssinjx-2&#34;]{content:&#34;bjzJUu,&#34;}/*!sc*/ .ghkwNZ{border-left:1px #526193 solid;}/*!sc*/ data-styled.g270[id=&#34;mobile-header-dynamic-menu__MobileHeaderDropdownItemsWrapper-sc-ssinjx-4&#34;]{content:&#34;ghkwNZ,&#34;}/*!sc*/ .lgzuuz{font-size:16px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;padding:3px 6px 18px 0;}/*!sc*/ .kYgdAl{font-size:16px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;padding:3px 6px 18px 0;}/*!sc*/ .kYgdAl:nth-last-child(2):not(:only-child),.kYgdAl:last-child:not(:only-child){padding-bottom:0px;}/*!sc*/ data-styled.g271[id=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarItemstyledButton-sc-ssinjx-5&#34;]{content:&#34;lgzuuz,kYgdAl,&#34;}/*!sc*/ .kDpNZQ{background-color:#fcfcfd;}/*!sc*/ data-styled.g272[id=&#34;mobile-header__MobileHeaderWrapper-sc-dvud91-0&#34;]{content:&#34;kDpNZQ,&#34;}/*!sc*/ .iiDvup{background-color:#526193;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;color:#ffffff;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:12px;height:62px;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}/*!sc*/ @media screen and (max-width:575.98px){.iiDvup{height:45px;-webkit-box-pack:unset;-webkit-justify-content:unset;-ms-flex-pack:unset;justify-content:unset;}}/*!sc*/ data-styled.g273[id=&#34;mobile-header__MobileHeaderStaticBar-sc-dvud91-1&#34;]{content:&#34;iiDvup,&#34;}/*!sc*/ .cmjpNo{display:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-left:auto;padding:0 12px;}/*!sc*/ @media screen and (max-width:767.98px){.cmjpNo{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}}/*!sc*/ data-styled.g274[id=&#34;mobile-header__MobileHeaderStaticBarSearchIconWrapper-sc-dvud91-2&#34;]{content:&#34;cmjpNo,&#34;}/*!sc*/ .hpPhjx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;padding:24px 0;position:relative;height:calc(100vh - 62px - 72px);}/*!sc*/ @media screen and (max-width:575.98px){.hpPhjx{height:calc(100vh - 45px - 72px);}}/*!sc*/ data-styled.g275[id=&#34;mobile-header__MobileHeaderMenuList-sc-dvud91-3&#34;]{content:&#34;hpPhjx,&#34;}/*!sc*/ .tMWkf{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 36px;list-style:none;}/*!sc*/ data-styled.g276[id=&#34;mobile-header__MobileHeaderMenuListItem-sc-dvud91-4&#34;]{content:&#34;tMWkf,&#34;}/*!sc*/ .CjJpx{position:relative;height:calc(100vh - 62px);-webkit-transition:margin-top 0.3s ease-out;transition:margin-top 0.3s ease-out;margin-top:-100vh;}/*!sc*/ @media screen and (max-width:575.98px){.CjJpx{height:calc(100vh - 45px);}}/*!sc*/ data-styled.g277[id=&#34;mobile-header__MobileHeaderSlideDownHeader-sc-dvud91-5&#34;]{content:&#34;CjJpx,&#34;}/*!sc*/ .cwmMhq{overflow:hidden;}/*!sc*/ data-styled.g278[id=&#34;mobile-header__MobileHeaderSlideDownWrapper-sc-dvud91-6&#34;]{content:&#34;cwmMhq,&#34;}/*!sc*/ .igiZBr{background-color:#526193;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}/*!sc*/ data-styled.g279[id=&#34;desktop-header-navigation-links__DesktopHeaderNavigationLinksBar-sc-vppewv-0&#34;]{content:&#34;igiZBr,&#34;}/*!sc*/ .hPDTUs{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;width:100%;max-width:654px;}/*!sc*/ data-styled.g280[id=&#34;desktop-header-navigation-links__DesktopHeaderNavigationLinksBarItems-sc-vppewv-1&#34;]{content:&#34;hPDTUs,&#34;}/*!sc*/ .goozRc{color:#ffffff;border-bottom:1px solid rgba(255,255,255,0);}/*!sc*/ .goozRc:hover{border-bottom:1px solid rgba(255,255,255,9);}/*!sc*/ data-styled.g281[id=&#34;desktop-header-navigation-links__DesktopHeaderNavigationLinksBarItemLink-sc-vppewv-2&#34;]{content:&#34;goozRc,&#34;}/*!sc*/ .gbNQTp{text-align:center;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}/*!sc*/ data-styled.g282[id=&#34;desktop-header-navigation-links__DesktopHeaderNavigationLinksBarItemStyledButton-sc-vppewv-3&#34;]{content:&#34;gbNQTp,&#34;}/*!sc*/ .bKWUBi{color:white;display:block;font-size:15px;border-bottom:1px solid rgba(255,255,255,0);}/*!sc*/ .bKWUBi:after{content:&#39;&#39;;width:10px;height:10px;display:inline-block;background-size:contain;background-position:center;background-repeat:no-repeat;margin-left:6px;background-image:url(&#34;/static/images/icons/2.0/white/arrow-down.svg&#34;);}/*!sc*/ .bKWUBi:hover{border-bottom:1px solid rgba(255,255,255,9);}/*!sc*/ data-styled.g283[id=&#34;desktop-header-navigation-links__DesktopHeaderNavigationDropdownText-sc-vppewv-4&#34;]{content:&#34;bKWUBi,&#34;}/*!sc*/ .bPjIbr{float:left;}/*!sc*/ @media (max-width:991.98px){.bPjIbr{width:130px;}}/*!sc*/ data-styled.g289[id=&#34;desktop-header-static-bar__HeaderLogoImage-sc-1aton5n-0&#34;]{content:&#34;bPjIbr,&#34;}/*!sc*/ .KFXRI{position:fixed;left:0;right:0;top:0;z-index:3;background-color:#526193;}/*!sc*/ data-styled.g291[id=&#34;desktop-header-static-bar__DesktopHeaderStaticBar-sc-1aton5n-2&#34;]{content:&#34;KFXRI,&#34;}/*!sc*/ .kHEXRD{padding-top:3px;padding-bottom:18px;}/*!sc*/ data-styled.g292[id=&#34;desktop-header-static-bar__DesktopHeadersLinksWrapper-sc-1aton5n-3&#34;]{content:&#34;kHEXRD,&#34;}/*!sc*/ .cVRwqg{-webkit-flex:1;-ms-flex:1;flex:1;}/*!sc*/ data-styled.g293[id=&#34;desktop-header-static-bar__DesktopHeaderLogoSection-sc-1aton5n-4&#34;]{content:&#34;cVRwqg,&#34;}/*!sc*/ .gigTJA{max-width:554px;-webkit-flex:3;-ms-flex:3;flex:3;margin:0 60px;}/*!sc*/ @media (max-width:991.98px){.gigTJA{margin:0 12px;}}/*!sc*/ data-styled.g294[id=&#34;desktop-header-static-bar__DesktopHeaderSearchBarSection-sc-1aton5n-5&#34;]{content:&#34;gigTJA,&#34;}/*!sc*/ .IRYso{-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;min-width:282px;}/*!sc*/ data-styled.g295[id=&#34;desktop-header-static-bar__DesktopHeaderControlIconsSection-sc-1aton5n-6&#34;]{content:&#34;IRYso,&#34;}/*!sc*/ .gWelzZ{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}/*!sc*/ data-styled.g296[id=&#34;desktop-header-static-bar__DesktopHeaderLanguagePanelWrapper-sc-1aton5n-7&#34;]{content:&#34;gWelzZ,&#34;}/*!sc*/ .gBSUqi{cursor:pointer;margin-right:6px;}/*!sc*/ data-styled.g297[id=&#34;desktop-header-static-bar__DesktopHeaderCurrentLanguage-sc-1aton5n-8&#34;]{content:&#34;gBSUqi,&#34;}/*!sc*/ .hMfFLt{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-left:24px;}/*!sc*/ @media (max-width:991.98px){.hMfFLt{margin-left:12px;}}/*!sc*/ data-styled.g298[id=&#34;desktop-header-static-bar__DesktopHeaderAuthControls-sc-1aton5n-9&#34;]{content:&#34;hMfFLt,&#34;}/*!sc*/ .bga-dBn{width:100%;height:66px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:0 auto;color:#ffffff;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding:0 12px;}/*!sc*/ @media (min-width:768px){.bga-dBn{padding-left:24px;padding-right:24px;}}/*!sc*/ @media (min-width:1170px){.bga-dBn{max-width:1440px;margin-left:auto;margin-right:auto;}}/*!sc*/ data-styled.g299[id=&#34;desktop-header-static-bar__DesktopHeaderStaticBarInner-sc-1aton5n-10&#34;]{content:&#34;bga-dBn,&#34;}/*!sc*/ .lpaaHC{margin-right:24px;}/*!sc*/ @media (max-width:991.98px){.lpaaHC{margin-right:12px;}}/*!sc*/ data-styled.g301[id=&#34;desktop-header-static-bar__SignInText-sc-1aton5n-12&#34;]{content:&#34;lpaaHC,&#34;}/*!sc*/ .ihiZJY{position:relative;}/*!sc*/ data-styled.g302[id=&#34;header__HeaderWrapper-sc-vi2mkw-0&#34;]{content:&#34;ihiZJY,&#34;}/*!sc*/ @media (max-width:767.98px){.iOXrTY{display:none;}}/*!sc*/ @media (max-width:991.98px){.iOXrTY{display:none;}}/*!sc*/ data-styled.g303[id=&#34;header__DesktopHeaderWrapper-sc-vi2mkw-1&#34;]{content:&#34;iOXrTY,&#34;}/*!sc*/ .eWjGyj{width:100%;z-index:4;display:none;}/*!sc*/ @media (max-width:991.98px){.eWjGyj{display:block;}}/*!sc*/ @media (max-width:767.98px){.eWjGyj{display:block;}}/*!sc*/ data-styled.g304[id=&#34;header__MobileHeaderWrapper-sc-vi2mkw-2&#34;]{content:&#34;eWjGyj,&#34;}/*!sc*/ .ewHqQp{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;height:90px;}/*!sc*/ @media (max-width:575.98px){.ewHqQp{height:44px;}}/*!sc*/ data-styled.g305[id=&#34;campaigns__CampaignBannerWrapper-sc-a2pwr6-0&#34;]{content:&#34;ewHqQp,&#34;}/*!sc*/ .dcaIxI{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}/*!sc*/ data-styled.g344[id=&#34;adbutler__CampaignBannerWrapper-sc-1snm6gk-0&#34;]{content:&#34;dcaIxI,&#34;}/*!sc*/ .fgLnFQ{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:0 auto;overflow:hidden;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;max-width:728px;height:90px;}/*!sc*/ .fgLnFQ .adbutler-banner-wrapper:not(:empty) ~ *{display:none;}/*!sc*/ .fgLnFQ img{width:auto;height:auto;}/*!sc*/ @media (max-width:575.98px){.fgLnFQ{height:61px;}}/*!sc*/ data-styled.g345[id=&#34;adbutler__CampaignBannerInnerWrapper-sc-1snm6gk-1&#34;]{content:&#34;fgLnFQ,&#34;}/*!sc*/ .hucmjH{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:16px;height:16px;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:8px;border:1px solid #3880E5;}/*!sc*/ data-styled.g583[id=&#34;radio-button__RadioButtonOuter-sc-mwb92w-0&#34;]{content:&#34;hucmjH,&#34;}/*!sc*/ .jXbQYq{width:10px;height:10px;border-radius:5px;background-color:#3880E5;}/*!sc*/ data-styled.g584[id=&#34;radio-button__RadioButtonInner-sc-mwb92w-1&#34;]{content:&#34;jXbQYq,&#34;}/*!sc*/ .dDcZzF{color:#fcfcfd;margin:36px 0;}/*!sc*/ data-styled.g585[id=&#34;advanced-search-sidebar-separator__AdvancedSearchSidebarSeparator-sc-1rstb9s-0&#34;]{content:&#34;dDcZzF,&#34;}/*!sc*/ .hXYfhe{color:#ffffff;font-size:16px;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;border-radius:2px;-webkit-flex:1;-ms-flex:1;flex:1;margin-right:24px;border:1px solid #48A43F;background-color:#67ac5b;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding:6px;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;}/*!sc*/ .hXYfhe:hover{background-color:#48A43F;}/*!sc*/ data-styled.g586[id=&#34;advanced-search-sidebar-action-button__ActionButton-sc-15cfzym-0&#34;]{content:&#34;hXYfhe,&#34;}/*!sc*/ .cwhWGZ{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;margin-top:24px;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}/*!sc*/ data-styled.g587[id=&#34;advanced-search-sidebar-actions__ActionsWrapper-sc-qhfbni-0&#34;]{content:&#34;cwhWGZ,&#34;}/*!sc*/ .hVhMIm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;opacity:.7;pointer-events:none;}/*!sc*/ data-styled.g588[id=&#34;advanced-search-sidebar-actions__ActionsText-sc-qhfbni-1&#34;]{content:&#34;hVhMIm,&#34;}/*!sc*/ .iPlPmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}/*!sc*/ data-styled.g589[id=&#34;advanced-search-sidebar-item-header__ItemHeaderWrapper-sc-1n7d7as-0&#34;]{content:&#34;iPlPmm,&#34;}/*!sc*/ .XbfDr{overflow-y:auto;-webkit-transition:margin-top .25s,max-height .15s;transition:margin-top .25s,max-height .15s;margin-top:24px;max-height:0px;margin-top:0;}/*!sc*/ data-styled.g590[id=&#34;advanced-search-sidebar-collapsible-filters-wrapper__ASSidebarCollapsibleFiltersWrapper-sc-1m5vrop-0&#34;]{content:&#34;XbfDr,&#34;}/*!sc*/ .fdCHWk{position:relative;width:16px;height:16px;}/*!sc*/ .fdCHWk:before,.fdCHWk:after{content:&#34;&#34;;position:absolute;background-color:white;-webkit-transition:-webkit-transform 0.25s ease-out;-webkit-transition:transform 0.25s ease-out;transition:transform 0.25s ease-out;background-color:#3880e5;}/*!sc*/ .fdCHWk:before{top:0;left:50%;width:4px;height:100%;margin-left:-2px;}/*!sc*/ .fdCHWk:after{top:50%;left:0;width:100%;height:4px;margin-top:-2px;}/*!sc*/ data-styled.g591[id=&#34;plus-icon__PlusIcon-sc-13w6ro8-0&#34;]{content:&#34;fdCHWk,&#34;}/*!sc*/ .gNwTRO{margin:4px 12px;-webkit-flex:1;-ms-flex:1;flex:1;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;}/*!sc*/ data-styled.g592[id=&#34;advanced-search-category-specific-settings-dropdown__FieldText-sc-113hj4-0&#34;]{content:&#34;gNwTRO,&#34;}/*!sc*/ .epQYxF{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:12px;background:#ffffff;border:1px solid #bdbdbd;box-sizing:border-box;border-radius:4px;}/*!sc*/ data-styled.g593[id=&#34;advanced-search-category-specific-settings-dropdown__FieldWrapper-sc-113hj4-1&#34;]{content:&#34;epQYxF,&#34;}/*!sc*/ .kRDCWz{position:relative;}/*!sc*/ data-styled.g594[id=&#34;advanced-search-category-specific-settings-dropdown__DropDownContainer-sc-113hj4-2&#34;]{content:&#34;kRDCWz,&#34;}/*!sc*/ .huFKrQ{position:absolute;top:100%;z-index:2;width:100%;margin-top:-12px;padding:12px;padding-bottom:0;max-height:236px;overflow-y:auto;-webkit-transition:all .5s;transition:all .5s;opacity:0;visibility:hidden;background-color:#ffffff;border:1px solid #bdbdbd;box-sizing:border-box;box-shadow:0px 2px 5px #b0b3bb;border-radius:4px;}/*!sc*/ data-styled.g595[id=&#34;advanced-search-category-specific-settings-dropdown__DropDownItemsWrapper-sc-113hj4-3&#34;]{content:&#34;huFKrQ,&#34;}/*!sc*/ .zzdEX{margin-right:12px;}/*!sc*/ data-styled.g599[id=&#34;advanced-search-category-specific-settings-dropdown__PlusIconContainer-sc-113hj4-7&#34;]{content:&#34;zzdEX,&#34;}/*!sc*/ .cFpniu{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}/*!sc*/ data-styled.g603[id=&#34;advanced-search-sidebar-suppliers__ItemHeaderWrapper-sc-12new5k-0&#34;]{content:&#34;cFpniu,&#34;}/*!sc*/ .gdlobs{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding:12px 0;margin-bottom:12px;}/*!sc*/ @media (max-width:991.98px){.gdlobs{display:none;}}/*!sc*/ data-styled.g616[id=&#34;collapse-toggle__CollapseToggleWrapper-sc-vxcac6-0&#34;]{content:&#34;gdlobs,&#34;}/*!sc*/ .gFfIFF{display:block;}/*!sc*/ data-styled.g617[id=&#34;collapse-toggle__CollapseToggleOptionsIcon-sc-vxcac6-1&#34;]{content:&#34;gFfIFF,&#34;}/*!sc*/ .iTeGNl{color:#526193;margin:0 6px;-webkit-flex:1;-ms-flex:1;flex:1;font-weight:600;display:block;}/*!sc*/ data-styled.g618[id=&#34;collapse-toggle__CollapseToggleTitle-sc-vxcac6-2&#34;]{content:&#34;iTeGNl,&#34;}/*!sc*/ .cgzKyT{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:white;border:1px solid #bdbdbd;border-radius:50%;width:40px;height:40px;cursor:pointer;-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg);}/*!sc*/ data-styled.g619[id=&#34;collapse-toggle__CollapseToggleArrowCircle-sc-vxcac6-3&#34;]{content:&#34;cgzKyT,&#34;}/*!sc*/ .gyajYF{width:438px;padding:24px;border-radius:4px;background-color:#f2f2f2;}/*!sc*/ @media (max-width:991.98px){.gyajYF{width:100%;}}/*!sc*/ @media (max-width:767.98px){.gyajYF{display:none;display:none;}}/*!sc*/ @media (max-width:575.98px){.gyajYF{padding:12px;}}/*!sc*/ data-styled.g620[id=&#34;sidebar__AdvancedSearchSidebarWrapper-sc-1v590t3-0&#34;]{content:&#34;gyajYF,&#34;}/*!sc*/ .jnuTJQ{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;border-radius:4px;background-color:#f2f2f2;max-width:1400px;margin:0 auto 24px auto;padding:12px 12px 0 12px;}/*!sc*/ @media (max-width:991.98px){.jnuTJQ{overflow-x:auto;}}/*!sc*/ @media (max-width:767.98px){.jnuTJQ{margin:12px 0 0 0;}}/*!sc*/ data-styled.g622[id=&#34;contextual-tags__ContextualTagsWrapper-sc-dg6jub-0&#34;]{content:&#34;jnuTJQ,&#34;}/*!sc*/ .fsqjse{border-radius:4px;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;margin-right:12px;margin-bottom:12px;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;background-color:#fcfcfd;border:1px solid #3880E5;padding:6px 12px;}/*!sc*/ data-styled.g623[id=&#34;contextual-tags__ContextualTagWrapper-sc-dg6jub-1&#34;]{content:&#34;fsqjse,&#34;}/*!sc*/ @media (max-width:991.98px){.cSROfV{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}}/*!sc*/ data-styled.g624[id=&#34;contextual-tags__ContextualTagsItemsWrapper-sc-dg6jub-2&#34;]{content:&#34;cSROfV,&#34;}/*!sc*/ .fLLraV{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding:24px;}/*!sc*/ data-styled.g625[id=&#34;pagination__PaginationWrapper-sc-1s1bcvk-0&#34;]{content:&#34;fLLraV,&#34;}/*!sc*/ .TXmbf{display:inline-block;}/*!sc*/ @media (max-width:991.98px){.TXmbf{display:none;}}/*!sc*/ data-styled.g626[id=&#34;pagination__PaginationPagesText-sc-1s1bcvk-1&#34;]{content:&#34;TXmbf,&#34;}/*!sc*/ .fLuqrw{position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}/*!sc*/ data-styled.g627[id=&#34;custom-dropdown__CustomDropdownWrapper-sc-1r4pk0f-0&#34;]{content:&#34;fLuqrw,&#34;}/*!sc*/ .hxQNhN{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;border:1px solid #e0e0e0;margin-right:6px;}/*!sc*/ data-styled.g628[id=&#34;custom-dropdown__CustomDropdown-sc-1r4pk0f-1&#34;]{content:&#34;hxQNhN,&#34;}/*!sc*/ .grBuVO{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:36px;line-height:36px;background:#ffffff;cursor:pointer;border:1px solid #e0e0e0;}/*!sc*/ data-styled.g629[id=&#34;custom-dropdown__CustomDropdownTrigger-sc-1r4pk0f-2&#34;]{content:&#34;grBuVO,&#34;}/*!sc*/ .cqRtVo{position:absolute;display:block;top:100%;left:0;right:0;border:1px solid #e0e0e0;border-top:0;background:#fff;-webkit-transition:all 0.5s;transition:all 0.5s;opacity:0;visibility:hidden;z-index:2;box-shadow:0 2px 5px 0 #bdbdbd;}/*!sc*/ data-styled.g630[id=&#34;custom-dropdown__CustomDropdownOptions-sc-1r4pk0f-3&#34;]{content:&#34;cqRtVo,&#34;}/*!sc*/ .hwiCoG{position:relative;display:block;padding:0 12px 0 12px;line-height:36px;cursor:pointer;-webkit-transition:all 0.5s;transition:all 0.5s;font-size:12px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;}/*!sc*/ .hwiCoG:hover{cursor:pointer;background-color:#e0e0e0;}/*!sc*/ data-styled.g631[id=&#34;custom-dropdown__CustomDropdownOption-sc-1r4pk0f-4&#34;]{content:&#34;hwiCoG,&#34;}/*!sc*/ .kaSqTa{color:#4496ec;position:relative;display:block;padding:12px;cursor:pointer;-webkit-transition:all 0.5s;transition:all 0.5s;font-size:12px;}/*!sc*/ data-styled.g632[id=&#34;custom-dropdown__CustomDropdownInfo-sc-1r4pk0f-5&#34;]{content:&#34;kaSqTa,&#34;}/*!sc*/ .dUfhYU{max-width:228px;}/*!sc*/ .dUfhYU:hover{cursor:pointer;background-color:transparent;}/*!sc*/ data-styled.g633[id=&#34;custom-dropdown__CustomDropdownOptionCurrent-sc-1r4pk0f-6&#34;]{content:&#34;dUfhYU,&#34;}/*!sc*/ .cwaUxH{color:#bdbdbd;}/*!sc*/ data-styled.g634[id=&#34;custom-dropdown__CustomDropdownOptionPlaceholder-sc-1r4pk0f-7&#34;]{content:&#34;cwaUxH,&#34;}/*!sc*/ .kOKDxB{position:relative;height:10px;width:10px;margin-right:6px;}/*!sc*/ .kOKDxB::before{content:&#34;&#34;;position:absolute;bottom:0;width:2px;height:100%;left:-3px;-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg);background-color:#4496ec;}/*!sc*/ .kOKDxB::after{content:&#34;&#34;;position:absolute;bottom:0;width:2px;height:100%;left:3px;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);background-color:#4496ec;}/*!sc*/ data-styled.g635[id=&#34;custom-dropdown__CustomDropdownArrow-sc-1r4pk0f-8&#34;]{content:&#34;kOKDxB,&#34;}/*!sc*/ .emgOuh{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border:solid 1px #e0e0e0;border-radius:2px;margin-bottom:6px;padding:12px 24px;background-color:#fcfcfd;}/*!sc*/ @media (max-width:767.98px){.emgOuh{display:none;}}/*!sc*/ data-styled.g637[id=&#34;header-properties-dropdown__PropertiesDropdownWrapper-sc-jye0ar-0&#34;]{content:&#34;emgOuh,&#34;}/*!sc*/ .cVjyqt{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;background-color:#ffffff;border:solid 1px #e0e0e0;margin-bottom:6px;box-shadow:0 2px 5px 0 #bdbdbd;padding:12px 24px;}/*!sc*/ @media (max-width:767.98px){.cVjyqt{padding:12px;}}/*!sc*/ .dSEUZx{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;background-color:#ffffff;border:solid 1px #e0e0e0;margin-bottom:6px;box-shadow:0 2px 5px 0 #bdbdbd;padding:12px 24px;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}/*!sc*/ @media (max-width:767.98px){.dSEUZx{padding:12px;}}/*!sc*/ data-styled.g641[id=&#34;materials-list__MaterialsListItem-sc-1ickte1-0&#34;]{content:&#34;cVjyqt,dSEUZx,&#34;}/*!sc*/ .dtZnEZ{width:32%;overflow:hidden;}/*!sc*/ @media (max-width:767.98px){.dtZnEZ{width:90%;}}/*!sc*/ data-styled.g642[id=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1&#34;]{content:&#34;dtZnEZ,&#34;}/*!sc*/ .hTQFno{width:63%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-left:12px;}/*!sc*/ @media (max-width:767.98px){.hTQFno{display:none;}}/*!sc*/ data-styled.g643[id=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2&#34;]{content:&#34;hTQFno,&#34;}/*!sc*/ .bDcoHI{width:5%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;padding-left:12px;}/*!sc*/ @media (max-width:767.98px){.bDcoHI{width:10%;}}/*!sc*/ data-styled.g644[id=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3&#34;]{content:&#34;bDcoHI,&#34;}/*!sc*/ .fHnuKk{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;margin:24px auto;}/*!sc*/ @media (max-width:991.98px){.fHnuKk{display:none;}}/*!sc*/ data-styled.g650[id=&#34;navigation-component__AdvancedSearchNavigationComponentWrapper-sc-1j05mwq-0&#34;]{content:&#34;fHnuKk,&#34;}/*!sc*/ .fmDqYN{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;min-width:50%;position:relative;padding:12px;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-top:1px solid #bdbdbd;border-left:1px solid #bdbdbd;border-bottom:1px solid #bdbdbd;box-shadow:0px 2px 2px rgba(0,0,0,0.25);background-color:#F1F4F1;}/*!sc*/ .fmDqYN::after{content:&#34;&#34;;width:16px;height:16px;bottom:-8px;display:block;position:absolute;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);border-right:1px solid #bdbdbd;background:#F1F4F1;border-bottom:1px solid #bdbdbd;}/*!sc*/ .fmDqYN:last-child{border-right:1px solid #bdbdbd;border-radius:0px 8px 8px 0px;}/*!sc*/ .fmDqYN:first-child{border-radius:8px 0px 0px 8px;}/*!sc*/ .hmFsem{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;cursor:pointer;min-width:50%;position:relative;padding:12px;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-top:1px solid #bdbdbd;border-left:1px solid #bdbdbd;border-bottom:1px solid #bdbdbd;box-shadow:inset 0px 1px 1px rgba(0,0,0,0.25);background-color:#F0F5F5;}/*!sc*/ .hmFsem:last-child{border-right:1px solid #bdbdbd;border-radius:0px 8px 8px 0px;}/*!sc*/ .hmFsem:first-child{border-radius:8px 0px 0px 8px;}/*!sc*/ data-styled.g651[id=&#34;navigation-component__AdvancedSearchNavigationItemWrapper-sc-1j05mwq-1&#34;]{content:&#34;fmDqYN,hmFsem,&#34;}/*!sc*/ .bwwYIA{width:26px;height:26px;font-size:16px;color:#ffffff;text-align:center;border-radius:13px;margin-right:12px;background:#ff8200;}/*!sc*/ .fgAGgQ{width:26px;height:26px;font-size:16px;color:#ffffff;text-align:center;border-radius:13px;margin-right:12px;background:#828282;}/*!sc*/ data-styled.g652[id=&#34;navigation-component__NavigationItemNumber-sc-1j05mwq-2&#34;]{content:&#34;bwwYIA,fgAGgQ,&#34;}/*!sc*/ .jleRfd{margin-bottom:12px;}/*!sc*/ @media (max-width:767.98px){.jleRfd{padding-left:12px;padding-right:12px;}}/*!sc*/ data-styled.g653[id=&#34;results-list-view__TopPositionBannerWrapper-sc-d70l4k-0&#34;]{content:&#34;jleRfd,&#34;}/*!sc*/ .ifaaZC{position:relative;}/*!sc*/ @media (max-width:767.98px){.ifaaZC{margin-top:12px;}}/*!sc*/ data-styled.g654[id=&#34;results-list-view__AdvancedSearchMainContentWrapper-sc-d70l4k-1&#34;]{content:&#34;ifaaZC,&#34;}/*!sc*/ @media (max-width:575.98px){.dgFZRr{padding:0px 12px;}}/*!sc*/ data-styled.g655[id=&#34;results-list-view__AdvancedSearchAllertsWrapper-sc-d70l4k-2&#34;]{content:&#34;dgFZRr,&#34;}/*!sc*/ @media (max-width:991.98px){.ixACSA{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}}/*!sc*/ data-styled.g658[id=&#34;advanced-search__AdvancedSearchMainSectionWrapper-sc-1eqc1e8-1&#34;]{content:&#34;ixACSA,&#34;}/*!sc*/ @-webkit-keyframes cpCHCi{from{background-color:#828282;border-color:#828282;}to{background-color:#67ac5b;border-color:#67ac5b;}}/*!sc*/ @keyframes cpCHCi{from{background-color:#828282;border-color:#828282;}to{background-color:#67ac5b;border-color:#67ac5b;}}/*!sc*/ data-styled.g660[id=&#34;sc-keyframes-cpCHCi&#34;]{content:&#34;cpCHCi,&#34;}/*!sc*/ &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&#34;__next&#34;&gt;&lt;div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;div class=&#34;cookie-banner__CookieBannerWrapper-sc-1n3o3md-0 hutcBS&#34; data-test-item=&#34;cookie-banner&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 ghQHoL&#34; size=&#34;28&#34;&gt;OUR COOKIE DISCLAIMER&lt;/p&gt;&lt;hr class=&#34;separation-line__SeparationLine-sc-1gtqai2-0 separation-line__SeparationLineDefault-sc-1gtqai2-1 dLmbUA kwnPiJ&#34;/&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 fEFHaQ&#34; size=&#34;15&#34;&gt;Matmatch uses cookies and similar technologies to improve your experience and measure your interactions with our website. We also use them to provide you more relevant information and improve our platform and search tools. If that’s okay, click “Accept all.” To change your preferences, click “Open cookie settings.” You will find more information about cookies on our &lt;a href=&#34;/imprint#privacy-policy&#34; style=&#34;text-decoration:underline;&#34;&gt;privacy policy page&lt;a&gt;&lt;/a&gt;.&lt;/a&gt;&lt;/p&gt;&lt;button class=&#34;button__BaseButton-sc-ekfcy0-0 button__ButtonSuccess-sc-ekfcy0-5 lhTnpm gKwwSj&#34;&gt;Accept all&lt;/button&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 fcGhiO&#34; color=&#34;#3880E5&#34; cursor=&#34;pointer&#34; size=&#34;15&#34;&gt;Open cookie settings&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;header-container__HeaderContainer-sc-fi6wlh-0 bOrpEs&#34; data-app-header=&#34;true&#34;&gt;&lt;div class=&#34;header__HeaderWrapper-sc-vi2mkw-0 ihiZJY&#34;&gt;&lt;div class=&#34;header__DesktopHeaderWrapper-sc-vi2mkw-1 iOXrTY&#34;&gt;&lt;div class=&#34;desktop-header-static-bar__DesktopHeaderStaticBar-sc-1aton5n-2 KFXRI&#34;&gt;&lt;div class=&#34;desktop-header-static-bar__DesktopHeaderStaticBarInner-sc-1aton5n-10 bga-dBn&#34;&gt;&lt;div class=&#34;desktop-header-static-bar__DesktopHeaderLogoSection-sc-1aton5n-4 cVRwqg&#34;&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 styled-link-styles__ImageLinkStyles-sc-l1ctuc-2 ipttFt jkkDbK desktop-header-static-bar__HeaderLogoImage-sc-1aton5n-0 bPjIbr&#34; height=&#34;37&#34; href=&#34;/&#34; src=&#34;/static/images/inlined/logo_inverted.svg&#34; width=&#34;167&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;desktop-header-static-bar__DesktopHeaderSearchBarSection-sc-1aton5n-5 gigTJA&#34;&gt;&lt;div class=&#34;desktop-header-search-bar__DesktopHeaderSearchBarWrapper-sc-n2cbkq-2 doqVZA&#34;&gt;&lt;div class=&#34;desktop-header-search-bar__DesktopHeaderSearchBarInputBlockWrapper-sc-n2cbkq-3 iAiHqb&#34;&gt;&lt;div class=&#34;desktop-header-search-bar__DesktopHeaderSearchInputWrapper-sc-n2cbkq-4 cQdUuW&#34;&gt;&lt;input class=&#34;desktop-header-search-bar__DesktopHeaderSearchInputField-sc-n2cbkq-5 ioBjKD&#34; placeholder=&#34;e.g. Aluminium&#34; type=&#34;text&#34; value=&#34;&#34;/&gt;&lt;/div&gt;&lt;button class=&#34;button__BaseButton-sc-ekfcy0-0 button__ButtonDefault-sc-ekfcy0-2 desktop-header-search-bar__SearchButton-sc-n2cbkq-1 MSVaf kTlrHY drTDou&#34;&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 EMFJO&#34; color=&#34;white&#34; size=&#34;24&#34; type=&#34;search&#34;&gt;&lt;/span&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&#34;desktop-header-search-bar__DesktopHeaderAutoSuggestionsWrapper-sc-n2cbkq-6 fuuwzT&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;desktop-header-static-bar__DesktopHeaderControlIconsSection-sc-1aton5n-6 IRYso&#34;&gt;&lt;div class=&#34;desktop-header-static-bar__DesktopHeaderLanguagePanelWrapper-sc-1aton5n-7 gWelzZ&#34;&gt;&lt;div class=&#34;desktop-header-static-bar__DesktopHeaderCurrentLanguage-sc-1aton5n-8 gBSUqi&#34;&gt;&lt;/div&gt;&lt;div class=&#34;bubble__BubbleWrapper-sc-i30r9c-0 CVmbS&#34;&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 desktop-header-static-bar__GlobeIcon-sc-1aton5n-11 gpNPvA language-picker-globe-icon&#34; color=&#34;2.0/white&#34; size=&#34;24&#34; type=&#34;ios-world-outline&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;desktop-header-static-bar__DesktopHeaderAuthControls-sc-1aton5n-9 hMfFLt&#34;&gt;&lt;div class=&#34;bubble__BubbleWrapper-sc-i30r9c-0 CVmbS&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 desktop-header-static-bar__SignInText-sc-1aton5n-12 hJBnMN lpaaHC&#34; color=&#34;#ffffff&#34; cursor=&#34;pointer&#34; data-test-item=&#34;sign-in-button&#34; size=&#34;16&#34;&gt;Sign in&lt;/p&gt;&lt;a data-test-item=&#34;sign-up-link&#34; href=&#34;/sign-up&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;button class=&#34;button__BaseButton-sc-ekfcy0-0 button__ButtonSpecial-sc-ekfcy0-4 MSVaf juQzaQ login-interaction-elem&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 kFbVgZ&#34; color=&#34;white&#34;&gt;Register&lt;/p&gt;&lt;/button&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;desktop-header-static-bar__DesktopHeadersLinksWrapper-sc-1aton5n-3 kHEXRD&#34;&gt;&lt;div class=&#34;desktop-header-navigation-links__DesktopHeaderNavigationLinksBar-sc-vppewv-0 igiZBr&#34;&gt;&lt;div class=&#34;desktop-header-navigation-links__DesktopHeaderNavigationLinksBarItems-sc-vppewv-1 hPDTUs&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 jUHcrU&#34;&gt;&lt;div class=&#34;desktop-header-navigation-links__DesktopHeaderNavigationLinksBarItemStyledButton-sc-vppewv-3 gbNQTp&#34;&gt;&lt;p class=&#34;desktop-header-navigation-links__DesktopHeaderNavigationDropdownText-sc-vppewv-4 bKWUBi&#34; color=&#34;#ffffff&#34;&gt;Materials&lt;/p&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;div class=&#34;common__DesktopHeaderDropdownWrapper-sc-170boom-0 gAQIST&#34;&gt;&lt;div class=&#34;desktop-header-dropdown__DesktopHeaderDropdownInnerWrapper-sc-y1g0lx-0 cdqTz&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperStaticContentNoFlex-sc-14fw43j-5 cJNByu flfCwz&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 hrfsee&#34;&gt;&lt;div class=&#34;common__DesktopHeaderDropdownWrapperInner-sc-170boom-1 cTBSVf&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 wmqFD&#34; color=&#34;#526193&#34; size=&#34;16&#34;&gt;Categories&lt;/p&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cdlmON&#34;&gt;&lt;div class=&#34;desktop-header-dropdown-material-categories__CategoriesColumn-sc-1ousnfb-0 hHnCBT&#34;&gt;&lt;div class=&#34;desktop-header-dropdown-material-categories__CategoriesBloackWrapper-sc-1ousnfb-1 edSpfo&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 fWKIzC&#34; href=&#34;/advanced-search?categories=biological-material&amp;amp;view=result-list&#34;&gt;Biological Material&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=wood&amp;amp;view=result-list&#34;&gt;Wood&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;desktop-header-dropdown-material-categories__CategoriesBloackWrapper-sc-1ousnfb-1 edSpfo&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 fWKIzC&#34; href=&#34;/advanced-search?categories=ceramic&amp;amp;view=result-list&#34;&gt;Ceramic&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=carbon&amp;amp;view=result-list&#34;&gt;Carbon&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=engineering-ceramic&amp;amp;view=result-list&#34;&gt;Engineering Ceramic&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=natural-ceramic&amp;amp;view=result-list&#34;&gt;Natural Ceramic&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;desktop-header-dropdown-material-categories__CategoriesBloackWrapper-sc-1ousnfb-1 edSpfo&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 fWKIzC&#34; href=&#34;/advanced-search?categories=composite&amp;amp;view=result-list&#34;&gt;Composite&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=ceramic-matrix-composite&amp;amp;view=result-list&#34;&gt;Ceramic Matrix Composite&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=metal-matrix-composite&amp;amp;view=result-list&#34;&gt;Metal Matrix Composite&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=polymer-matrix-composite&amp;amp;view=result-list&#34;&gt;Polymer Matrix Composite&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;desktop-header-dropdown-material-categories__CategoriesColumn-sc-1ousnfb-0 hHnCBT&#34;&gt;&lt;div class=&#34;desktop-header-dropdown-material-categories__CategoriesBloackWrapper-sc-1ousnfb-1 edSpfo&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 fWKIzC&#34; href=&#34;/advanced-search?categories=glass&amp;amp;view=result-list&#34;&gt;Glass&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=glass-ceramic&amp;amp;view=result-list&#34;&gt;Glass Ceramic&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=lead-glass&amp;amp;view=result-list&#34;&gt;Lead Glass&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=silicate-glass&amp;amp;view=result-list&#34;&gt;Silicate Glass&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;desktop-header-dropdown-material-categories__CategoriesBloackWrapper-sc-1ousnfb-1 edSpfo&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 fWKIzC&#34; href=&#34;/advanced-search?categories=polymer&amp;amp;view=result-list&#34;&gt;Polymer&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=elastomer&amp;amp;view=result-list&#34;&gt;Elastomer&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=thermoplastic&amp;amp;view=result-list&#34;&gt;Thermoplastic&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=thermosetting&amp;amp;view=result-list&#34;&gt;Thermosetting&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;desktop-header-dropdown-material-categories__CategoriesColumn-sc-1ousnfb-0 hHnCBT&#34;&gt;&lt;div class=&#34;desktop-header-dropdown-material-categories__CategoriesBloackWrapper-sc-1ousnfb-1 edSpfo&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 fWKIzC&#34; href=&#34;/advanced-search?categories=metal&amp;amp;view=result-list&#34;&gt;Metal&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=aluminium&amp;amp;view=result-list&#34;&gt;Aluminium&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=cladbimetal&amp;amp;view=result-list&#34;&gt;Clad / Bimetal&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=cobalt&amp;amp;view=result-list&#34;&gt;Cobalt&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=copper&amp;amp;view=result-list&#34;&gt;Copper&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=iron&amp;amp;view=result-list&#34;&gt;Iron&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=magnesium&amp;amp;view=result-list&#34;&gt;Magnesium&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=manganese&amp;amp;view=result-list&#34;&gt;Manganese&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=nickel&amp;amp;view=result-list&#34;&gt;Nickel&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=noble-metal&amp;amp;view=result-list&#34;&gt;Noble Metal&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=other-metal&amp;amp;view=result-list&#34;&gt;Other Metal&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=refractory-metal&amp;amp;view=result-list&#34;&gt;Refractory Metal&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=steel&amp;amp;view=result-list&#34;&gt;Steel&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search?categories=titanium&amp;amp;view=result-list&#34;&gt;Titanium&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;common__DesktopHeaderDropdownWrapperInner-sc-170boom-1 cTBSVf&#34;&gt;&lt;div class=&#34;common__DesktopHeaderDropdownWrapperInner-sc-170boom-1 cTBSVf&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 zDQjJ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 wmqFD&#34; color=&#34;#526193&#34; size=&#34;16&#34;&gt;Tools&lt;/p&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/tools/unit-converter&#34;&gt;Unit Converter&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/tools/hardness-converter&#34;&gt;Hardness Converter&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/advanced-search&#34;&gt;Advanced Search&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/application&#34;&gt;Application Search&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;https://go.matmatch.com/sncurves&#34;&gt;Fatigue Data&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 zDQjJ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 wmqFD&#34; color=&#34;#526193&#34; size=&#34;16&#34;&gt;Guides&lt;/p&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 kUjwEN&#34; href=&#34;/guide/sustainable-materials-selection&#34;&gt;Sustainable Materials Selection&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;common__DesktopHeaderDropdownWrapperInner-sc-170boom-1 cTBSVf&#34;&gt;&lt;div class=&#34;header-action-link__CtaWrapper-sc-1yhrwj5-0 dvhoXp&#34;&gt;&lt;a href=&#34;/advanced-search&#34;&gt;&lt;button class=&#34;button__BaseButton-sc-ekfcy0-0 button__ButtonSpecial-sc-ekfcy0-4 kPiOHq juQzaQ&#34;&gt;Advanced Search&lt;/button&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;header-action-link__CtaWrapper-sc-1yhrwj5-0 dvhoXp&#34;&gt;&lt;a href=&#34;/blog/learn-with-matmatch/&#34;&gt;&lt;img alt=&#34;Learn with Matmatch&#34; src=&#34;https://matmatch.com/blog/wp-content/uploads/2020/05/learn-with-matmatch-menu.png&#34; style=&#34;min-width:100%&#34;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;header-action-link__CtaWrapper-sc-1yhrwj5-0 dvhoXp&#34;&gt;&lt;a href=&#34;/guide/sustainable-materials-selection&#34;&gt;&lt;img alt=&#34;Learn about sustainable materials selection&#34; src=&#34;https://matmatch.com/blog/wp-content/uploads/2020/12/sustainable-materials-selection-menu.jpg&#34; style=&#34;min-width:100%&#34;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 kneKJ&#34;&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 bZBKhy&#34; color=&#34;2.0/default&#34; size=&#34;30&#34; type=&#34;arrow-up&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 jUHcrU&#34;&gt;&lt;div class=&#34;desktop-header-navigation-links__DesktopHeaderNavigationLinksBarItemStyledButton-sc-vppewv-3 gbNQTp&#34;&gt;&lt;p class=&#34;desktop-header-navigation-links__DesktopHeaderNavigationDropdownText-sc-vppewv-4 bKWUBi&#34; color=&#34;#ffffff&#34;&gt;For Suppliers&lt;/p&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;div class=&#34;common__DesktopHeaderDropdownWrapper-sc-170boom-0 gAQIST&#34;&gt;&lt;div class=&#34;desktop-header-dropdown__DesktopHeaderDropdownInnerWrapper-sc-y1g0lx-0 cdqTz&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperStaticContentNoFlex-sc-14fw43j-5 cJNByu flfCwz&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 hrfsee&#34;&gt;&lt;div class=&#34;desktop-header-suppliers-dropdown__Column-sc-1gypbt4-0 czLQLd&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 wmqFD&#34; color=&#34;#526193&#34; size=&#34;16&#34;&gt;Matmatch Suppliers&lt;/p&gt;&lt;div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 fWKIzC&#34; href=&#34;/supplier&#34;&gt;List Your Materials&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 fWKIzC&#34; href=&#34;/partners&#34;&gt;Matmatch Partners&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 fWKIzC&#34; href=&#34;/supplier-resources&#34;&gt;Resources&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 fWKIzC&#34; href=&#34;https://go.matmatch.com/advertise&#34;&gt;Advertise&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 fWKIzC&#34; href=&#34;https://go.matmatch.com/advertising-media-kit&#34;&gt;Media Kit (Advertising)&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;desktop-header-suppliers-dropdown__Column-sc-1gypbt4-0 czLQLd&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 wmqFD&#34; color=&#34;#526193&#34; size=&#34;16&#34;&gt;Case Studies&lt;/p&gt;&lt;div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 fWKIzC&#34; href=&#34;https://go.matmatch.com/case-study/ampco-metal&#34;&gt;AMPCO METAL&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 fWKIzC&#34; href=&#34;https://go.matmatch.com/case-study/dew&#34;&gt;Deutsche Edelstahlwerke&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 fWKIzC&#34; href=&#34;https://go.matmatch.com/case-study/phon-tech&#34;&gt;Phon Tech&lt;/a&gt;&lt;span class=&#34;badge__LinkBadge-sc-1kc0y45-0 ejKxFX&#34;&gt;new&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;common__DesktopHeaderDropdownLinkStyles-sc-170boom-2 fWKIzC&#34; href=&#34;https://go.matmatch.com/case-study/ceratizit&#34;&gt;CERATIZIT&lt;/a&gt;&lt;span class=&#34;badge__LinkBadge-sc-1kc0y45-0 ejKxFX&#34;&gt;new&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;desktop-header-suppliers-dropdown__Column-sc-1gypbt4-0 czLQLd&#34;&gt;&lt;div class=&#34;header-action-link__CtaWrapper-sc-1yhrwj5-0 dvhoXp&#34;&gt;&lt;a href=&#34;/supplier&#34;&gt;&lt;img alt=&#34;Grow with Matmatch&#34; src=&#34;https://matmatch.com/blog/wp-content/uploads/2020/10/grow-with-matmatch-cta.jpg&#34; style=&#34;max-width:60%&#34;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;header-action-link__CtaWrapper-sc-1yhrwj5-0 dvhoXp&#34;&gt;&lt;a href=&#34;https://go.matmatch.com/advertise?headerImage&#34;&gt;&lt;img alt=&#34;Advertise&#34; src=&#34;https://matmatch.com/blog/wp-content/uploads/2021/02/media-cta.jpg&#34; style=&#34;max-width:60%&#34;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;header-action-link__CtaWrapper-sc-1yhrwj5-0 dvhoXp&#34;&gt;&lt;a href=&#34;/supplier-resources&#34;&gt;&lt;img alt=&#34;Resources&#34; src=&#34;https://matmatch.com/blog/wp-content/uploads/2020/10/marketing-resources-cta.jpg&#34; style=&#34;max-width:60%&#34;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 kneKJ&#34;&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 bZBKhy&#34; color=&#34;2.0/default&#34; size=&#34;30&#34; type=&#34;arrow-up&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 eYFpTR desktop-header-navigation-links__DesktopHeaderNavigationLinksBarItemLink-sc-vppewv-2 goozRc&#34; href=&#34;/resources&#34;&gt;Resources&lt;/a&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 eYFpTR desktop-header-navigation-links__DesktopHeaderNavigationLinksBarItemLink-sc-vppewv-2 goozRc&#34; href=&#34;/about&#34;&gt;About us&lt;/a&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 eYFpTR desktop-header-navigation-links__DesktopHeaderNavigationLinksBarItemLink-sc-vppewv-2 goozRc&#34; href=&#34;/services/get-connected&#34;&gt;Get Connected&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;header__MobileHeaderWrapper-sc-vi2mkw-2 eWjGyj&#34;&gt;&lt;div class=&#34;mobile-header__MobileHeaderWrapper-sc-dvud91-0 kDpNZQ&#34;&gt;&lt;div class=&#34;mobile-header__MobileHeaderStaticBar-sc-dvud91-1 iiDvup&#34;&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 styled-link-styles__ImageLinkStyles-sc-l1ctuc-2 eePTOF dOZIXC&#34; height=&#34;22&#34; href=&#34;/&#34; src=&#34;/static/images/inlined/logo_inverted.svg&#34; width=&#34;95&#34;&gt;&lt;/a&gt;&lt;div class=&#34;mobile-header__MobileHeaderStaticBarSearchIconWrapper-sc-dvud91-2 cmjpNo&#34;&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 cXnjPW&#34; color=&#34;2.0/white&#34; type=&#34;ios-search-strong&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 eyhBpa&#34; color=&#34;2.0/white&#34; size=&#34;22&#34; type=&#34;android-menu&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header__MobileHeaderSlideDownWrapper-sc-dvud91-6 cwmMhq&#34;&gt;&lt;div class=&#34;mobile-header__MobileHeaderSlideDownHeader-sc-dvud91-5 CjJpx&#34;&gt;&lt;ul class=&#34;mobile-header__MobileHeaderMenuList-sc-dvud91-3 hpPhjx&#34;&gt;&lt;li class=&#34;mobile-header__MobileHeaderMenuListItem-sc-dvud91-4 tMWkf&#34;&gt;&lt;div class=&#34;mobile-header-user-not-signed-in__MobileHeaderUserNotSignedInWrapper-sc-195838o-0 hvBjgr&#34;&gt;&lt;button class=&#34;button__BaseButton-sc-ekfcy0-0 mobile-header-user-not-signed-in__MobileHeaderUserSignInButton-sc-195838o-2 NWGvI bTObyH&#34;&gt;Sign in&lt;/button&gt;&lt;button class=&#34;button__BaseButton-sc-ekfcy0-0 mobile-header-user-not-signed-in__MobileHeaderUserSignUpButton-sc-195838o-1 NWGvI lpgqvm&#34;&gt;Register&lt;/button&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 cJojhb&#34;&gt;You are not signed in&lt;/p&gt;&lt;/div&gt;&lt;/li&gt;&lt;li class=&#34;mobile-header__MobileHeaderMenuListItem-sc-dvud91-4 tMWkf&#34;&gt;&lt;ul class=&#34;list__List-sc-7ainlj-0 mobile-profile-menu__HeaderProfileMenuList-sc-c6el3s-0 uluvW eipfdL&#34;&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 fpFFKD&#34; href=&#34;/messages&#34;&gt;&lt;li class=&#34;list__ListItem-sc-7ainlj-1 mobile-profile-menu__HeaderProfileMenuItem-sc-c6el3s-1 RbSSA eidcBU&#34;&gt;Messages&lt;/li&gt;&lt;/a&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 fpFFKD&#34; href=&#34;/account&#34;&gt;&lt;li class=&#34;list__ListItem-sc-7ainlj-1 mobile-profile-menu__HeaderProfileMenuItem-sc-c6el3s-1 RbSSA eidcBU&#34;&gt;Profile&lt;/li&gt;&lt;/a&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 fpFFKD&#34; href=&#34;/account/settings&#34;&gt;&lt;li class=&#34;list__ListItem-sc-7ainlj-1 mobile-profile-menu__HeaderProfileMenuItem-sc-c6el3s-1 RbSSA eidcBU&#34;&gt;Settings&lt;/li&gt;&lt;/a&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 fpFFKD&#34; href=&#34;/advanced-search?categories=steel&amp;amp;tags=form%3Abar#&#34;&gt;&lt;li class=&#34;list__ListItem-sc-7ainlj-1 mobile-profile-menu__HeaderProfileMenuItem-sc-c6el3s-1 RbSSA eidcBU&#34;&gt;Sign out&lt;/li&gt;&lt;/a&gt;&lt;/ul&gt;&lt;/li&gt;&lt;hr class=&#34;separation-line__SeparationLine-sc-1gtqai2-0 separation-line__SeparationLineDefault-sc-1gtqai2-1 cVgbLf kwnPiJ&#34;/&gt;&lt;li class=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBar-sc-ssinjx-0 evPxyJ&#34;&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarItemstyledButton-sc-ssinjx-5 lgzuuz&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 mobile-header-dynamic-menu__MobileHeaderDropdownFirstLevelCategoryText-sc-ssinjx-2 dzDHxo bjzJUu&#34;&gt;Categories&lt;/p&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 kbRKml&#34; color=&#34;2.0/primary&#34; size=&#34;14&#34; type=&#34;ios-arrow-down&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-menu__MobileHeaderDropdownWrapper-sc-ssinjx-1 cJNByu bxYrpi&#34;&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderDropdownItemsWrapper-sc-ssinjx-4 ghkwNZ&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-categories-connected__MobileHeaderDropdownSecondLevelLinksWrapper-sc-rlj3br-0 cJNByu dlnRUd&#34;&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarItemstyledButton-sc-ssinjx-5 kYgdAl&#34;&gt;&lt;div style=&#34;flex:1&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 elfMjy&#34; href=&#34;/advanced-search?categories=biological-material&#34;&gt;Biological Material&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 iNazJp&#34; color=&#34;2.0/primary&#34; size=&#34;12&#34; type=&#34;ios-arrow-down&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-menu__MobileHeaderDropdownWrapper-sc-ssinjx-1 kTmWRN bxYrpi&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;/advanced-search?categories=wood&#34;&gt;Wood&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarItemstyledButton-sc-ssinjx-5 kYgdAl&#34;&gt;&lt;div style=&#34;flex:1&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 elfMjy&#34; href=&#34;/advanced-search?categories=ceramic&#34;&gt;Ceramic&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 iNazJp&#34; color=&#34;2.0/primary&#34; size=&#34;12&#34; type=&#34;ios-arrow-down&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-menu__MobileHeaderDropdownWrapper-sc-ssinjx-1 kTmWRN bxYrpi&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=carbon&#34;&gt;Carbon&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=engineering-ceramic&#34;&gt;Engineering Ceramic&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;/advanced-search?categories=natural-ceramic&#34;&gt;Natural Ceramic&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarItemstyledButton-sc-ssinjx-5 kYgdAl&#34;&gt;&lt;div style=&#34;flex:1&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 elfMjy&#34; href=&#34;/advanced-search?categories=composite&#34;&gt;Composite&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 iNazJp&#34; color=&#34;2.0/primary&#34; size=&#34;12&#34; type=&#34;ios-arrow-down&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-menu__MobileHeaderDropdownWrapper-sc-ssinjx-1 kTmWRN bxYrpi&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=ceramic-matrix-composite&#34;&gt;Ceramic Matrix Composite&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=metal-matrix-composite&#34;&gt;Metal Matrix Composite&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;/advanced-search?categories=polymer-matrix-composite&#34;&gt;Polymer Matrix Composite&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarItemstyledButton-sc-ssinjx-5 kYgdAl&#34;&gt;&lt;div style=&#34;flex:1&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 elfMjy&#34; href=&#34;/advanced-search?categories=glass&#34;&gt;Glass&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 iNazJp&#34; color=&#34;2.0/primary&#34; size=&#34;12&#34; type=&#34;ios-arrow-down&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-menu__MobileHeaderDropdownWrapper-sc-ssinjx-1 kTmWRN bxYrpi&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=glass-ceramic&#34;&gt;Glass Ceramic&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=lead-glass&#34;&gt;Lead Glass&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;/advanced-search?categories=silicate-glass&#34;&gt;Silicate Glass&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarItemstyledButton-sc-ssinjx-5 kYgdAl&#34;&gt;&lt;div style=&#34;flex:1&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 elfMjy&#34; href=&#34;/advanced-search?categories=polymer&#34;&gt;Polymer&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 iNazJp&#34; color=&#34;2.0/primary&#34; size=&#34;12&#34; type=&#34;ios-arrow-down&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-menu__MobileHeaderDropdownWrapper-sc-ssinjx-1 kTmWRN bxYrpi&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=elastomer&#34;&gt;Elastomer&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=thermoplastic&#34;&gt;Thermoplastic&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;/advanced-search?categories=thermosetting&#34;&gt;Thermosetting&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarItemstyledButton-sc-ssinjx-5 kYgdAl&#34;&gt;&lt;div style=&#34;flex:1&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 elfMjy&#34; href=&#34;/advanced-search?categories=metal&#34;&gt;Metal&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 iNazJp&#34; color=&#34;2.0/primary&#34; size=&#34;12&#34; type=&#34;ios-arrow-down&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-menu__MobileHeaderDropdownWrapper-sc-ssinjx-1 kTmWRN bxYrpi&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=aluminium&#34;&gt;Aluminium&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=cladbimetal&#34;&gt;Clad / Bimetal&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=cobalt&#34;&gt;Cobalt&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=copper&#34;&gt;Copper&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=iron&#34;&gt;Iron&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=magnesium&#34;&gt;Magnesium&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=manganese&#34;&gt;Manganese&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=nickel&#34;&gt;Nickel&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=noble-metal&#34;&gt;Noble Metal&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=other-metal&#34;&gt;Other Metal&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=refractory-metal&#34;&gt;Refractory Metal&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 fIeyGw&#34; href=&#34;/advanced-search?categories=steel&#34;&gt;Steel&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;/advanced-search?categories=titanium&#34;&gt;Titanium&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarItemstyledButton-sc-ssinjx-5 lgzuuz&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 mobile-header-dynamic-menu__MobileHeaderDropdownFirstLevelCategoryText-sc-ssinjx-2 dzDHxo bjzJUu&#34;&gt;Matmatch Suppliers&lt;/p&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 kbRKml&#34; color=&#34;2.0/primary&#34; size=&#34;14&#34; type=&#34;ios-arrow-down&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-menu__MobileHeaderDropdownWrapper-sc-ssinjx-1 cJNByu bxYrpi&#34;&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderDropdownItemsWrapper-sc-ssinjx-4 ghkwNZ&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-navigation__MobileHeaderDropdownSecondLevelLinksWrapper-sc-h9xaov-0 cJNByu eSAgkB&#34;&gt;&lt;div class=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1 hHsZTR&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;/supplier&#34;&gt;List Your Materials&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1 hHsZTR&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;/partners&#34;&gt;Matmatch Partners&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1 hHsZTR&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;/supplier-resources&#34;&gt;Resources&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1 hHsZTR&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;https://go.matmatch.com/advertise&#34;&gt;Advertise&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1 hHsZTR&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;https://go.matmatch.com/advertising-media-kit&#34;&gt;Media Kit (Advertising)&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarItemstyledButton-sc-ssinjx-5 lgzuuz&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 mobile-header-dynamic-menu__MobileHeaderDropdownFirstLevelCategoryText-sc-ssinjx-2 dzDHxo bjzJUu&#34;&gt;Case Studies&lt;/p&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 kbRKml&#34; color=&#34;2.0/primary&#34; size=&#34;14&#34; type=&#34;ios-arrow-down&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-menu__MobileHeaderDropdownWrapper-sc-ssinjx-1 cJNByu bxYrpi&#34;&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderDropdownItemsWrapper-sc-ssinjx-4 ghkwNZ&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-navigation__MobileHeaderDropdownSecondLevelLinksWrapper-sc-h9xaov-0 cJNByu eSAgkB&#34;&gt;&lt;div class=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1 hHsZTR&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;https://go.matmatch.com/case-study/ampco-metal&#34;&gt;AMPCO METAL&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1 hHsZTR&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;https://go.matmatch.com/case-study/dew&#34;&gt;Deutsche Edelstahlwerke&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1 hHsZTR&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;https://go.matmatch.com/case-study/phon-tech&#34;&gt;Phon Tech&lt;/a&gt;&lt;span class=&#34;badge__LinkBadge-sc-1kc0y45-0 ejKxFX&#34;&gt;new&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1 hHsZTR&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;https://go.matmatch.com/case-study/ceratizit&#34;&gt;CERATIZIT&lt;/a&gt;&lt;span class=&#34;badge__LinkBadge-sc-1kc0y45-0 ejKxFX&#34;&gt;new&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarItemstyledButton-sc-ssinjx-5 lgzuuz&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 mobile-header-dynamic-menu__MobileHeaderDropdownFirstLevelCategoryText-sc-ssinjx-2 dzDHxo bjzJUu&#34;&gt;Tools&lt;/p&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 kbRKml&#34; color=&#34;2.0/primary&#34; size=&#34;14&#34; type=&#34;ios-arrow-down&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-menu__MobileHeaderDropdownWrapper-sc-ssinjx-1 cJNByu bxYrpi&#34;&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderDropdownItemsWrapper-sc-ssinjx-4 ghkwNZ&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-navigation__MobileHeaderDropdownSecondLevelLinksWrapper-sc-h9xaov-0 cJNByu eSAgkB&#34;&gt;&lt;div class=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1 hHsZTR&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;/tools/unit-converter&#34;&gt;Unit Converter&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1 hHsZTR&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;/tools/hardness-converter&#34;&gt;Hardness Converter&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1 hHsZTR&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;/advanced-search&#34;&gt;Advanced Search&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1 hHsZTR&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;/application&#34;&gt;Application Search&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1 hHsZTR&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;https://go.matmatch.com/sncurves&#34;&gt;Fatigue Data&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarItemstyledButton-sc-ssinjx-5 lgzuuz&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 mobile-header-dynamic-menu__MobileHeaderDropdownFirstLevelCategoryText-sc-ssinjx-2 dzDHxo bjzJUu&#34;&gt;Guides&lt;/p&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 kbRKml&#34; color=&#34;2.0/primary&#34; size=&#34;14&#34; type=&#34;ios-arrow-down&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-menu__MobileHeaderDropdownWrapper-sc-ssinjx-1 cJNByu bxYrpi&#34;&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderDropdownItemsWrapper-sc-ssinjx-4 ghkwNZ&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-navigation__MobileHeaderDropdownSecondLevelLinksWrapper-sc-h9xaov-0 cJNByu eSAgkB&#34;&gt;&lt;div class=&#34;mobile-header-dynamic-navigation__CategoriesBlockWrapper-sc-h9xaov-1 hHsZTR&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;a class=&#34;mobile-header-dropdown-link__MobileHeaderDropdownLinkStyles-sc-1ifsvtl-0 hKoOWf&#34; href=&#34;/guide/sustainable-materials-selection&#34;&gt;Sustainable Materials Selection&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarWrapper-sc-ssinjx-3 cJNByu&#34;&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarItemstyledButton-sc-ssinjx-5 lgzuuz&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 dSdjdP&#34; color=&#34;#526193&#34;&gt;Resources&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarWrapper-sc-ssinjx-3 cJNByu&#34;&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarItemstyledButton-sc-ssinjx-5 lgzuuz&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 dSdjdP&#34; color=&#34;#526193&#34;&gt;About us&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarWrapper-sc-ssinjx-3 cJNByu&#34;&gt;&lt;div class=&#34;mobile-header-dynamic-menu__MobileHeaderNavigationLinksBarItemstyledButton-sc-ssinjx-5 lgzuuz&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 dSdjdP&#34; color=&#34;#526193&#34;&gt;Get Connected&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;main-content-spacer__MainContentSpacer-sc-1g5s1bz-0 hWwxLn&#34;&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperStaticContentNoFlex-sc-14fw43j-5 cJNByu flfCwz&#34; style=&#34;padding-bottom:0&#34;&gt;&lt;div class=&#34;contextual-tags__ContextualTagsWrapper-sc-dg6jub-0 jnuTJQ&#34;&gt;&lt;div class=&#34;contextual-tags__ContextualTagsItemsWrapper-sc-dg6jub-2 cSROfV&#34;&gt;&lt;div class=&#34;contextual-tags__ContextualTagWrapper-sc-dg6jub-1 fsqjse&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 ehJUxb&#34; color=&#34;#4f4f4f&#34; size=&#34;16&#34;&gt;Bar&lt;/p&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 caVxgD&#34; cursor=&#34;pointer&#34; fill=&#34;#3880E5&#34; height=&#34;20&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;20&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#close-71610fd5--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 wrappers__WrapperStaticContent-sc-14fw43j-4 advanced-search__AdvancedSearchMainSectionWrapper-sc-1eqc1e8-1 cJNByu hFcCJB hzZiwD ixACSA&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperSidebar-sc-14fw43j-10 sidebar__AdvancedSearchSidebarWrapper-sc-1v590t3-0 kqTmue fUzxei gyajYF&#34; width=&#34;438&#34;&gt;&lt;div class=&#34;collapse-toggle__CollapseToggleWrapper-sc-vxcac6-0 gdlobs&#34;&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 jWARuS collapse-toggle__CollapseToggleOptionsIcon-sc-vxcac6-1 gFfIFF&#34; fill=&#34;#526193&#34; height=&#34;20&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;20&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#options-4de2f7a5--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;div class=&#34;collapse-toggle__CollapseToggleTitle-sc-vxcac6-2 iTeGNl&#34;&gt;FILTERS&lt;/div&gt;&lt;div class=&#34;collapse-toggle__CollapseToggleArrowCircle-sc-vxcac6-3 cgzKyT&#34;&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 fXOOJz&#34; fill=&#34;#3880e5&#34; height=&#34;32&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;32&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#arrow-dropright-circle-d7d58289--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 cJNByu gFqwTB&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 jLqxex&#34; color=&#34;#526193&#34;&gt;Categories &lt;/p&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 cJNByu dMXLyl&#34;&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 haqEoE&#34; cursor=&#34;pointer&#34; fill=&#34;#333333&#34; height=&#34;14&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;14&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#ios-arrow-down-cc61b5f7--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;advanced-search-sidebar-collapsible-filters-wrapper__ASSidebarCollapsibleFiltersWrapper-sc-1m5vrop-0 XbfDr categories-tree-wrapper&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 UxvCa dMXLyl&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 OhGlj&#34;&gt;&lt;/div&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 cgTHVD&#34; color=&#34;#333333&#34; size=&#34;13&#34;&gt;All&lt;/p&gt;&lt;/div&gt;&lt;ul class=&#34;tree-renderer__TreeWrapper-sc-wdfwzn-0 djLvdn&#34;&gt;&lt;li class=&#34;tree-item__TreeItem-sc-1ndoqn1-0 bhkHlB de-collapsed-tree-item&#34;&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 hrGMmp&#34; cursor=&#34;pointer&#34; fill=&#34;#4496ec&#34; height=&#34;12&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;12&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#plus-open-47001aa9--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 bBVMlc&#34;&gt;&lt;/div&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 enTUov&#34; cursor=&#34;pointer&#34; fill=&#34;#4496ec&#34; height=&#34;22&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;28&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#folder-344ee9af--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 hjLFxX&#34; size=&#34;13&#34;&gt;Biological Material&lt;/p&gt;&lt;/li&gt;&lt;div class=&#34;wrappers__CollapseContentWrapper-sc-14fw43j-12 ftzCdl&#34;&gt;&lt;/div&gt;&lt;li class=&#34;tree-item__TreeItem-sc-1ndoqn1-0 bhkHlB de-collapsed-tree-item&#34;&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 hrGMmp&#34; cursor=&#34;pointer&#34; fill=&#34;#4496ec&#34; height=&#34;12&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;12&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#plus-open-47001aa9--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 bBVMlc&#34;&gt;&lt;/div&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 enTUov&#34; cursor=&#34;pointer&#34; fill=&#34;#4496ec&#34; height=&#34;22&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;28&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#folder-344ee9af--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 hjLFxX&#34; size=&#34;13&#34;&gt;Ceramic&lt;/p&gt;&lt;/li&gt;&lt;div class=&#34;wrappers__CollapseContentWrapper-sc-14fw43j-12 ftzCdl&#34;&gt;&lt;/div&gt;&lt;li class=&#34;tree-item__TreeItem-sc-1ndoqn1-0 bhkHlB de-collapsed-tree-item&#34;&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 hrGMmp&#34; cursor=&#34;pointer&#34; fill=&#34;#4496ec&#34; height=&#34;12&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;12&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#plus-open-47001aa9--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 bBVMlc&#34;&gt;&lt;/div&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 enTUov&#34; cursor=&#34;pointer&#34; fill=&#34;#4496ec&#34; height=&#34;22&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;28&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#folder-344ee9af--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 hjLFxX&#34; size=&#34;13&#34;&gt;Composite&lt;/p&gt;&lt;/li&gt;&lt;div class=&#34;wrappers__CollapseContentWrapper-sc-14fw43j-12 ftzCdl&#34;&gt;&lt;/div&gt;&lt;li class=&#34;tree-item__TreeItem-sc-1ndoqn1-0 bhkHlB de-collapsed-tree-item&#34;&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 hrGMmp&#34; cursor=&#34;pointer&#34; fill=&#34;#4496ec&#34; height=&#34;12&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;12&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#plus-open-47001aa9--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 bBVMlc&#34;&gt;&lt;/div&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 enTUov&#34; cursor=&#34;pointer&#34; fill=&#34;#4496ec&#34; height=&#34;22&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;28&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#folder-344ee9af--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 hjLFxX&#34; size=&#34;13&#34;&gt;Glass&lt;/p&gt;&lt;/li&gt;&lt;div class=&#34;wrappers__CollapseContentWrapper-sc-14fw43j-12 ftzCdl&#34;&gt;&lt;/div&gt;&lt;li class=&#34;tree-item__TreeItem-sc-1ndoqn1-0 bhkHlB collapsed-tree-item&#34;&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 hrGMmp&#34; cursor=&#34;pointer&#34; fill=&#34;#4496ec&#34; height=&#34;12&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;12&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#plus-open-47001aa9--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;div checked=&#34;&#34; class=&#34;check-box__MinusCheckboxDesign-sc-1ptpc08-1 dsaEue&#34;&gt;&lt;/div&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 enTUov&#34; cursor=&#34;pointer&#34; fill=&#34;#4496ec&#34; height=&#34;22&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;28&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#folder-344ee9af--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 hjLFxX&#34; size=&#34;13&#34;&gt;Metal&lt;/p&gt;&lt;span class=&#34;advanced-search-count-number__CountNumber-sc-8hlubs-0 eajQMm&#34;&gt;2214&lt;/span&gt;&lt;/li&gt;&lt;div class=&#34;wrappers__CollapseContentWrapper-sc-14fw43j-12 ftzCdl&#34;&gt;&lt;/div&gt;&lt;li class=&#34;tree-item__TreeItem-sc-1ndoqn1-0 bhkHlB de-collapsed-tree-item&#34;&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 hrGMmp&#34; cursor=&#34;pointer&#34; fill=&#34;#4496ec&#34; height=&#34;12&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;12&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#plus-open-47001aa9--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 bBVMlc&#34;&gt;&lt;/div&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 enTUov&#34; cursor=&#34;pointer&#34; fill=&#34;#4496ec&#34; height=&#34;22&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;28&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#folder-344ee9af--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 hjLFxX&#34; size=&#34;13&#34;&gt;Polymer&lt;/p&gt;&lt;/li&gt;&lt;div class=&#34;wrappers__CollapseContentWrapper-sc-14fw43j-12 ftzCdl&#34;&gt;&lt;/div&gt;&lt;/ul&gt;&lt;/div&gt;&lt;hr class=&#34;advanced-search-sidebar-separator__AdvancedSearchSidebarSeparator-sc-1rstb9s-0 dDcZzF&#34;/&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 cJNByu gFqwTB&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 jLqxex&#34; color=&#34;#526193&#34;&gt;Material properties &lt;/p&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 cJNByu dMXLyl&#34;&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 haqEoE&#34; cursor=&#34;pointer&#34; fill=&#34;#333333&#34; height=&#34;14&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;14&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#ios-arrow-down-cc61b5f7--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;advanced-search-sidebar-collapsible-filters-wrapper__ASSidebarCollapsibleFiltersWrapper-sc-1m5vrop-0 XbfDr categories-tree-wrapper&#34;&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;advanced-search-sidebar-actions__ActionsWrapper-sc-qhfbni-0 cwhWGZ&#34;&gt;&lt;button class=&#34;advanced-search-sidebar-action-button__ActionButton-sc-15cfzym-0 hXYfhe&#34;&gt;Add a material property&lt;span class=&#34;icon__Icon-sc-1230ehg-0 eiXgPa&#34; color=&#34;2.0/white&#34; size=&#34;10&#34; type=&#34;plus&#34;&gt;&lt;/span&gt;&lt;/button&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 advanced-search-sidebar-actions__ActionsText-sc-qhfbni-1 ldWNpx hVhMIm&#34; color=&#34;#3880E5&#34; cursor=&#34;pointer&#34; disabled=&#34;&#34; size=&#34;13&#34;&gt;Clear all&lt;/p&gt;&lt;/div&gt;&lt;hr class=&#34;advanced-search-sidebar-separator__AdvancedSearchSidebarSeparator-sc-1rstb9s-0 dDcZzF&#34;/&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 cJNByu gFqwTB&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 jLqxex&#34; color=&#34;#526193&#34;&gt;Metal Filters&lt;/p&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 cJNByu dMXLyl&#34;&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 haqEoE&#34; cursor=&#34;pointer&#34; fill=&#34;#333333&#34; height=&#34;14&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;14&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#ios-arrow-down-cc61b5f7--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;advanced-search-sidebar-collapsible-filters-wrapper__ASSidebarCollapsibleFiltersWrapper-sc-1m5vrop-0 XbfDr categories-tree-wrapper&#34;&gt;&lt;div class=&#34;guided-tour-step-category-specific-settings&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 LLywI&#34; color=&#34;#333333&#34; size=&#34;13&#34;&gt;Shape / Form&lt;/p&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;div class=&#34;advanced-search-category-specific-settings-dropdown__FieldWrapper-sc-113hj4-1 epQYxF&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 advanced-search-category-specific-settings-dropdown__FieldText-sc-113hj4-0 hjtwVq gNwTRO&#34; color=&#34;#333333&#34; size=&#34;16&#34;&gt;Bar&lt;/p&gt;&lt;span&gt;&lt;span style=&#34;cursor:help;display:block;flex-direction:column;z-index:100&#34;&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 kXkjMs&#34; color=&#34;2.0/default&#34; size=&#34;12&#34; type=&#34;close&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;cursor:help;display:block;flex-direction:column;z-index:100&#34;&gt;&lt;div class=&#34;advanced-search-category-specific-settings-dropdown__PlusIconContainer-sc-113hj4-7 zzdEX&#34;&gt;&lt;div class=&#34;plus-icon__PlusIcon-sc-13w6ro8-0 fdCHWk&#34; size=&#34;16&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;advanced-search-category-specific-settings-dropdown__DropDownContainer-sc-113hj4-2 kRDCWz&#34;&gt;&lt;div class=&#34;advanced-search-category-specific-settings-dropdown__DropDownItemsWrapper-sc-113hj4-3 huFKrQ&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;hr class=&#34;advanced-search-sidebar-separator__AdvancedSearchSidebarSeparator-sc-1rstb9s-0 dDcZzF&#34;/&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 hLVIHw&#34; color=&#34;#526193&#34;&gt;SYSTEM MEASUREMENTS&lt;/p&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 bcLXBB dMXLyl&#34;&gt;&lt;div class=&#34;radio-button__RadioButtonOuter-sc-mwb92w-0 hucmjH&#34;&gt;&lt;div class=&#34;radio-button__RadioButtonInner-sc-mwb92w-1 jXbQYq&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 KmEHA&#34; color=&#34;#333333&#34; size=&#34;13&#34;&gt;Metric&lt;/p&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 bRaHnE dMXLyl&#34;&gt;&lt;div class=&#34;radio-button__RadioButtonOuter-sc-mwb92w-0 hucmjH&#34;&gt;&lt;/div&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 KmEHA&#34; color=&#34;#333333&#34; size=&#34;13&#34;&gt;Imperial&lt;/p&gt;&lt;/div&gt;&lt;hr class=&#34;advanced-search-sidebar-separator__AdvancedSearchSidebarSeparator-sc-1rstb9s-0 dDcZzF&#34;/&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 cJNByu gFqwTB&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 jLqxex&#34; color=&#34;#526193&#34;&gt;Suppliers &lt;/p&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 cJNByu dMXLyl&#34;&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 haqEoE&#34; cursor=&#34;pointer&#34; fill=&#34;#333333&#34; height=&#34;14&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;14&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#ios-arrow-down-cc61b5f7--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;advanced-search-sidebar-collapsible-filters-wrapper__ASSidebarCollapsibleFiltersWrapper-sc-1m5vrop-0 XbfDr categories-tree-wrapper&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 zDQjJ cwHZQB&#34;&gt;&lt;div class=&#34;advanced-search-sidebar-suppliers__ItemHeaderWrapper-sc-12new5k-0 cFpniu&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 fWynpt&#34; color=&#34;#333333&#34; size=&#34;13&#34;&gt;Include materials without suppliers&lt;/p&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 dTGKOg hFcCJB&#34;&gt;&lt;div checked=&#34;&#34; class=&#34;toggle__ToggleWrapper-sc-th0yzv-0 gslBUi&#34;&gt;&lt;div checked=&#34;&#34; class=&#34;toggle__ToggleCheckmark-sc-th0yzv-1 hbpQfU&#34;&gt;&lt;/div&gt;&lt;div checked=&#34;&#34; class=&#34;toggle__ToggleToggle-sc-th0yzv-2 fArqYf&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 bRaHnE cwHZQB&#34;&gt;&lt;div class=&#34;advanced-search-sidebar-item-header__ItemHeaderWrapper-sc-1n7d7as-0 iPlPmm&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 OhGlj&#34;&gt;&lt;/div&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 fWynpt&#34; color=&#34;#333333&#34; size=&#34;13&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/p&gt;&lt;span class=&#34;advanced-search-count-number__CountNumber-sc-8hlubs-0 eajQMm&#34;&gt;93&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 bRaHnE cwHZQB&#34;&gt;&lt;div class=&#34;advanced-search-sidebar-item-header__ItemHeaderWrapper-sc-1n7d7as-0 iPlPmm&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 OhGlj&#34;&gt;&lt;/div&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 fWynpt&#34; color=&#34;#333333&#34; size=&#34;13&#34;&gt;Ugitech&lt;/p&gt;&lt;span class=&#34;advanced-search-count-number__CountNumber-sc-8hlubs-0 eajQMm&#34;&gt;50&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 bRaHnE cwHZQB&#34;&gt;&lt;div class=&#34;advanced-search-sidebar-item-header__ItemHeaderWrapper-sc-1n7d7as-0 iPlPmm&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 OhGlj&#34;&gt;&lt;/div&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 fWynpt&#34; color=&#34;#333333&#34; size=&#34;13&#34;&gt;Sverdrup Steel AS&lt;/p&gt;&lt;span class=&#34;advanced-search-count-number__CountNumber-sc-8hlubs-0 eajQMm&#34;&gt;20&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 bRaHnE cwHZQB&#34;&gt;&lt;div class=&#34;advanced-search-sidebar-item-header__ItemHeaderWrapper-sc-1n7d7as-0 iPlPmm&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 OhGlj&#34;&gt;&lt;/div&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 fWynpt&#34; color=&#34;#333333&#34; size=&#34;13&#34;&gt;Salomon&#39;s Metalen&lt;/p&gt;&lt;span class=&#34;advanced-search-count-number__CountNumber-sc-8hlubs-0 eajQMm&#34;&gt;16&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 bRaHnE cwHZQB&#34;&gt;&lt;div class=&#34;advanced-search-sidebar-item-header__ItemHeaderWrapper-sc-1n7d7as-0 iPlPmm&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 OhGlj&#34;&gt;&lt;/div&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 fWynpt&#34; color=&#34;#333333&#34; size=&#34;13&#34;&gt;Hempel Special Metals&lt;/p&gt;&lt;span class=&#34;advanced-search-count-number__CountNumber-sc-8hlubs-0 eajQMm&#34;&gt;4&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 bRaHnE cwHZQB&#34;&gt;&lt;div class=&#34;advanced-search-sidebar-item-header__ItemHeaderWrapper-sc-1n7d7as-0 iPlPmm&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 OhGlj&#34;&gt;&lt;/div&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 fWynpt&#34; color=&#34;#333333&#34; size=&#34;13&#34;&gt;VDM Metals&lt;/p&gt;&lt;span class=&#34;advanced-search-count-number__CountNumber-sc-8hlubs-0 eajQMm&#34;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 bRaHnE cwHZQB&#34;&gt;&lt;div class=&#34;advanced-search-sidebar-item-header__ItemHeaderWrapper-sc-1n7d7as-0 iPlPmm&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 OhGlj&#34;&gt;&lt;/div&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 fWynpt&#34; color=&#34;#333333&#34; size=&#34;13&#34;&gt;Dongguan songshun mould steel Co., Ltd.&lt;/p&gt;&lt;span class=&#34;advanced-search-count-number__CountNumber-sc-8hlubs-0 eajQMm&#34;&gt;13&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 bRaHnE cwHZQB&#34;&gt;&lt;div class=&#34;advanced-search-sidebar-item-header__ItemHeaderWrapper-sc-1n7d7as-0 iPlPmm&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 OhGlj&#34;&gt;&lt;/div&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 fWynpt&#34; color=&#34;#333333&#34; size=&#34;13&#34;&gt;Ambica Steels Limited&lt;/p&gt;&lt;span class=&#34;advanced-search-count-number__CountNumber-sc-8hlubs-0 eajQMm&#34;&gt;10&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;advanced-search-sidebar-actions__ActionsWrapper-sc-qhfbni-0 cwhWGZ&#34;&gt;&lt;button class=&#34;advanced-search-sidebar-action-button__ActionButton-sc-15cfzym-0 hXYfhe&#34;&gt;See all suppliers&lt;/button&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 advanced-search-sidebar-actions__ActionsText-sc-qhfbni-1 ldWNpx hVhMIm&#34; color=&#34;#3880E5&#34; cursor=&#34;pointer&#34; disabled=&#34;&#34; size=&#34;13&#34;&gt;Clear all&lt;/p&gt;&lt;/div&gt;&lt;hr class=&#34;advanced-search-sidebar-separator__AdvancedSearchSidebarSeparator-sc-1rstb9s-0 dDcZzF&#34;/&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 cJNByu gFqwTB&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 jLqxex&#34; color=&#34;#526193&#34;&gt;Applications &lt;/p&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 cJNByu dMXLyl&#34;&gt;&lt;svg class=&#34;icon__Svg-sc-1230ehg-1 haqEoE&#34; cursor=&#34;pointer&#34; fill=&#34;#333333&#34; height=&#34;14&#34; viewbox=&#34;0 0 30 30&#34; width=&#34;14&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;use href=&#34;#ios-arrow-down-cc61b5f7--sprite&#34;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;advanced-search-sidebar-collapsible-filters-wrapper__ASSidebarCollapsibleFiltersWrapper-sc-1m5vrop-0 XbfDr categories-tree-wrapper&#34;&gt;&lt;/div&gt;&lt;div class=&#34;advanced-search-sidebar-actions__ActionsWrapper-sc-qhfbni-0 cwhWGZ&#34;&gt;&lt;button class=&#34;advanced-search-sidebar-action-button__ActionButton-sc-15cfzym-0 hXYfhe&#34;&gt;Add an application&lt;span class=&#34;icon__Icon-sc-1230ehg-0 eiXgPa&#34; color=&#34;2.0/white&#34; size=&#34;10&#34; type=&#34;plus&#34;&gt;&lt;/span&gt;&lt;/button&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 advanced-search-sidebar-actions__ActionsText-sc-qhfbni-1 ldWNpx hVhMIm&#34; color=&#34;#3880E5&#34; cursor=&#34;pointer&#34; disabled=&#34;&#34; size=&#34;13&#34;&gt;Clear all&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperMainContent-sc-14fw43j-9 results-list-view__AdvancedSearchMainContentWrapper-sc-d70l4k-1 cJNByu prlvG ifaaZC&#34;&gt;&lt;div class=&#34;results-list-view__TopPositionBannerWrapper-sc-d70l4k-0 jleRfd&#34;&gt;&lt;div class=&#34;campaigns__CampaignBannerWrapper-sc-a2pwr6-0 ewHqQp&#34; height=&#34;90&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;results-list-view__AdvancedSearchAllertsWrapper-sc-d70l4k-2 dgFZRr&#34;&gt;&lt;/div&gt;&lt;div class=&#34;navigation-component__AdvancedSearchNavigationComponentWrapper-sc-1j05mwq-0 fHnuKk&#34;&gt;&lt;div class=&#34;navigation-component__AdvancedSearchNavigationItemWrapper-sc-1j05mwq-1 fmDqYN&#34;&gt;&lt;div class=&#34;navigation-component__NavigationItemNumber-sc-1j05mwq-2 bwwYIA&#34;&gt;1&lt;/div&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 eUTBqM&#34; color=&#34;#ff8200&#34; size=&#34;16&#34;&gt;RESULT LIST&lt;/p&gt;&lt;/div&gt;&lt;div class=&#34;navigation-component__AdvancedSearchNavigationItemWrapper-sc-1j05mwq-1 hmFsem&#34;&gt;&lt;div class=&#34;navigation-component__NavigationItemNumber-sc-1j05mwq-2 fgAGgQ&#34;&gt;2&lt;/div&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 hMWWGw&#34; color=&#34;#828282&#34; size=&#34;16&#34;&gt;VISUALISE IN ASHBY&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;header-properties-dropdown__PropertiesDropdownWrapper-sc-jye0ar-0 emgOuh&#34;&gt;&lt;div style=&#34;width:32%&#34;&gt;Material&lt;/div&gt;&lt;div style=&#34;flex:1&#34;&gt;&lt;div class=&#34;custom-dropdown__CustomDropdownWrapper-sc-1r4pk0f-0 fLuqrw&#34;&gt;&lt;div class=&#34;custom-dropdown__CustomDropdown-sc-1r4pk0f-1 hxQNhN&#34;&gt;&lt;div class=&#34;custom-dropdown__CustomDropdownTrigger-sc-1r4pk0f-2 grBuVO&#34;&gt;&lt;span class=&#34;custom-dropdown__CustomDropdownOption-sc-1r4pk0f-4 custom-dropdown__CustomDropdownOptionCurrent-sc-1r4pk0f-6 custom-dropdown__CustomDropdownOptionPlaceholder-sc-1r4pk0f-7 hwiCoG dUfhYU cwaUxH&#34;&gt;- Property&lt;/span&gt;&lt;div class=&#34;custom-dropdown__CustomDropdownArrow-sc-1r4pk0f-8 kOKDxB&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;custom-dropdown__CustomDropdownOptions-sc-1r4pk0f-3 cqRtVo&#34;&gt;&lt;span class=&#34;custom-dropdown__CustomDropdownInfo-sc-1r4pk0f-5 kaSqTa&#34;&gt;No items&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 custom-dropdown__SortingIcon-sc-1r4pk0f-9 kTando&#34; color=&#34;2.0/multicolor&#34; cursor=&#34;unset&#34; size=&#34;20&#34; type=&#34;default&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&#34;flex:1&#34;&gt;&lt;div class=&#34;custom-dropdown__CustomDropdownWrapper-sc-1r4pk0f-0 fLuqrw&#34;&gt;&lt;div class=&#34;custom-dropdown__CustomDropdown-sc-1r4pk0f-1 hxQNhN&#34;&gt;&lt;div class=&#34;custom-dropdown__CustomDropdownTrigger-sc-1r4pk0f-2 grBuVO&#34;&gt;&lt;span class=&#34;custom-dropdown__CustomDropdownOption-sc-1r4pk0f-4 custom-dropdown__CustomDropdownOptionCurrent-sc-1r4pk0f-6 custom-dropdown__CustomDropdownOptionPlaceholder-sc-1r4pk0f-7 hwiCoG dUfhYU cwaUxH&#34;&gt;- Property&lt;/span&gt;&lt;div class=&#34;custom-dropdown__CustomDropdownArrow-sc-1r4pk0f-8 kOKDxB&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;custom-dropdown__CustomDropdownOptions-sc-1r4pk0f-3 cqRtVo&#34;&gt;&lt;span class=&#34;custom-dropdown__CustomDropdownInfo-sc-1r4pk0f-5 kaSqTa&#34;&gt;No items&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 custom-dropdown__SortingIcon-sc-1r4pk0f-9 kTando&#34; color=&#34;2.0/multicolor&#34; cursor=&#34;unset&#34; size=&#34;20&#34; type=&#34;default&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&#34;flex:1&#34;&gt;&lt;div class=&#34;custom-dropdown__CustomDropdownWrapper-sc-1r4pk0f-0 fLuqrw&#34;&gt;&lt;div class=&#34;custom-dropdown__CustomDropdown-sc-1r4pk0f-1 hxQNhN&#34;&gt;&lt;div class=&#34;custom-dropdown__CustomDropdownTrigger-sc-1r4pk0f-2 grBuVO&#34;&gt;&lt;span class=&#34;custom-dropdown__CustomDropdownOption-sc-1r4pk0f-4 custom-dropdown__CustomDropdownOptionCurrent-sc-1r4pk0f-6 custom-dropdown__CustomDropdownOptionPlaceholder-sc-1r4pk0f-7 hwiCoG dUfhYU cwaUxH&#34;&gt;- Property&lt;/span&gt;&lt;div class=&#34;custom-dropdown__CustomDropdownArrow-sc-1r4pk0f-8 kOKDxB&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;custom-dropdown__CustomDropdownOptions-sc-1r4pk0f-3 cqRtVo&#34;&gt;&lt;span class=&#34;custom-dropdown__CustomDropdownInfo-sc-1r4pk0f-5 kaSqTa&#34;&gt;No items&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 custom-dropdown__SortingIcon-sc-1r4pk0f-9 kTando&#34; color=&#34;2.0/multicolor&#34; cursor=&#34;unset&#34; size=&#34;20&#34; type=&#34;default&#34;&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Superaustenitic Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/destb19-acidur-4529&#34; target=&#34;_blank&#34;&gt;Acidur 4529&lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Austenitic Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/dests11-acidur-4401-at-&#34; target=&#34;_blank&#34;&gt;Acidur 4401 +AT &lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Austenitic Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/dests12-acidur-4435-at-&#34; target=&#34;_blank&#34;&gt;Acidur 4435 +AT &lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Austenitic Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/dests13-acidur-4541-at-&#34; target=&#34;_blank&#34;&gt;Acidur 4541 +AT &lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Austenitic Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/dests14-acidur-4571-at-&#34; target=&#34;_blank&#34;&gt;Acidur 4571 +AT &lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 dSEUZx&#34;&gt;&lt;div class=&#34;adbutler__CampaignBannerWrapper-sc-1snm6gk-0 dcaIxI&#34;&gt;&lt;div class=&#34;adbutler__CampaignBannerInnerWrapper-sc-1snm6gk-1 fgLnFQ&#34; height=&#34;90&#34; id=&#34;advanced_search_slot&#34;&gt;&lt;a href=&#34;https://go.matmatch.com/advertise&#34;&gt;&lt;img src=&#34;/static/images/lorem-ipsum.png&#34;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Austenitic Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/dests11a-acidur-4404-at-&#34; target=&#34;_blank&#34;&gt;Acidur 4404 +AT &lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Austenitic Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/dests9-acidur-4301-at-&#34; target=&#34;_blank&#34;&gt;Acidur 4301 +AT &lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Austenitic Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/dests9a-acidur-4307-at-&#34; target=&#34;_blank&#34;&gt;Acidur 4307 +AT &lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Austenitic Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/dests10-acidur-4305-at-&#34; target=&#34;_blank&#34;&gt;Acidur 4305 +AT &lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Superaustenitic Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/vdmm023-vdm-alloy-926&#34; target=&#34;_blank&#34;&gt;VDM® Alloy 926&lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/vdmm-vdm-metals&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;VDM Metals&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Martensitic Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/dests7-acidur-4418-qt900-&#34; target=&#34;_blank&#34;&gt;Acidur 4418 QT900 &lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Duplex Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/dests15-acidur-4462-at-&#34; target=&#34;_blank&#34;&gt;Acidur 4462 +AT &lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Martensitic Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/dests7a-acidur-4418-qt760-&#34; target=&#34;_blank&#34;&gt;Acidur 4418 QT760 &lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Duplex Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/ugit0076-ugima-4460-cold-finished&#34; target=&#34;_blank&#34;&gt;UGIMA® 4460 Cold Finished&lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/ugit-ugitech&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Ugitech&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Duplex Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/ugit0077-ugima-4460-cold-finished-and-drawn&#34; target=&#34;_blank&#34;&gt;UGIMA® 4460 Cold Finished and Drawn&lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/ugit-ugitech&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Ugitech&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Precipitation Hardening Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/ugit0129-ugi-4545-air-h1025&#34; target=&#34;_blank&#34;&gt;UGI® 4545 AIR H1025&lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/ugit-ugitech&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Ugitech&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Martensitic Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/dests1-corrodur-4021-qt800-&#34; target=&#34;_blank&#34;&gt;Corrodur 4021 QT800 &lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Martensitic Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/dests3-corrodur-4034-annealed-&#34; target=&#34;_blank&#34;&gt;Corrodur 4034 Annealed &lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Martensitic Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/dests4-acidur-4057-qt800-&#34; target=&#34;_blank&#34;&gt;Acidur 4057 QT800 &lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialsListItem-sc-1ickte1-0 cVjyqt&#34;&gt;&lt;div class=&#34;materials-list__MaterialDataWrapper-sc-1ickte1-1 dtZnEZ&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 iidREl&#34; color=&#34;#828282&#34; size=&#34;13&#34;&gt;Precipitation Hardening Stainless Steel&lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 QbWNQ&#34; color=&#34;#3880E5&#34; href=&#34;/materials/dests8-acidur-4542-p800-&#34; target=&#34;_blank&#34;&gt;Acidur 4542 P800 &lt;/a&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 lolWkU&#34; size=&#34;13&#34;&gt;Supplied by: &lt;/p&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 dhcylR&#34; color=&#34;#333333&#34; href=&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34; size=&#34;13&#34; target=&#34;_blank&#34;&gt;Deutsche Edelstahlwerke (DEW)&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialPropsWrapper-sc-1ickte1-2 hTQFno&#34;&gt;&lt;/div&gt;&lt;div class=&#34;materials-list__MaterialCompareWrapper-sc-1ickte1-3 bDcoHI&#34;&gt;&lt;div class=&#34;check-box__CheckBoxDesign-sc-1ptpc08-0 kurrkX&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;pagination__PaginationWrapper-sc-1s1bcvk-0 fLLraV&#34;&gt;&lt;button class=&#34;button__BaseButton-sc-ekfcy0-0 button__ButtonPrimary-sc-ekfcy0-1 eGHzTm nqeas&#34; data-test-item=&#34;prev-page&#34; disabled=&#34;&#34;&gt;&lt;/button&gt;&lt;div class=&#34;pagination__PaginationPagesText-sc-1s1bcvk-1 TXmbf&#34;&gt;Page 1 of 111&lt;/div&gt;&lt;button class=&#34;button__BaseButton-sc-ekfcy0-0 button__ButtonPrimary-sc-ekfcy0-1 ljvJNw nqeas&#34; data-test-item=&#34;next-page&#34;&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;footer-container__FooterContainer-sc-16jfcf3-0 kUuTvA&#34;&gt;&lt;div class=&#34;static-page-wrappers__StaticPageContentWrapper-sc-fz58vx-1 fGzocz&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 footer__FooterWrapper-sc-1vgte7v-0 cJNByu greBxI&#34;&gt;&lt;div class=&#34;footer__FooterResponsiveWrapper-sc-1vgte7v-2 jdQCEK&#34;&gt;&lt;div class=&#34;footer-matmatch-logo-and-gdpr__NameAndDescriptionWrapper-sc-1mbx1ll-0 lcDCgL&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 footer-list__FooterListHeading-sc-17tjnty-1 cJNByu gFyZtw&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 tenyk&#34; color=&#34;#526193&#34; size=&#34;20&#34;&gt;MATMATCH&lt;/p&gt;&lt;/div&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 hjtwVq&#34; color=&#34;#333333&#34; size=&#34;16&#34;&gt;We connect engineers, product designers and procurement teams with the best materials and suppliers for their job.&lt;/p&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 footer-list__FooterListWrapper-sc-17tjnty-0 cJNByu iIAlRS&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 footer-list__FooterListHeading-sc-17tjnty-1 cJNByu gFyZtw&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 tenyk&#34; color=&#34;#526193&#34; size=&#34;20&#34;&gt;COMPANY&lt;/p&gt;&lt;/div&gt;&lt;ul class=&#34;list__List-sc-7ainlj-0 uluvW&#34;&gt;&lt;li class=&#34;list__ListItem-sc-7ainlj-1 bzfZbQ&#34;&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 kdVFv&#34; color=&#34;#333333&#34; href=&#34;/about&#34;&gt;About us&lt;/a&gt;&lt;/li&gt;&lt;li class=&#34;list__ListItem-sc-7ainlj-1 bzfZbQ&#34;&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 kdVFv&#34; color=&#34;#333333&#34; href=&#34;https://matmatch-gmbh.jobs.personio.de/&#34;&gt;Career&lt;/a&gt;&lt;/li&gt;&lt;li class=&#34;list__ListItem-sc-7ainlj-1 bzfZbQ&#34;&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 kdVFv&#34; color=&#34;#333333&#34; href=&#34;/resources&#34;&gt;Resources&lt;/a&gt;&lt;/li&gt;&lt;li class=&#34;list__ListItem-sc-7ainlj-1 bzfZbQ&#34;&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 kdVFv&#34; color=&#34;#333333&#34; href=&#34;/supplier&#34;&gt;For suppliers&lt;/a&gt;&lt;/li&gt;&lt;li class=&#34;list__ListItem-sc-7ainlj-1 bzfZbQ&#34;&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 kdVFv&#34; color=&#34;#333333&#34; href=&#34;https://go.matmatch.com/advertise&#34;&gt;Advertise&lt;/a&gt;&lt;span class=&#34;badge__LinkBadge-sc-1kc0y45-0 ejKxFX&#34;&gt;new&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 footer-list__FooterListWrapper-sc-17tjnty-0 cJNByu iIAlRS&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 footer-list__FooterListHeading-sc-17tjnty-1 cJNByu gFyZtw&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 tenyk&#34; color=&#34;#526193&#34; size=&#34;20&#34;&gt;GENERAL&lt;/p&gt;&lt;/div&gt;&lt;ul class=&#34;list__List-sc-7ainlj-0 uluvW&#34;&gt;&lt;li class=&#34;list__ListItem-sc-7ainlj-1 bzfZbQ&#34;&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 kdVFv&#34; color=&#34;#333333&#34; href=&#34;/imprint&#34;&gt;Legal&lt;/a&gt;&lt;/li&gt;&lt;li class=&#34;list__ListItem-sc-7ainlj-1 bzfZbQ&#34;&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 kdVFv&#34; color=&#34;#333333&#34; href=&#34;/imprint#privacy-policy&#34;&gt;Privacy&lt;/a&gt;&lt;/li&gt;&lt;li class=&#34;list__ListItem-sc-7ainlj-1 bzfZbQ&#34;&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 kdVFv&#34; color=&#34;#333333&#34; href=&#34;/imprint#tnc-buyers&#34;&gt;Terms &amp;amp; Conditions&lt;/a&gt;&lt;/li&gt;&lt;li class=&#34;list__ListItem-sc-7ainlj-1 bzfZbQ&#34;&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 kdVFv&#34; color=&#34;#333333&#34; href=&#34;https://www.plansee.com/en/about-us/whistleblower-system.html&#34;&gt;Whistleblower System&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;ul class=&#34;list__List-sc-7ainlj-0 footer-social-links__SocialLinksList-sc-1hjdthk-0 uluvW hwyVjw&#34;&gt;&lt;li class=&#34;footer-social-links__SocialLinksListItem-sc-1hjdthk-1 jkNDpJ&#34;&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 fpFFKD&#34; href=&#34;https://www.linkedin.com/company/matmatch&#34;&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 duJtpp&#34; color=&#34;2.0/footer&#34; fill=&#34;#526193&#34; size=&#34;30&#34; type=&#34;social-linkedin&#34;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li class=&#34;footer-social-links__SocialLinksListItem-sc-1hjdthk-1 jkNDpJ&#34;&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 fpFFKD&#34; href=&#34;https://twitter.com/MatmatchGmbH&#34;&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 UGQFe&#34; color=&#34;2.0/footer&#34; fill=&#34;#526193&#34; size=&#34;30&#34; type=&#34;social-twitter&#34;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li class=&#34;footer-social-links__SocialLinksListItem-sc-1hjdthk-1 jkNDpJ&#34;&gt;&lt;a class=&#34;styled-link-styles__StyledLinkStyles-sc-l1ctuc-0 fpFFKD&#34; href=&#34;https://www.facebook.com/MatmatchGmbH/&#34;&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 bfOfuL&#34; color=&#34;2.0/footer&#34; fill=&#34;#526193&#34; size=&#34;30&#34; type=&#34;social-facebook&#34;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 footer__FooterWrapper-sc-1vgte7v-0 cJNByu greBxI&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 footer__FooterMiddleWrapper-sc-1vgte7v-1 kXMRZj cdLigN hZBBnE&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 cJNByu&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 footer-list__FooterListHeading-sc-17tjnty-1 cJNByu gFyZtw&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 tenyk&#34; color=&#34;#526193&#34; size=&#34;20&#34;&gt;CONTACT US&lt;/p&gt;&lt;/div&gt;&lt;ul class=&#34;list__List-sc-7ainlj-0 uluvW&#34;&gt;&lt;li class=&#34;list__ListItem-sc-7ainlj-1 cJazBI&#34;&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 cnxXUV&#34; color=&#34;2.0/footer&#34; cursor=&#34;default&#34; size=&#34;16&#34; type=&#34;ios-telephone&#34;&gt;&lt;/span&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 GTisG&#34; color=&#34;#333333&#34; size=&#34;16&#34;&gt;+49 89 262075200&lt;/p&gt;&lt;/li&gt;&lt;li class=&#34;list__ListItem-sc-7ainlj-1 gJZFKn&#34;&gt;&lt;span class=&#34;icon__Icon-sc-1230ehg-0 jLgsnQ&#34; color=&#34;2.0/footer&#34; cursor=&#34;default&#34; size=&#34;16&#34; type=&#34;ios-location&#34;&gt;&lt;/span&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 GTisG&#34; color=&#34;#333333&#34; size=&#34;16&#34;&gt;Leopoldstraße 250 A, 80807 Munich&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 footer__FooterWrapper-sc-1vgte7v-0 cJNByu greBxI&#34;&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 kXMRZj&#34;&gt;&lt;hr class=&#34;separation-line__SeparationLine-sc-1gtqai2-0 separation-line__SeparationLineDefault-sc-1gtqai2-1 dLmbUA kwnPiJ&#34;/&gt;&lt;div class=&#34;wrappers__Wrapper-sc-14fw43j-0 wrappers__WrapperFlex-sc-14fw43j-3 footer-copyright__FooterCopyrightWrapper-sc-p1jkef-0 eHEnyb cdLigN jHUSlK&#34;&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 cgTHVD&#34; color=&#34;#333333&#34; size=&#34;13&#34;&gt;© &lt;!-- --&gt;2021&lt;!-- --&gt; Matmatch GmbH, All rights reserved.&lt;/p&gt;&lt;p class=&#34;text__Text-sc-f4nboj-0 cgTHVD&#34; color=&#34;#333333&#34; size=&#34;13&#34;&gt;Made with ♥ in Munich!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;script id=&#34;__NEXT_DATA__&#34; type=&#34;application/json&#34;&gt;{&#34;props&#34;:{&#34;initialProps&#34;:{&#34;initialI18nStore&#34;:{&#34;en&#34;:{&#34;account&#34;:{&#34;forgot-password&#34;:&#34;Forgot password?&#34;,&#34;forgot-password-description&#34;:&#34;In case you forgot your password you can request to reset it here.&#34;,&#34;forgot-password-cta&#34;:&#34;Request reset link&#34;,&#34;delete-account-error&#34;:&#34;Some problems were occurred while deleting your account.&#34;,&#34;next-step&#34;:{&#34;title&#34;:&#34;Almost Done!&#34;,&#34;description&#34;:&#34;An email has been sent to you with the link to reset you password.&#34;,&#34;cta&#34;:&#34;Back to sign in&#34;,&#34;title-second&#34;:&#34;Now check your inbox&#34;,&#34;description-second&#34;:&#34;Please check your inbox, an email with the password reset link has been sent to {{email}}!&#34;},&#34;settings&#34;:{&#34;title&#34;:&#34;Settings&#34;,&#34;reset-password-description&#34;:&#34;If you would like to change your password, please click the button below. We will e-mail you a link you can use to set a new password.&#34;,&#34;reset-password-cta&#34;:&#34;Reset Password&#34;,&#34;delete-account&#34;:&#34;Delete Account&#34;},&#34;my-saved-materials&#34;:&#34;My saved materials&#34;,&#34;all-saved-materials&#34;:&#34;See all saved materials&#34;,&#34;search-and-save-materials&#34;:&#34;Search and save material data sheets&#34;,&#34;my-saved-searches&#34;:&#34;My saved searches&#34;,&#34;all-saved-searches&#34;:&#34;See all saved searches&#34;,&#34;latest-articles&#34;:&#34;Latest articles&#34;,&#34;my-matmatch-account&#34;:&#34;My Matmatch Account&#34;,&#34;my-supplier-network&#34;:&#34;My Supplier Network&#34;,&#34;info-box-message&#34;:&#34;Do you need help with your project or choosing the right material?&#34;,&#34;industry-leads-in-country&#34;:&#34;Industry leaders in {{country}} you may know&#34;,&#34;industry-leads&#34;:&#34;Industry leaders you may know&#34;,&#34;see-all-suppliers&#34;:&#34;See all our Suppliers&#34;,&#34;title&#34;:&#34;My Account&#34;,&#34;edit-profile&#34;:{&#34;title&#34;:&#34;Edit Profile&#34;}},&#34;common&#34;:{&#34;register&#34;:&#34;Register&#34;,&#34;property&#34;:&#34;Property&#34;,&#34;welcome-back&#34;:&#34;Welcome back&#34;,&#34;property-name&#34;:&#34;Property Name&#34;,&#34;interaction&#34;:&#34;Interaction&#34;,&#34;event-date&#34;:&#34;Event Date&#34;,&#34;material-name&#34;:&#34;Material Name&#34;,&#34;contact&#34;:&#34;Contact&#34;,&#34;finish&#34;:&#34;Finish&#34;,&#34;system-measurements&#34;:&#34;System Measurements&#34;,&#34;metric&#34;:&#34;Metric&#34;,&#34;imperial&#34;:&#34;Imperial&#34;,&#34;audience&#34;:&#34;Audience&#34;,&#34;or&#34;:&#34;or&#34;,&#34;eg&#34;:&#34;e.g.&#34;,&#34;and&#34;:&#34;and&#34;,&#34;next&#34;:&#34;Next&#34;,&#34;privacy&#34;:&#34;Privacy&#34;,&#34;removed&#34;:&#34;Removed&#34;,&#34;undo&#34;:&#34;Undo&#34;,&#34;value&#34;:&#34;Value&#34;,&#34;biography&#34;:&#34;Biography&#34;,&#34;type&#34;:&#34;Type&#34;,&#34;near-me&#34;:&#34;Near me&#34;,&#34;legal&#34;:&#34;Legal&#34;,&#34;career&#34;:&#34;Career&#34;,&#34;back-to-results&#34;:&#34;Back to results&#34;,&#34;save-changes&#34;:&#34;Save changes&#34;,&#34;show&#34;:&#34;Show&#34;,&#34;materials&#34;:&#34;Materials&#34;,&#34;searches&#34;:&#34;Searches&#34;,&#34;send&#34;:&#34;Send&#34;,&#34;unit&#34;:&#34;Unit&#34;,&#34;code&#34;:&#34;Code&#34;,&#34;result&#34;:&#34;Result&#34;,&#34;name&#34;:&#34;Name&#34;,&#34;locations&#34;:&#34;Locations&#34;,&#34;save&#34;:&#34;Save&#34;,&#34;more&#34;:&#34;More&#34;,&#34;read&#34;:&#34;Read&#34;,&#34;properties&#34;:&#34;Properties&#34;,&#34;industries&#34;:&#34;Industries&#34;,&#34;add&#34;:&#34;Add&#34;,&#34;less&#34;:&#34;Less&#34;,&#34;blog&#34;:&#34;Blog&#34;,&#34;resources&#34;:&#34;Resources&#34;,&#34;see-all&#34;:&#34;See all&#34;,&#34;blog-articles&#34;:&#34;Blog Articles&#34;,&#34;further-reading&#34;:&#34;Further reading&#34;,&#34;learn&#34;:&#34;Learn with Matmatch&#34;,&#34;clear&#34;:&#34;Clear&#34;,&#34;general&#34;:&#34;General&#34;,&#34;applications&#34;:&#34;Applications&#34;,&#34;grades-title&#34;:&#34;Grades provided by the supplier&#34;,&#34;additionally&#34;:&#34;Additionally&#34;,&#34;message&#34;:&#34;Message&#34;,&#34;headquarters&#34;:&#34;Headquarters&#34;,&#34;website&#34;:&#34;Website&#34;,&#34;revenue&#34;:&#34;Revenue&#34;,&#34;close&#34;:&#34;Close&#34;,&#34;new&#34;:&#34;New&#34;,&#34;select&#34;:&#34;Select&#34;,&#34;select-all&#34;:&#34;Select all&#34;,&#34;search&#34;:&#34;Search&#34;,&#34;language&#34;:&#34;Language&#34;,&#34;units&#34;:&#34;Units&#34;,&#34;forgot&#34;:&#34;Forgot&#34;,&#34;forgot-password&#34;:&#34;Did you forget your password?&#34;,&#34;converted-value&#34;:&#34;Converted value&#34;,&#34;phone&#34;:&#34;Phone&#34;,&#34;phone-call&#34;:&#34;Phone call&#34;,&#34;phone-contact&#34;:&#34;Phone contact&#34;,&#34;claim-profile&#34;:&#34;Claim this profile&#34;,&#34;delete&#34;:&#34;Delete&#34;,&#34;status&#34;:&#34;Status&#34;,&#34;subject&#34;:&#34;Subject&#34;,&#34;subject-edit-if-needed&#34;:&#34;Subject (edit if needed)&#34;,&#34;account&#34;:&#34;Account&#34;,&#34;add-new&#34;:&#34;Add New&#34;,&#34;settings&#34;:&#34;Settings&#34;,&#34;dashboard&#34;:&#34;Dashboard&#34;,&#34;profile&#34;:&#34;Profile&#34;,&#34;edit-profile&#34;:&#34;Edit profile&#34;,&#34;about-us&#34;:&#34;About us&#34;,&#34;partners&#34;:&#34;Partners&#34;,&#34;sign-in&#34;:&#34;Sign in&#34;,&#34;ask-now&#34;:&#34;Ask now&#34;,&#34;sign-up&#34;:&#34;Sign up&#34;,&#34;sign-out&#34;:&#34;Sign out&#34;,&#34;subscribe&#34;:&#34;Subscribe&#34;,&#34;publish&#34;:&#34;Publish&#34;,&#34;unpublish&#34;:&#34;Unpublish&#34;,&#34;report&#34;:&#34;Report&#34;,&#34;published&#34;:&#34;Published&#34;,&#34;companies&#34;:&#34;Companies&#34;,&#34;unpublished&#34;:&#34;Unpublished&#34;,&#34;first-name&#34;:&#34;First Name&#34;,&#34;last-name&#34;:&#34;Last Name&#34;,&#34;full-name&#34;:&#34;Full Name&#34;,&#34;company&#34;:&#34;Company&#34;,&#34;suppliers&#34;:&#34;Suppliers&#34;,&#34;required&#34;:&#34;Required&#34;,&#34;should-be-number&#34;:&#34;Should be a number&#34;,&#34;email&#34;:&#34;Email&#34;,&#34;job-title&#34;:&#34;Job Title&#34;,&#34;for-suppliers&#34;:&#34;For suppliers&#34;,&#34;please-select&#34;:&#34;Please select&#34;,&#34;internal&#34;:&#34;Internal&#34;,&#34;country&#34;:&#34;Country&#34;,&#34;industry&#34;:&#34;Industry&#34;,&#34;categories&#34;:&#34;Categories&#34;,&#34;phone-number&#34;:&#34;Phone number&#34;,&#34;manage-companies&#34;:&#34;Manage companies&#34;,&#34;messages-admin&#34;:&#34;Manage messages&#34;,&#34;telephone&#34;:&#34;Telephone&#34;,&#34;email-address&#34;:&#34;Email address&#34;,&#34;country-code&#34;:&#34;Country code&#34;,&#34;phone-code&#34;:&#34;Code&#34;,&#34;terms-and-conditions&#34;:&#34;Terms u0026 Conditions&#34;,&#34;whistleblower-system&#34;:&#34;Whistleblower System&#34;,&#34;nothing-found&#34;:&#34;Nothing found&#34;,&#34;employees&#34;:&#34;Employees&#34;,&#34;from&#34;:&#34;from &#34;,&#34;here&#34;:&#34;here&#34;,&#34;download&#34;:&#34;Download&#34;,&#34;advanced-search&#34;:&#34;Advanced Search&#34;,&#34;revenue-yearly&#34;:&#34;Revenue (yearly)&#34;,&#34;contact-us&#34;:&#34;Contact us&#34;,&#34;contact-me&#34;:&#34;Contact me&#34;,&#34;book-meeting&#34;:&#34;Book a meeting&#34;,&#34;material-page-data-set-description&#34;:&#34;Chemical composition and material properties of {{materialName}}.&#34;,&#34;material-page-data-set-description-sources&#34;:&#34;Chemical composition and material properties of {{materialName}}. Also available for download in XLSX and PDF. Data provided by {{sources}}&#34;,&#34;contact-suppliers&#34;:&#34;Contact suppliers&#34;,&#34;wizard-tabs-headline&#34;:&#34;Customize your search with filters&#34;,&#34;wizard-tabs-headline-2&#34;:&#34;Select a {{text, lowercase}} as a search filter&#34;,&#34;wizard-tabs-headline-3&#34;:&#34;Define property values&#34;,&#34;cookies-policy&#34;:&#34;In order to understand how our website is used and to be able to present you with an interest-related offer, we use cookies and other technologies. You will find more information about cookies on the privacy policy page.&#34;,&#34;back&#34;:&#34;Back&#34;,&#34;cancel&#34;:&#34;Cancel&#34;,&#34;consultation-times&#34;:&#34;Consultation times: Mon-Fri 9am - 5pm CET&#34;,&#34;follow&#34;:&#34;Follow&#34;,&#34;following&#34;:&#34;Following&#34;,&#34;follow-suppliers&#34;:&#34;Follow suppliers!&#34;,&#34;collapse-menu&#34;:&#34;Collapse menu&#34;,&#34;footer-description&#34;:&#34;We connect engineers, product designers and procurement teams with the best materials and suppliers for their job.&#34;,&#34;information-and-services&#34;:&#34;Information and services&#34;,&#34;no-dropdown-items&#34;:&#34;No items&#34;,&#34;advertise&#34;:&#34;Advertise&#34;,&#34;media-kit&#34;:&#34;Media Kit (Advertising)&#34;,&#34;filters&#34;:&#34;Filters&#34;,&#34;material-review&#34;:{&#34;title&#34;:&#34;Material review&#34;,&#34;unpublished-count&#34;:&#34;{{count}} unpublished materials&#34;,&#34;publish-cta&#34;:&#34;Publish {{count}}&#34;,&#34;publish-selected&#34;:&#34;Publish {{count}} Selected&#34;,&#34;publish-all&#34;:&#34;Publish All Materials&#34;,&#34;last-update&#34;:&#34;Last update&#34;,&#34;report-message-placeholder&#34;:&#34;Please describe what data needs to be changed, added or removed&#34;,&#34;report-sent&#34;:&#34;Report sent&#34;,&#34;report-sent-message&#34;:&#34;Thank you for your report. We will review it as quickly as possible.&#34;,&#34;no-unpublished-materials-message&#34;:&#34;Nothing to do here. We will notify you if there are actions to be taken!&#34;,&#34;show-published-text&#34;:&#34;Show published materials&#34;,&#34;no-published-materials-message&#34;:&#34;No published materials available.&#34;,&#34;publish-all-triggered&#34;:&#34;You have successfully triggered publishing of all materials. The process may take several minutes!&#34;,&#34;publish-all-triggered-title&#34;:&#34;Publishing...&#34;},&#34;countries&#34;:{&#34;china&#34;:&#34;China&#34;,&#34;america&#34;:&#34;America&#34;,&#34;germany&#34;:&#34;Germany&#34;,&#34;india&#34;:&#34;India&#34;,&#34;other&#34;:&#34;Other regions&#34;},&#34;discover-materials&#34;:{&#34;title&#34;:&#34;Discover, compare and evaluate over u003cspan u003e{{count}} u003c/span u003e materials&#34;},&#34;supplier-materials&#34;:{&#34;action-label&#34;:&#34;See all materials by this supplier&#34;},&#34;book-form&#34;:{&#34;success-message&#34;:{&#34;processing-request&#34;:&#34;Processing request&#34;,&#34;title&#34;:&#34;Your request has been processed&#34;,&#34;message-one&#34;:&#34;Thanks for booking a consultation with us, you will receive an email with the instructions within the next two days&#34;,&#34;message-two&#34;:&#34;Did you know that by creating a Matmatch account your request process is easier and takes less time, you also will be able to save your materials and access or new developed tools.&#34;}},&#34;contact-form&#34;:{&#34;meta-title&#34;:&#34;Contact Form&#34;,&#34;important&#34;:&#34;Important&#34;,&#34;automatic-account-creation-warning&#34;:&#34;By entering your information here, you will automatically create Matmatch account, needed to contact our suppliers.&#34;,&#34;headline&#34;:&#34;Get in touch with Matmatch&#34;,&#34;company-headline&#34;:&#34;Contact {{company}}&#34;,&#34;company-subject&#34;:&#34;I&#39;m interested in {{material}} and would like to get in touch with you.&#34;,&#34;supplier-page-subject&#34;:&#34;I&#39;m interested in your products and would like to get in touch with you.&#34;,&#34;first-name-placeholder&#34;:&#34;Enter Your first name&#34;,&#34;full-name-placeholder&#34;:&#34;Enter Your full name&#34;,&#34;last-name-placeholder&#34;:&#34;Enter Your last name&#34;,&#34;company-placeholder&#34;:&#34;What company do you work for?&#34;,&#34;job-title-placeholder&#34;:&#34;What is your job title?&#34;,&#34;phone-placeholder&#34;:&#34;Your phone number&#34;,&#34;email-placeholder&#34;:&#34;Your email address&#34;,&#34;company-message-placeholder&#34;:&#34;I&#39;m interested in {{material}} and would like to get in touch with you.&#34;,&#34;terms-and-conditions&#34;:&#34;In addition to the u003ca href=&#39;/imprint#privacy-policy&#39; target=&#39;_blank&#39; u003eTerms and Conditions u003c/a u003e I consent to share the content provided on this form with third parties (Suppliers) to provide Quotes and additional material information to me. This site is protected by reCAPTCHA and the Google u003ca href=&#39;https://policies.google.com/privacy&#39; u003ePrivacy Policy u003c/a u003e and u003ca href=&#39;https://policies.google.com/terms&#39; u003eTerms of Service u003c/a u003e apply.&#34;,&#34;noCompanySubject1&#34;:&#34;I have questions about this material&#34;,&#34;noCompanySubject2&#34;:&#34;I&#39;m searching for a material&#34;,&#34;noCompanySubject3&#34;:&#34;I&#39;m searching for a supplier&#34;,&#34;message-placeholder&#34;:&#34;Please include all important information for your request, for example:&#34;,&#34;message-placeholder-advice1&#34;:&#34;- Material type&#34;,&#34;message-placeholder-advice2&#34;:&#34;- Purpose of application&#34;,&#34;message-placeholder-advice3&#34;:&#34;- Mandatory material properties&#34;,&#34;message-placeholder-advice4&#34;:&#34;- Shape and dimension&#34;,&#34;success-title&#34;:&#34;Message sent&#34;,&#34;send-failed-title&#34;:&#34;Message send failed!&#34;,&#34;fill-the-form-below&#34;:&#34;Fill the form below&#34;,&#34;success-message&#34;:&#34;We will get back to you as quickly as possible.&#34;,&#34;success-company-message&#34;:&#34;Thank you for your message, {{contact}} will be in touch shortly&#34;,&#34;success-contact-form-sign-up-message&#34;:&#34;Your request was sent to Matmatch Supplier. Please follow the link sent to your e-mail to confirm your request and join the Matmatch network.&#34;,&#34;success-contact-form-message-board-intro&#34;:&#34;You can keep track of all your messages from your Matmatch account:&#34;,&#34;success-contact-form-message-board-link&#34;:&#34;Message Board&#34;,&#34;send-failed-company-message&#34;:&#34;Sorry, but your message has not been sent. Some technical error or backend failure. We&#39;re fixing it.&#34;,&#34;supplier-indicator-title&#34;:&#34;Fill the form to connect with our suppliers for this material&#34;,&#34;tell-us-what-you-want&#34;:&#34;Hi, how can we help?&#34;,&#34;technical-question&#34;:&#34;I have a technical question.&#34;,&#34;quotes-question&#34;:&#34;I would like a quote.&#34;,&#34;quotes-form-header-text&#34;:&#34;Our suppliers are more likely to reply with more specific information. So, please be as detailed as possible and we will ensure you a quick response&#34;,&#34;form-message-placeholder&#34;:&#34;Write your request here. Provide us as much information as possible.&#34;,&#34;company-email-placeholder&#34;:&#34;Write (desirably) company email here.&#34;,&#34;personal-information&#34;:&#34;Personal information&#34;,&#34;technical-requirements&#34;:&#34;Technical requirements&#34;,&#34;location-details&#34;:&#34;Location&#34;,&#34;attach-file-or-specs&#34;:&#34;Attach file or specs &#34;,&#34;feature-is-unavailable&#34;:&#34;We are sorry. This feature is coming soon&#34;,&#34;next-step&#34;:&#34;Next&#34;,&#34;optional&#34;:&#34;Optional&#34;,&#34;requested-material&#34;:&#34;Requested material&#34;,&#34;intended-application-or-usage&#34;:&#34;Intended application/use&#34;,&#34;material-form&#34;:&#34;Form&#34;,&#34;material-dimensions&#34;:&#34;Dimensions&#34;,&#34;material-quantity&#34;:&#34;Quantity&#34;,&#34;shipping-country&#34;:&#34;Shipping country&#34;,&#34;first-name&#34;:&#34;First name&#34;,&#34;last-name&#34;:&#34;Last name&#34;,&#34;phone&#34;:&#34;Phone&#34;,&#34;country-code&#34;:&#34;Country code&#34;,&#34;phone-code&#34;:&#34;Code&#34;,&#34;company&#34;:&#34;Company&#34;,&#34;company-email&#34;:&#34;Company email&#34;,&#34;job-title&#34;:&#34;Job title&#34;,&#34;message&#34;:&#34;Add a comment or additional technical requirement&#34;,&#34;private-email-warning&#34;:&#34;Suppliers are more likely to reply if you provide a company email address&#34;,&#34;additional-request-information&#34;:&#34;Additional request information&#34;,&#34;material-color&#34;:&#34;Material color&#34;,&#34;material-length&#34;:&#34;Length&#34;,&#34;material-width&#34;:&#34;Width&#34;,&#34;material-thickness&#34;:&#34;Thickness&#34;,&#34;material-diameter&#34;:&#34;Diameter&#34;,&#34;particle-size&#34;:&#34;Particle size&#34;,&#34;describe-your-material&#34;:&#34;Short description of the material&#34;,&#34;material-general-description&#34;:&#34;Add a comment or additional technical requirement&#34;,&#34;create-account&#34;:&#34;Would you like to send requests more quickly in the future and access additional Matmatch features? Then create your Matmatch account now - it just takes a click.&#34;,&#34;material-shapes-info&#34;:&#34;You see only supported material shapes in dropdown menu above. If you want other shape, please choose &#39;Other&#39; and describe desired shape in corresponding fields. If you don&#39;t see &#39;Other&#39; option, supplier doesn&#39;t produce custom material shapes for selected material.&#34;,&#34;describe-custom-form&#34;:&#34;Describe custom form here&#34;,&#34;contact-user&#34;:&#34;Contact user&#34;,&#34;contact-users&#34;:&#34;Contact {{ number }} users&#34;,&#34;one-more-step-popup-header&#34;:&#34;One more step&#34;,&#34;one-more-step-popup-message&#34;:&#34;Please u003cb u003echeck your email mailbox u003c/b u003e and verify your account for your request to reach the supplier and for you to receive replies.&#34;,&#34;type-or-select-shipping-location&#34;:&#34;Type or select a shipping location&#34;,&#34;company-website&#34;:&#34;Company website&#34;,&#34;company-website-placeholder&#34;:&#34;Your company website&#34;,&#34;form-section-name-suppliers&#34;:&#34;{{sectionNumber}}. Suppliers ({{count}})&#34;,&#34;form-section-technical-information&#34;:&#34;{{sectionNumber}}. Technical information&#34;,&#34;form-section-personal-information&#34;:&#34;{{sectionNumber}}. Personal information&#34;,&#34;send-request&#34;:&#34;Send request&#34;,&#34;send-message&#34;:&#34;Send message&#34;,&#34;material-request-form-title&#34;:&#34;Material request&#34;,&#34;alert-error-fill-required-fields-title&#34;:&#34;Fill all required fields&#34;,&#34;alert-error-fill-required-fields-text&#34;:&#34;Please fill all the required fields in order to send the request to our supplier!&#34;,&#34;view-request-for&#34;:&#34;View request for {{materialName}}&#34;,&#34;request-more-details&#34;:&#34;Request more details&#34;,&#34;quotation-request-form-title&#34;:&#34;Request a quotation&#34;,&#34;technical-question-form-title&#34;:&#34;Ask a technical question&#34;,&#34;your-question&#34;:&#34;Your question (please provide as much detail as possible)&#34;,&#34;your-message&#34;:&#34;Your message (please provide as much detail as possible)&#34;,&#34;supplier-profile-contact-form-title&#34;:&#34;Contact {{companyName}}&#34;},&#34;contact-forms-items&#34;:{&#34;granule&#34;:&#34;Granule&#34;,&#34;powder&#34;:&#34;Powder&#34;,&#34;pellet&#34;:&#34;Pellet&#34;,&#34;film&#34;:&#34;Film&#34;,&#34;sheet&#34;:&#34;Sheet&#34;,&#34;filament&#34;:&#34;Filament&#34;,&#34;other&#34;:&#34;Other&#34;},&#34;contact-box&#34;:{&#34;supplied-by&#34;:&#34;Material Supplied by&#34;,&#34;any-questions&#34;:&#34;Do you have any questions?&#34;,&#34;contact-mat-sci&#34;:&#34;Contact our Material Scientists&#34;,&#34;contact-supplier&#34;:&#34;Contact Supplier&#34;,&#34;contact-specific-supplier&#34;:&#34;Contact {{name}} now&#34;,&#34;contact-specific-supplier-promo&#34;:&#34;Do you have a question about this material?&#34;,&#34;contact-suppliers&#34;:&#34;Contact Suppliers ({{num}})&#34;,&#34;contact-partner&#34;:&#34;Contact {{type}}&#34;,&#34;send-us-question&#34;:&#34;Send us a message&#34;,&#34;more-details&#34;:&#34;More Details&#34;,&#34;send-a-question-to&#34;:&#34;Send a question to&#34;,&#34;any-doubt&#34;:&#34;Any doubt?&#34;,&#34;send-a-question-for-free&#34;:&#34;Any questions?&#34;,&#34;send-a-message&#34;:&#34;Send a message&#34;,&#34;write-your-message-here&#34;:&#34;Write your message here&#34;,&#34;request-quotation&#34;:&#34;Request a quotation&#34;,&#34;ask-supplier-technical-question&#34;:&#34;Ask the supplier a technical question&#34;,&#34;ask-a-technical-question&#34;:&#34;Ask a technical question&#34;},&#34;supplier-indicator-contact-box&#34;:{&#34;title&#34;:&#34;Find a supplier&#34;,&#34;contact&#34;:&#34;Send your requirements&#34;,&#34;info&#34;:&#34;We can help you find a supplier of {{materialName}}&#34;,&#34;note&#34;:&#34;We will evaluate your request and get back to you soon.&#34;},&#34;show-more&#34;:{&#34;show-all&#34;:&#34;Show all&#34;,&#34;show-less&#34;:&#34;Show less&#34;},&#34;pagination&#34;:{&#34;previous&#34;:&#34;Previous&#34;,&#34;next&#34;:&#34;Next&#34;,&#34;pages-info&#34;:&#34;Page {{num}} of {{total}}&#34;},&#34;saved-materials&#34;:{&#34;see-list&#34;:&#34;See list&#34;,&#34;saved-items&#34;:&#34;Saved items&#34;,&#34;saved-materials&#34;:&#34;Saved Materials&#34;,&#34;new-material-saved&#34;:&#34;New material saved&#34;,&#34;not-registered-yet&#34;:&#34;Not registered yet?&#34;,&#34;auth-box-heading&#34;:&#34;Save your materials and searches permanently!&#34;,&#34;auth-box-text&#34;:&#34;Sign in or sign up for a free account to permanently save materials and searches.&#34;,&#34;saved-materials-mobile-text&#34;:&#34;Save materials by pressing the star icon that you can find on search results list.&#34;},&#34;saved-searches&#34;:{&#34;save-search&#34;:&#34;Save search&#34;,&#34;popup&#34;:{&#34;title&#34;:&#34;Name you search&#34;,&#34;description&#34;:&#34;Give a name to your search before saving it&#34;,&#34;input-placeholder&#34;:&#34;Search name&#34;}},&#34;saved-items&#34;:{&#34;box-title&#34;:&#34;My saved items&#34;,&#34;saved-items&#34;:&#34;Saved items&#34;,&#34;new-item-saved&#34;:&#34;New item saved&#34;},&#34;accept-terms-and-newsletter&#34;:{&#34;title&#34;:&#34;Privacy u0026 terms&#34;,&#34;heading&#34;:&#34;Please agree to our terms&#34;,&#34;terms&#34;:&#34;To continue you need to agree with our u003ca href=&#39;/imprint#tnc-buyers&#39; u003eTerms and Conditions u003c/a u003e and our u003ca href=&#39;imprint#privacy-policy&#39; u003ePrivacy Policy u003c/a u003e&#34;,&#34;newsletter&#34;:&#34;I would like to receive the Matmatch newsletter&#34;,&#34;accept&#34;:&#34;Accept and continue&#34;},&#34;comparison&#34;:{&#34;compare&#34;:&#34;Compare&#34;,&#34;text&#34;:&#34;{{count}} materials selected for comparison.&#34;,&#34;disabled&#34;:&#34;Please select two or more materials for comparison&#34;,&#34;search-results&#34;:&#34;Search results&#34;,&#34;section-standards&#34;:&#34;Standards&#34;,&#34;section-equivalent-standards&#34;:&#34;Equivalent standards&#34;,&#34;section-chemical-composition&#34;:&#34;Chemical composition&#34;},&#34;supported-languages&#34;:{&#34;english&#34;:&#34;English&#34;,&#34;german&#34;:&#34;German&#34;,&#34;spanish&#34;:&#34;Spanish&#34;},&#34;account-form&#34;:{&#34;bio-placeholder&#34;:&#34;Say something about yourself or add a link to a social profile&#34;,&#34;submit-button-text&#34;:&#34;Update information&#34;,&#34;account-update-success&#34;:&#34;You have successfully update Your account!&#34;},&#34;chemical-table&#34;:{&#34;element&#34;:&#34;Element&#34;,&#34;weight&#34;:&#34;Weight %&#34;,&#34;comment&#34;:&#34;Comment&#34;},&#34;company-type&#34;:{&#34;DATA_PROVIDER&#34;:&#34;Data provider&#34;,&#34;ASSOCIATION&#34;:&#34;Association&#34;,&#34;SUPER_ASSOCIATION&#34;:&#34;Association&#34;,&#34;CONSULTANCIES&#34;:&#34;Consultancy&#34;,&#34;MANUFACTURER_AND_PROCESSOR&#34;:&#34;Manufacturer and Processor&#34;,&#34;MANUFACTURER&#34;:&#34;Manufacturer&#34;,&#34;MANUFACTURER_AND_DISTRIBUTOR&#34;:&#34;Manufacturer and Distributor&#34;,&#34;PROCESSOR&#34;:&#34;Processor&#34;,&#34;DISTRIBUTOR&#34;:&#34;Distributor&#34;,&#34;MATERIAL_SOURCE&#34;:&#34;Material source&#34;,&#34;MANUFACTURER_AND_PROCESSOR_AND_DISTRIBUTOR&#34;:&#34;Manufacturer, Processor and Distributor&#34;},&#34;retired-material&#34;:{&#34;title&#34;:&#34;This material is no longer available. Search below to find a relevant alternative material.&#34;,&#34;title-superseded&#34;:&#34;The material: &#39;{{material}}&#39; you were looking for has been superseded by the one below.&#34;},&#34;supplier&#34;:{&#34;qualified-label&#34;:&#34;Matmatch qualified supplier&#34;},&#34;application&#34;:{&#34;meta&#34;:{&#34;industry-title&#34;:&#34;Find Materials by Industry and Application&#34;,&#34;search-results&#34;:&#34;Materials for {{industry}} - {{application}}&#34;,&#34;navigation&#34;:&#34;Find Materials - {{industry}}&#34;},&#34;application&#34;:&#34;Application&#34;,&#34;title&#34;:&#34;Discover materials from your industry&#34;,&#34;description&#34;:&#34;Build better products by discovering new materials for your industry. Search directly for an application or browse our catalogue below.&#34;,&#34;search-input-placeholder&#34;:&#34;e.g. Aerospace, Aerospace Electric Equipment, Turbine Blades ...&#34;,&#34;no-results&#34;:&#34;No results for your application!&#34;,&#34;no-properties&#34;:&#34;No properties available&#34;,&#34;no-properties-selected-message&#34;:&#34;You should select at least 1 property to see the chart!&#34;,&#34;reset-filters&#34;:&#34;Reset filters&#34;,&#34;radar-chart-materials-message&#34;:&#34;You should apply at least 3 properties for radar chart!&#34;,&#34;radar-chart-max-amount-of-materials&#34;:&#34;Maximum number ({{amount}}) of materials for this type of chart achieved!&#34;,&#34;available-properties&#34;:&#34;Available properties&#34;,&#34;textual-comparison-cta&#34;:&#34;Go to textual comparison&#34;,&#34;meta-title&#34;:&#34;Applications&#34;,&#34;search-by-application&#34;:&#34;Application Search&#34;,&#34;default-breadcrumbs-category-name&#34;:&#34;Industries&#34;,&#34;comparison-scroll-to-the-right&#34;:&#34;Please, scroll to the right to see the comparison&#34;},&#34;new-features-presentation&#34;:{&#34;saved-search-presentation-popup-body&#34;:&#34;You can now save your searches on Matmatch to access them quickly in the future. Simply use the &#34;Save search &#34; button on the right side of the screen on search results page.&#34;,&#34;saved-search-presentation-popup-header&#34;:&#34;Hey, did you know?&#34;,&#34;dismiss&#34;:&#34;Dismiss&#34;,&#34;see-the-feature&#34;:&#34;See the feature&#34;},&#34;tools&#34;:{&#34;tools&#34;:&#34;Tools&#34;,&#34;unit-converter&#34;:{&#34;title&#34;:&#34;Unit converter&#34;,&#34;title-landing&#34;:&#34;Convert {{fromUnit}} to {{toUnit}}&#34;,&#34;meta-description-landing&#34;:&#34;Convert {{fromUnit}} to {{toUnit}} and other {{unitCategory}} units with this easy-to-use online unit converter.&#34;,&#34;header-landing&#34;:&#34;Convert from {{fromUnit}} to {{toUnit}}&#34;,&#34;description&#34;:&#34;Convert data between a wide variety of different units in just a few clicks. You can currently convert dielectric strength, temperature, pressure, thermal conductivity, energy, electrical resistivity, stress, power, volume and density units.&#34;,&#34;description-landing&#34;:&#34;To convert from {{fromUnit}} to {{toUnit}} enter the desired value for {{fromUnit}} below and the tool will convert it to {{toUnit}} and all other available units. You can also select and convert other types of units. u003cbr/ u003e u003cbr/ u003e u003cstrong u003e{{formula}} u003c/strong u003e&#34;,&#34;other-units-title&#34;:&#34;{{selectedUnitValue}} {{fromUnit}} is also equivalent to:&#34;,&#34;converter-title&#34;:&#34;Chose type of unit for conversion&#34;,&#34;group-placeholder&#34;:&#34;Choose a group&#34;,&#34;properties-message&#34;:&#34;Did you know? You can now search materials by their properties. Try it&#34;,&#34;quick-conversions&#34;:&#34;Quick conversion chart of {{fromUnit}} to {{toUnit}}:&#34;},&#34;hardness-converter&#34;:{&#34;meta-title&#34;:&#34;Hardness Converter&#34;,&#34;meta-description&#34;:&#34;Convert values between different hardness testing methods based on the material category.&#34;,&#34;title&#34;:&#34;Hardness Converter&#34;,&#34;description&#34;:&#34;Convert values between different hardness testing methods based on the material category. The converted values are extrapolated from test data and collated tabular data, so should be take as approximations.&#34;,&#34;material-category&#34;:&#34;Material&#34;,&#34;material-category-placeholder&#34;:&#34;Select a Material Category&#34;,&#34;testing-method&#34;:&#34;Testing Method&#34;,&#34;testing-method-placeholder&#34;:&#34;Select testing method&#34;,&#34;wrong-input-range&#34;:&#34;Please enter a value between {{min}} and {{max}}&#34;,&#34;info-message&#34;:&#34;All converted values are given as approximations and are for reference only.&#34;,&#34;found-materials&#34;:&#34;There are {{count}} materials in our database matching the value you converted&#34;,&#34;view-materials&#34;:&#34;View matching materials u003ca href=&#39;{{url}}&#39; u003enow u003c/a u003e.&#34;}},&#34;services&#34;:{&#34;title&#34;:&#34;Services&#34;,&#34;get-connected&#34;:&#34;Get connected&#34;,&#34;material-consultancy&#34;:&#34;Material consultancy&#34;},&#34;messages&#34;:&#34;Messages&#34;,&#34;roles&#34;:{&#34;USER&#34;:&#34;Website user&#34;,&#34;BETA_USER&#34;:&#34;Beta website user&#34;,&#34;SUPPLIER_BETA_USER&#34;:&#34;Beta Dashboard user&#34;,&#34;SUPPLIER_CONTACT&#34;:&#34;Message User&#34;,&#34;SUPPLIER_USER&#34;:&#34;Dashboard User&#34;},&#34;book-demo&#34;:{&#34;form&#34;:{&#34;subscription-label&#34;:&#34;I would like to receive email news and updates from Matmatch&#34;,&#34;checkbox-label&#34;:&#34;By clicking below, you consent to allow Matmatch to store and process the personal information submitted above to provide you with more information about listing as a supplier on Matmatch.&#34;,&#34;privacy-label&#34;:&#34;View our u003ca href=&#39;/imprint#privacy-policy&#39; u003eprivacy policy u003c/a u003e for more information on how your data is used.&#34;}},&#34;supplier-dashboard&#34;:{&#34;menu-item-dashboard-home&#34;:&#34;Dashboard Home&#34;,&#34;menu-item-messages-board&#34;:&#34;Messages Board&#34;,&#34;menu-item-messages-admin&#34;:&#34;Messages Admin&#34;,&#34;menu-item-audience&#34;:&#34;Audience ({{ numOfEventTypes }})&#34;,&#34;menu-item-performance&#34;:&#34;Performance&#34;,&#34;menu-item-performance-temp&#34;:&#34;Performance (Temp)&#34;,&#34;menu-item-visibility&#34;:&#34;Visibility&#34;,&#34;menu-item-materials&#34;:&#34;Materials&#34;,&#34;menu-item-webinar-audience&#34;:&#34;Webinar audience&#34;,&#34;not-available-for-mobile&#34;:&#34;Our analytics board is not supported in mobile version. You may access it on your PC or tablet.&#34;,&#34;menu-item-support&#34;:&#34;Supplier Support&#34;,&#34;menu-item-contact-us&#34;:&#34;Contact Us&#34;,&#34;menu-item-faq&#34;:&#34;FAQ&#34;,&#34;geo-chart-item-compare-views&#34;:&#34;Compare views&#34;,&#34;geo-chart-item-content-views&#34;:&#34;Content views&#34;,&#34;geo-chart-item-material-views&#34;:&#34;Material views&#34;,&#34;geo-chart-item-profile-views&#34;:&#34;Profile views&#34;,&#34;table-header-material-name&#34;:&#34;Material name&#34;,&#34;table-header-count&#34;:&#34;Count&#34;,&#34;table-header-page-views&#34;:&#34;Page views&#34;,&#34;table-header-most-compared-material&#34;:&#34;Most Compared material&#34;,&#34;table-header-compared-material-producer&#34;:&#34;Material producer&#34;,&#34;table-header-company-name&#34;:&#34;Company&#34;,&#34;table-header-employee-count&#34;:&#34;Employees&#34;,&#34;table-header-visits&#34;:&#34;Visits&#34;,&#34;table-header-visitors&#34;:&#34;Visitors&#34;,&#34;table-header-count-views&#34;:&#34;Views&#34;,&#34;table-header-count-registered-views&#34;:&#34;Views from Registered Users&#34;,&#34;table-header-count-downloads&#34;:&#34;Downloads&#34;,&#34;table-header-count-copies&#34;:&#34;Copies&#34;,&#34;table-header-count-comparisons&#34;:&#34;Comparisons&#34;,&#34;table-header-date&#34;:&#34;Date&#34;,&#34;table-header-size&#34;:&#34;Size&#34;,&#34;table-header-keyword&#34;:&#34;Keyword&#34;,&#34;table-header-clicks&#34;:&#34;Clicks&#34;,&#34;table-header-impressions&#34;:&#34;Impressions&#34;,&#34;table-header-compared-materials&#34;:&#34;Compared with&#34;,&#34;table-header-compared-companies&#34;:&#34;Compared suppliers&#34;,&#34;table-header-compared-properties&#34;:&#34;Compared properties&#34;,&#34;table-header-supplier&#34;:&#34;Supplier&#34;,&#34;table-header-country&#34;:&#34;Country&#34;,&#34;table-header-city&#34;:&#34;City&#34;,&#34;table-comparison-expand&#34;:&#34;Expand&#34;,&#34;table-comparison-collapse&#34;:&#34;Collapse&#34;,&#34;table-header-full-name&#34;:&#34;Name&#34;,&#34;table-header-job-title&#34;:&#34;Job Title&#34;,&#34;table-header-status&#34;:&#34;Status&#34;,&#34;table-header-registered-date&#34;:&#34;Registered On&#34;,&#34;table-header-email&#34;:&#34;E-mail&#34;,&#34;table-header-grade&#34;:&#34;Grade&#34;,&#34;table-header-shape&#34;:&#34;Shape&#34;,&#34;table-header-equivalentMaterials&#34;:&#34;Equivalent Materials&#34;,&#34;table-header-standards&#34;:&#34;Standard / Norm&#34;,&#34;material-performance-by-interaction-type&#34;:{&#34;title&#34;:&#34;Material performance by interaction type&#34;,&#34;tooltip&#34;:&#34;Control metrics showing how people interact with your content on Matmatch.&#34;},&#34;material-details&#34;:{&#34;title&#34;:&#34;Material details&#34;,&#34;tooltip&#34;:&#34;See the detailed information of your material page performance on Matmatch.&#34;},&#34;material-comparisons&#34;:{&#34;title&#34;:&#34;Material comparisons&#34;,&#34;tooltip&#34;:&#34;See the detailed information of your materials that were compared with other materials on Matmatch.&#34;},&#34;visibility-by-type&#34;:{&#34;title&#34;:&#34;Visibility by type&#34;,&#34;tooltip&#34;:&#34;Control metrics showing how often your content is found on Matmatch.&#34;},&#34;visibility-by-country&#34;:{&#34;title&#34;:&#34;Visibility by country&#34;,&#34;tooltip&#34;:&#34;Control metrics showing countries of people accessing your content on Matmatch.&#34;},&#34;most-visited-materials&#34;:{&#34;title&#34;:&#34;Most visited materials&#34;,&#34;tooltip&#34;:&#34;See your best performing Material Pages.&#34;},&#34;top-compared-materials&#34;:{&#34;title&#34;:&#34;Top compared materials&#34;,&#34;tooltip&#34;:&#34;See your most compared Material Pages.&#34;},&#34;visibility-by-companies&#34;:{&#34;title&#34;:&#34;Large companies visiting your materials&#34;,&#34;tooltip&#34;:&#34;See the biggest companies that were accessing your content on Matmatch. Companies are identified based on visitor IP address.&#34;},&#34;top-google-keywords&#34;:{&#34;title&#34;:&#34;Top Google keywords&#34;,&#34;tooltip&#34;:&#34;Control metrics showing keywords entered in google search before accessing your content on Matmatch.&#34;},&#34;linked-materials-details&#34;:{&#34;title&#34;:&#34;Linked material details&#34;,&#34;tooltip&#34;:&#34;See the detailed information of material page performance on Matmatch where your company details have been shown.&#34;},&#34;day&#34;:&#34;Day&#34;,&#34;week&#34;:&#34;Week&#34;,&#34;month&#34;:&#34;Month&#34;,&#34;nothing-found&#34;:&#34;No data available for the selected period&#34;,&#34;sorry&#34;:&#34;Sorry&#34;,&#34;dashboard-not-available-for-mobiles&#34;:&#34;This section is not available for mobile device yet. Try the desktop version for the full experience.&#34;,&#34;attention-demo-mode&#34;:&#34;Attention: you are in demo mode, static data is shown!&#34;,&#34;webinars-label&#34;:&#34;Webinars&#34;,&#34;webinars-title&#34;:&#34;Webinar registrants&#34;},&#34;go-to-message-board&#34;:&#34;Go to message board&#34;,&#34;sorry&#34;:&#34;Sorry...&#34;,&#34;cookies&#34;:{&#34;banner-title&#34;:&#34;Our cookie disclaimer&#34;,&#34;accept&#34;:&#34;Accept all&#34;,&#34;open-settings&#34;:&#34;Open cookie settings&#34;,&#34;confirm&#34;:&#34;Confirm my choices&#34;,&#34;settings&#34;:&#34;Cookie settings&#34;,&#34;popup-description&#34;:&#34;You can control how Matmatch use cookies and similar technologies by making choices below. But note that if you disable cookies and similar technologies entirely, Matmatch may not function properly.&#34;,&#34;consent-title&#34;:&#34;Necessary&#34;,&#34;consent-description&#34;:&#34;These cookies are required, and they are used to enable core functionality on Matmatch. Without them the site could not operate, so they cannot be disabled.&#34;,&#34;preferences-title&#34;:&#34;Preferences&#34;,&#34;preferences-description&#34;:&#34;These cookies enable Matmatch to deliver a more personalised experience to your interests on the platform.&#34;,&#34;statistics-title&#34;:&#34;Statistics&#34;,&#34;statistics-description&#34;:&#34;These cookies are used to analyze site usage to measure and improve performance. Without them Matmatch cannot know what content is most valued and how often unique visitors return to the site, making it hard to improve the information and services we offer to you.&#34;,&#34;tracking-title&#34;:&#34;Marketing&#34;,&#34;tracking-description&#34;:&#34;These cookies are used to enable Matmatch to serve content more relevant to your interests both on and off the platform.&#34;,&#34;banner-disclaimer&#34;:&#34;Matmatch uses cookies and similar technologies to improve your experience and measure your interactions with our website. We also use them to provide you more relevant information and improve our platform and search tools. If that’s okay, click “Accept all.” To change your preferences, click “Open cookie settings.” You will find more information about cookies on our u003ca style=&#39;text-decoration:underline;&#39; href=&#39;/imprint#privacy-policy&#39; u003eprivacy policy page u003ca/ u003e.&#34;},&#34;sustainability&#34;:{&#34;share-text&#34;:&#34;Share this page&#34;,&#34;pdf&#34;:{&#34;question&#34;:&#34;Download a PDF copy&#34;,&#34;text&#34;:&#34;Receive a copy of this article in PDF format via email&#34;,&#34;button&#34;:&#34;Get it now&#34;,&#34;pop-up&#34;:&#34;By clicking below you consent to allow Matmatch to store and process the personal information submitted above to provide you the content requested. View our privacy policy for more information on how your data is used.&#34;},&#34;how-to-source-title&#34;:&#34;Get in touch&#34;}},&#34;navigation&#34;:{&#34;20&#34;:{&#34;header&#34;:{&#34;materials&#34;:&#34;Materials&#34;,&#34;for-suppliers&#34;:&#34;For Suppliers&#34;,&#34;about-us&#34;:&#34;About us&#34;,&#34;get-connected&#34;:&#34;Get Connected&#34;,&#34;3d-printing-hub&#34;:&#34;3D Printing&#34;}},&#34;companies-list&#34;:&#34;Companies list&#34;,&#34;material-review&#34;:&#34;Material review&#34;},&#34;sign-in-up&#34;:{&#34;password&#34;:&#34;Password&#34;,&#34;save-password&#34;:&#34;Save password&#34;,&#34;sign-in-up&#34;:&#34;Sign In / Up&#34;,&#34;not-signed-in&#34;:&#34;You are not signed in&#34;,&#34;view-my-profile&#34;:&#34;View my Profile&#34;,&#34;open-profile-menu&#34;:&#34;Open profile menu&#34;,&#34;close-profile-menu&#34;:&#34;Close profile menu&#34;,&#34;create-account-now&#34;:&#34;Create your account now&#34;,&#34;sign-in&#34;:{&#34;password-placeholder&#34;:&#34;Type your password&#34;,&#34;new-to-matmatch&#34;:&#34;New to Matmatch?&#34;,&#34;email-placeholder&#34;:&#34;Enter the address you signed up with&#34;,&#34;welcome-back-message&#34;:&#34;To sign in to your Matmatch account, please enter your email and password.&#34;},&#34;set-password&#34;:{&#34;title&#34;:&#34;Set a password&#34;,&#34;password-placeholder&#34;:&#34;Set your new password&#34;,&#34;hint&#34;:&#34;Your password should be at least 8 characters long.&#34;},&#34;forgot-password&#34;:{&#34;title&#34;:&#34;Forgot password?&#34;,&#34;request-reset&#34;:&#34;Request reset link&#34;,&#34;email-placeholder&#34;:&#34;Enter your e-mail address&#34;,&#34;hint&#34;:&#34;In case you forgot your password you can request to reset it here.&#34;,&#34;instructions&#34;:{&#34;one&#34;:&#34;1. To reset a password, please enter your email address. Then click “Send me reset link” button.&#34;,&#34;two&#34;:&#34;2. Check your inbox for a password reset email. Click on the URL provided in the email and enter a new password.&#34;,&#34;three&#34;:&#34;3. If you don’t know your email address or it is no longer valid, please create a new Matmatch account &#34;}},&#34;success-popup&#34;:{&#34;almost-done&#34;:&#34;Almost done!&#34;,&#34;back-to-sign-in&#34;:&#34;Back to sign in&#34;,&#34;back-to-matmatch&#34;:&#34;Back to matmatch.com&#34;,&#34;confirmation-mail-note&#34;:&#34;We’ve sent you a confirmation email to {{email}}. Please click the link in the email to activate your account.&#34;},&#34;sign-up&#34;:{&#34;signup-failed&#34;:&#34;Signup failed&#34;,&#34;create-account&#34;:&#34;Create account&#34;,&#34;create-your-account&#34;:&#34;Create your account&#34;,&#34;email-placeholder&#34;:&#34;Your email address&#34;,&#34;already-account&#34;:&#34;Already have an account?&#34;,&#34;last-name-placeholder&#34;:&#34;Enter your last name&#34;,&#34;first-name-placeholder&#34;:&#34;Enter your first name&#34;,&#34;newsletter-label&#34;:&#34;I would like to receive the Matmatch e-mail newsletter&#34;,&#34;terms-and-conditions-label&#34;:&#34;I have read and agreed to the Matmatch u003ca href=&#39;/imprint#tnc-buyers&#39; u003eTerms and Conditions u003c/a u003e and u003ca href=&#39;/imprint#privacy-policy&#39; u003ePrivacy Policy. u003c/a u003e&#34;,&#34;signup-failed-message&#34;:&#34;Oops! Something went wrong during the signup process. We will investigate and fix the issue as fast as possible.&#34;,&#34;do-you-work-for-material-supplier&#34;:&#34;Do you work for a material supplier?&#34;},&#34;sign-in-page&#34;:{&#34;meta-title&#34;:&#34;Sign In&#34;,&#34;title&#34;:&#34;Sign In&#34;},&#34;sign-up-page&#34;:{&#34;meta-title&#34;:&#34;Sign Up&#34;,&#34;title&#34;:&#34;Create an account&#34;},&#34;activation-page&#34;:{&#34;meta-title&#34;:&#34;Account Activation&#34;,&#34;activated-title&#34;:&#34;Done!&#34;,&#34;activated-message&#34;:&#34;Your new password has been set and the account has been activated.&#34;,&#34;sign-in&#34;:&#34;Sign In&#34;,&#34;account&#34;:&#34;Account&#34;},&#34;info&#34;:{&#34;sign-in-to-download&#34;:&#34;Sign in or create your free Matmatch account to download this datasheet. A free account includes access to hundreds of thousands of detailed technical datasheets.&#34;,&#34;sign-in-description&#34;:&#34;Registered users have full access to all premium features for free.&#34;,&#34;company-email-tooltip&#34;:&#34;Matmatch is a platform that connects professionals in the materials industry. Please provide your valid company address.&#34;},&#34;value-propositions&#34;:{&#34;title&#34;:&#34;Create your Matmatch account for free and enjoy all premium features&#34;,&#34;suppliers-title&#34;:&#34;Our material data comes directly from material suppliers and verified data partners&#34;,&#34;values&#34;:{&#34;one&#34;:{&#34;value&#34;:&#34;Unlimited datasheet downloads.&#34;,&#34;description&#34;:&#34;Download technical datasheets for thousands of materials in .pdf and .xlsx formats.&#34;},&#34;two&#34;:{&#34;value&#34;:&#34;Ashby charts interactivity.&#34;,&#34;description&#34;:&#34; Get more technical data about material upon clicking.&#34;},&#34;three&#34;:{&#34;value&#34;:&#34;Ashby chart image.&#34;,&#34;description&#34;:&#34;Export Ashby chart in .png format.&#34;},&#34;four&#34;:{&#34;value&#34;:&#34;Property charts.&#34;,&#34;description&#34;:&#34;View material behaviour under different temperatures.&#34;},&#34;five&#34;:{&#34;value&#34;:&#34;SN-curves.&#34;,&#34;description&#34;:&#34;Request fatigue data (S-N curve) for different materials.&#34;},&#34;six&#34;:{&#34;value&#34;:&#34;Supplier contact.&#34;,&#34;description&#34;:&#34;Get in touch with suppliers and keep track of all your messages from the Matmatch message board.&#34;}}},&#34;premium-features&#34;:{&#34;registered-only&#34;:&#34;This feature is for registered users only&#34;}},&#34;advanced-search&#34;:{&#34;common&#34;:{&#34;categories&#34;:&#34;Categories&#34;,&#34;properties&#34;:&#34;Properties&#34;,&#34;nothing-added&#34;:&#34;Nothing added&#34;,&#34;more-search-options&#34;:&#34;More search options&#34;,&#34;title&#34;:&#34;Advanced Search - Matmatch&#34;,&#34;suppliers&#34;:&#34;Suppliers&#34;,&#34;applications&#34;:&#34;Applications&#34;,&#34;download-chart-as-png&#34;:&#34;Download as .PNG&#34;,&#34;teaser-description&#34;:&#34;Sign up to get access to this premium feature for free.&#34;},&#34;sidebar&#34;:{&#34;labels-title&#34;:&#34;Search result for&#34;,&#34;clear-all&#34;:&#34;Clear all&#34;,&#34;show-all&#34;:&#34;Show all&#34;,&#34;all&#34;:&#34;All&#34;,&#34;properties&#34;:{&#34;cta&#34;:&#34;Add a material property&#34;},&#34;suppliers&#34;:{&#34;cta&#34;:&#34;See all suppliers&#34;},&#34;applications&#34;:{&#34;cta&#34;:&#34;Add an application&#34;}},&#34;alerts&#34;:{&#34;category-specific-filter-disabled&#34;:{&#34;description&#34;:&#34;Some filter options have been disabled following your previous selection.&#34;},&#34;selecting-materials-info&#34;:{&#34;title&#34;:&#34;Compare Materials Tip!&#34;,&#34;description&#34;:&#34;Select two or more Materials by pressing the checkbox on the right and then press the &#34;Compare and Visualise &#34; button.&#34;},&#34;all-categories-selected&#34;:{&#34;title&#34;:&#34;All Material Categories have now been selected.&#34;},&#34;properties-disabled&#34;:{&#34;title&#34;:&#34;Properties disabled&#34;,&#34;description&#34;:&#34;The following properties: [ {{properties}} ] are not linked to the existing material categories.&#34;},&#34;properties-disabled-due-applied-filters&#34;:{&#34;title&#34;:&#34;Properties disabled&#34;,&#34;description&#34;:&#34;The following properties: [ {{properties}} ] have been disabled due to applied filters.&#34;},&#34;categories-disabled&#34;:{&#34;title&#34;:&#34;Material categories disabled&#34;,&#34;description&#34;:&#34;The following categories: [ {{categories}} ] have been disabled due to applied filters.&#34;},&#34;no-materials-left&#34;:{&#34;title&#34;:&#34;All materials have been filtered out.&#34;,&#34;description&#34;:&#34;Please re-adjust the slider filters, or add additional categories to bring back some materials.&#34;},&#34;material-retired&#34;:{&#34;title&#34;:&#34;Warning!&#34;,&#34;description&#34;:&#34;This material is no longer available. Search below to find a relevant alternative material.&#34;}},&#34;main-content&#34;:{&#34;supplied-by&#34;:&#34;Supplied by: &#34;,&#34;supplied-by-matmatch&#34;:&#34;{{number}} Matmatch suppliers&#34;,&#34;supplied-by-matmatch-singular&#34;:&#34;{{number}} Matmatch supplier&#34;},&#34;comparison&#34;:{&#34;compare-count&#34;:&#34;Compare ({{count}})&#34;,&#34;compare-materials&#34;:&#34;Compare Materials&#34;,&#34;compare-and-visualise&#34;:&#34;Compare and Visualise&#34;,&#34;materials-selected&#34;:&#34;{{count}} materials selected&#34;},&#34;categories&#34;:{&#34;popup&#34;:{&#34;title&#34;:&#34;Material categories&#34;,&#34;selected-categories&#34;:&#34;Selected Categories&#34;}},&#34;properties&#34;:{&#34;popup&#34;:{&#34;title&#34;:&#34;Material properties&#34;,&#34;search-placeholder&#34;:&#34;Property Search&#34;}},&#34;suppliers&#34;:{&#34;popup&#34;:{&#34;title&#34;:&#34;Material suppliers&#34;,&#34;selected-suppliers&#34;:&#34;Selected Suppliers&#34;}},&#34;header&#34;:{&#34;property-placeholder&#34;:&#34;- Property&#34;,&#34;no-properties-in-sidebar-info&#34;:&#34;You have no properties to compare, add some properties in the sidebar first.&#34;},&#34;category-specific-title&#34;:{&#34;metal&#34;:&#34;Metal Filters&#34;,&#34;polymer&#34;:&#34;Polymer Filters&#34;,&#34;ceramic&#34;:&#34;Ceramic Filters&#34;,&#34;composite&#34;:&#34;Composite Filters&#34;},&#34;category-specific-settings&#34;:{&#34;forms&#34;:&#34;Shape / Form&#34;,&#34;modifications&#34;:&#34;Modification&#34;,&#34;fillers&#34;:&#34;Filler&#34;,&#34;processing&#34;:&#34;Processing&#34;,&#34;certifications&#34;:&#34;Certification Group&#34;,&#34;primary-phase&#34;:&#34;Primary Phase&#34;,&#34;secondary-phase&#34;:&#34;Secondary Phase&#34;,&#34;tooltip-add-forms&#34;:&#34;Add a shape filter&#34;,&#34;tooltip-add-modifications&#34;:&#34;Add a modification filter&#34;,&#34;tooltip-add-fillers&#34;:&#34;Add a filler filter&#34;,&#34;tooltip-add-processing&#34;:&#34;Add a processing filter&#34;,&#34;tooltip-add-certifications&#34;:&#34;Add a certification filter&#34;,&#34;tooltip-add-primary-phase&#34;:&#34;Add a primary phase filter&#34;,&#34;tooltip-add-secondary-phase&#34;:&#34;Add a secondary phase filter&#34;,&#34;tooltip-clear-all&#34;:&#34;Clear all&#34;},&#34;applications&#34;:{&#34;popup&#34;:{&#34;selected-applications&#34;:&#34;Selected applications&#34;,&#34;no-applications&#34;:&#34;No Applications found for these Materials!&#34;}},&#34;contextual-tags&#34;:{&#34;results-number&#34;:&#34;{{count}} results for&#34;},&#34;no-results&#34;:{&#34;title&#34;:&#34;Sorry, no results found&#34;,&#34;text&#34;:&#34;Try searching again by typing a material name in the search bar or choose a filter to add.&#34;},&#34;navigation&#34;:{&#34;result-list&#34;:&#34;Result list&#34;,&#34;plot-materials&#34;:&#34;Visualise in Ashby&#34;},&#34;plot-materials&#34;:{&#34;title&#34;:&#34;Setup Ashby Chart&#34;,&#34;x-axis&#34;:&#34;Change X - Axis&#34;,&#34;y-axis&#34;:&#34;Change Y - Axis&#34;}},&#34;search-and-filters&#34;:{&#34;advanced-filters&#34;:&#34;Advanced filters&#34;,&#34;resetFilter&#34;:&#34;Reset filter&#34;,&#34;only-with-supplier&#34;:&#34;Show materials with suppliers&#34;,&#34;only-with-supplier-short&#34;:&#34;Only with suppliers&#34;,&#34;searchTips&#34;:{&#34;headline&#34;:&#34; u003cb u003eSearch tips: u003c/b u003e&#34;,&#34;noMatches&#34;:&#34;Sorry, no matches found for u003cb u003e{{text}} u003c/b u003e&#34;,&#34;tip1&#34;:&#34;Reduce the number of search terms&#34;,&#34;tip2&#34;:&#34;Try alternative spellings for your search terms&#34;,&#34;tip3&#34;:&#34;Use different search terms&#34;},&#34;wizard&#34;:{&#34;inputPlaceholder&#34;:&#34;Type to filter the list&#34;},&#34;search-bar-placeholders&#34;:{&#34;1&#34;:&#34;Aluminium&#34;,&#34;2&#34;:&#34;Density&#34;,&#34;3&#34;:&#34;Elastic Modulus&#34;,&#34;4&#34;:&#34;High carbon steel&#34;,&#34;5&#34;:&#34;AISI 201&#34;,&#34;6&#34;:&#34;Thermal diffusivity&#34;,&#34;7&#34;:&#34;Tungsten alloy&#34;,&#34;empty-submission-error&#34;:&#34;Type a material name or category to start a search&#34;,&#34;default&#34;:&#34;Type a material name, property, category or supplier&#34;},&#34;search&#34;:&#34;Search&#34;,&#34;results&#34;:&#34;Results&#34;,&#34;search-bar&#34;:{&#34;title&#34;:&#34;Make better material decisions&#34;,&#34;sub-title&#34;:&#34;Find and compare materials for your projects.&#34;,&#34;filters&#34;:{&#34;property&#34;:{&#34;title&#34;:&#34;Search by property&#34;,&#34;text&#34;:&#34;Find materials that meet specific requirements&#34;},&#34;category&#34;:{&#34;title&#34;:&#34;Search by category&#34;,&#34;text&#34;:&#34;Explore different materials in a certain category&#34;},&#34;supplier&#34;:{&#34;title&#34;:&#34;Search by supplier&#34;,&#34;text&#34;:&#34;Discover materials offered by a specific supplier&#34;}}}},&#34;ashby-chart&#34;:{&#34;breadcrumbs-level-one&#34;:&#34;All categories&#34;,&#34;download-as-png&#34;:&#34;Download Ashby chart as PNG: &#34;,&#34;data-point&#34;:{&#34;header-materials&#34;:&#34;Materials&#34;,&#34;supplier&#34;:&#34;Supplied by:&#34;}}}},&#34;initialLanguage&#34;:&#34;en&#34;,&#34;i18nServerInstance&#34;:null,&#34;pageProps&#34;:{&#34;data&#34;:{&#34;labels&#34;:[],&#34;queryParams&#34;:&#34;categories=steel u0026tags=form:bar&#34;,&#34;unitsSystem&#34;:&#34;metric&#34;,&#34;categories&#34;:[{&#34;id&#34;:&#34;biological-material&#34;,&#34;nodeId&#34;:&#34;biological-material&#34;,&#34;humanReadableId&#34;:&#34;Biological Material&#34;,&#34;label&#34;:&#34;Biological Material&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;wood&#34;,&#34;nodeId&#34;:&#34;wood&#34;,&#34;humanReadableId&#34;:&#34;Wood&#34;,&#34;label&#34;:&#34;Wood&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;ceramic&#34;,&#34;nodeId&#34;:&#34;ceramic&#34;,&#34;humanReadableId&#34;:&#34;Ceramic&#34;,&#34;label&#34;:&#34;Ceramic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;carbon&#34;,&#34;nodeId&#34;:&#34;carbon&#34;,&#34;humanReadableId&#34;:&#34;Carbon&#34;,&#34;label&#34;:&#34;Carbon&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;carbon-nanotube&#34;,&#34;nodeId&#34;:&#34;carbon-nanotube&#34;,&#34;humanReadableId&#34;:&#34;Carbon Nanotube&#34;,&#34;label&#34;:&#34;Carbon Nanotube&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;diamond&#34;,&#34;nodeId&#34;:&#34;diamond&#34;,&#34;humanReadableId&#34;:&#34;Diamond&#34;,&#34;label&#34;:&#34;Diamond&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;natural-diamond&#34;,&#34;nodeId&#34;:&#34;natural-diamond&#34;,&#34;humanReadableId&#34;:&#34;Natural Diamond&#34;,&#34;label&#34;:&#34;Natural Diamond&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;synthetic-diamond&#34;,&#34;nodeId&#34;:&#34;synthetic-diamond&#34;,&#34;humanReadableId&#34;:&#34;Synthetic Diamond&#34;,&#34;label&#34;:&#34;Synthetic Diamond&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;graphene&#34;,&#34;nodeId&#34;:&#34;graphene&#34;,&#34;humanReadableId&#34;:&#34;Graphene&#34;,&#34;label&#34;:&#34;Graphene&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;graphite&#34;,&#34;nodeId&#34;:&#34;graphite&#34;,&#34;humanReadableId&#34;:&#34;Graphite&#34;,&#34;label&#34;:&#34;Graphite&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;engineering-ceramic&#34;,&#34;nodeId&#34;:&#34;engineering-ceramic&#34;,&#34;humanReadableId&#34;:&#34;Engineering Ceramic&#34;,&#34;label&#34;:&#34;Engineering Ceramic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;non-oxide-based&#34;,&#34;nodeId&#34;:&#34;non-oxide-based&#34;,&#34;humanReadableId&#34;:&#34;Non Oxide Based&#34;,&#34;label&#34;:&#34;Non Oxide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;boride-based&#34;,&#34;nodeId&#34;:&#34;boride-based&#34;,&#34;humanReadableId&#34;:&#34;Boride Based&#34;,&#34;label&#34;:&#34;Boride Based&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;carbide-based&#34;,&#34;nodeId&#34;:&#34;carbide-based&#34;,&#34;humanReadableId&#34;:&#34;Carbide Based&#34;,&#34;label&#34;:&#34;Carbide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;boron-carbide&#34;,&#34;nodeId&#34;:&#34;boron-carbide&#34;,&#34;humanReadableId&#34;:&#34;Boron Carbide&#34;,&#34;label&#34;:&#34;Boron Carbide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicon-carbide&#34;,&#34;nodeId&#34;:&#34;silicon-carbide&#34;,&#34;humanReadableId&#34;:&#34;Silicon Carbide&#34;,&#34;label&#34;:&#34;Silicon Carbide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tantalum-carbide&#34;,&#34;nodeId&#34;:&#34;tantalum-carbide&#34;,&#34;humanReadableId&#34;:&#34;Tantalum Carbide&#34;,&#34;label&#34;:&#34;Tantalum Carbide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;titanium-carbide&#34;,&#34;nodeId&#34;:&#34;titanium-carbide&#34;,&#34;humanReadableId&#34;:&#34;Titanium Carbide&#34;,&#34;label&#34;:&#34;Titanium Carbide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tungsten-carbide&#34;,&#34;nodeId&#34;:&#34;tungsten-carbide&#34;,&#34;humanReadableId&#34;:&#34;Tungsten Carbide&#34;,&#34;label&#34;:&#34;Tungsten Carbide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zirconium-carbide&#34;,&#34;nodeId&#34;:&#34;zirconium-carbide&#34;,&#34;humanReadableId&#34;:&#34;Zirconium Carbide&#34;,&#34;label&#34;:&#34;Zirconium Carbide&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;nitride-based&#34;,&#34;nodeId&#34;:&#34;nitride-based&#34;,&#34;humanReadableId&#34;:&#34;Nitride Based&#34;,&#34;label&#34;:&#34;Nitride Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-nitirde&#34;,&#34;nodeId&#34;:&#34;aluminium-nitirde&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Nitirde&#34;,&#34;label&#34;:&#34;Aluminium Nitirde&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;boron-nitride&#34;,&#34;nodeId&#34;:&#34;boron-nitride&#34;,&#34;humanReadableId&#34;:&#34;Boron Nitride&#34;,&#34;label&#34;:&#34;Boron Nitride&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicon-nitride&#34;,&#34;nodeId&#34;:&#34;silicon-nitride&#34;,&#34;humanReadableId&#34;:&#34;Silicon Nitride&#34;,&#34;label&#34;:&#34;Silicon Nitride&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;titanium-nitride&#34;,&#34;nodeId&#34;:&#34;titanium-nitride&#34;,&#34;humanReadableId&#34;:&#34;Titanium Nitride&#34;,&#34;label&#34;:&#34;Titanium Nitride&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;silicate-based&#34;,&#34;nodeId&#34;:&#34;silicate-based&#34;,&#34;humanReadableId&#34;:&#34;Silicate Based&#34;,&#34;label&#34;:&#34;Silicate Based&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;sulfide-based&#34;,&#34;nodeId&#34;:&#34;sulfide-based&#34;,&#34;humanReadableId&#34;:&#34;Sulfide Based&#34;,&#34;label&#34;:&#34;Sulfide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;bismuth-sulfide&#34;,&#34;nodeId&#34;:&#34;bismuth-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Bismuth Sulfide&#34;,&#34;label&#34;:&#34;Bismuth Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copper-sulfide&#34;,&#34;nodeId&#34;:&#34;copper-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Copper Sulfide&#34;,&#34;label&#34;:&#34;Copper Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;iron-sulfide&#34;,&#34;nodeId&#34;:&#34;iron-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Iron Sulfide&#34;,&#34;label&#34;:&#34;Iron Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;manganese-sulfide&#34;,&#34;nodeId&#34;:&#34;manganese-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Manganese Sulfide&#34;,&#34;label&#34;:&#34;Manganese Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;molybdenum-disulfide&#34;,&#34;nodeId&#34;:&#34;molybdenum-disulfide&#34;,&#34;humanReadableId&#34;:&#34;Molybdenum Disulfide&#34;,&#34;label&#34;:&#34;Molybdenum Disulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;multiphase-metal-sulfide&#34;,&#34;nodeId&#34;:&#34;multiphase-metal-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Multiphase Metal Sulfide&#34;,&#34;label&#34;:&#34;Multiphase Metal Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tin-sulfide&#34;,&#34;nodeId&#34;:&#34;tin-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Tin Sulfide&#34;,&#34;label&#34;:&#34;Tin Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tungsten-disulfide&#34;,&#34;nodeId&#34;:&#34;tungsten-disulfide&#34;,&#34;humanReadableId&#34;:&#34;Tungsten Disulfide&#34;,&#34;label&#34;:&#34;Tungsten Disulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zinc-sulfide&#34;,&#34;nodeId&#34;:&#34;zinc-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Zinc Sulfide&#34;,&#34;label&#34;:&#34;Zinc Sulfide&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;oxide-based&#34;,&#34;nodeId&#34;:&#34;oxide-based&#34;,&#34;humanReadableId&#34;:&#34;Oxide Based&#34;,&#34;label&#34;:&#34;Oxide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;advanced-ceramic-oxides&#34;,&#34;nodeId&#34;:&#34;advanced-ceramic-oxides&#34;,&#34;humanReadableId&#34;:&#34;Advanced Ceramic Oxides&#34;,&#34;label&#34;:&#34;Advanced Ceramic Oxides&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;aluminium-oxide&#34;,&#34;nodeId&#34;:&#34;aluminium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Oxide&#34;,&#34;label&#34;:&#34;Aluminium Oxide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;beryllium-oxide&#34;,&#34;nodeId&#34;:&#34;beryllium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Beryllium Oxide&#34;,&#34;label&#34;:&#34;Beryllium Oxide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ferrite&#34;,&#34;nodeId&#34;:&#34;ferrite&#34;,&#34;humanReadableId&#34;:&#34;Ferrite&#34;,&#34;label&#34;:&#34;Ferrite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicon-oxide&#34;,&#34;nodeId&#34;:&#34;silicon-oxide&#34;,&#34;humanReadableId&#34;:&#34;Silicon Oxide&#34;,&#34;label&#34;:&#34;Silicon Oxide&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-silicate&#34;,&#34;nodeId&#34;:&#34;aluminium-silicate&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Silicate&#34;,&#34;label&#34;:&#34;Aluminium Silicate&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;magnesium-silicate&#34;,&#34;nodeId&#34;:&#34;magnesium-silicate&#34;,&#34;humanReadableId&#34;:&#34;Magnesium Silicate&#34;,&#34;label&#34;:&#34;Magnesium Silicate&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zirconium-silicate&#34;,&#34;nodeId&#34;:&#34;zirconium-silicate&#34;,&#34;humanReadableId&#34;:&#34;Zirconium Silicate&#34;,&#34;label&#34;:&#34;Zirconium Silicate&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;titanium-oxide&#34;,&#34;nodeId&#34;:&#34;titanium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Titanium Oxide&#34;,&#34;label&#34;:&#34;Titanium Oxide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zirconium-oxide&#34;,&#34;nodeId&#34;:&#34;zirconium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Zirconium Oxide&#34;,&#34;label&#34;:&#34;Zirconium Oxide&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;oxide-based-ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;oxide-based-ceramic-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;multi-oxide-ceramics&#34;,&#34;nodeId&#34;:&#34;multi-oxide-ceramics&#34;,&#34;humanReadableId&#34;:&#34;Multi-Oxide Ceramics&#34;,&#34;label&#34;:&#34;Multi-Oxide Ceramics&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicon-oxide&#34;,&#34;nodeId&#34;:&#34;silicon-oxide-&#34;,&#34;humanReadableId&#34;:&#34;Silicon Oxide&#34;,&#34;label&#34;:&#34;Silicon Oxide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ytterbium-oxide&#34;,&#34;nodeId&#34;:&#34;ytterbium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Ytterbium Oxide&#34;,&#34;label&#34;:&#34;Ytterbium Oxide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;yttrium-oxide&#34;,&#34;nodeId&#34;:&#34;yttrium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Yttrium Oxide&#34;,&#34;label&#34;:&#34;Yttrium Oxide&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;natural-ceramic&#34;,&#34;nodeId&#34;:&#34;natural-ceramic&#34;,&#34;humanReadableId&#34;:&#34;Natural Ceramic&#34;,&#34;label&#34;:&#34;Natural Ceramic&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;composite&#34;,&#34;nodeId&#34;:&#34;composite&#34;,&#34;humanReadableId&#34;:&#34;Composite&#34;,&#34;label&#34;:&#34;Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;ceramic-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;carbide-based-ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;carbide-based-ceramic-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Carbide Based Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Carbide Based Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;oxide-based-ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;oxide-based-ceramic-matrix-composite-&#34;,&#34;humanReadableId&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;metal-matrix-composite&#34;,&#34;nodeId&#34;:&#34;metal-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Metal Matrix Composite&#34;,&#34;label&#34;:&#34;Metal Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-matrix-composite&#34;,&#34;nodeId&#34;:&#34;aluminium-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Matrix Composite&#34;,&#34;label&#34;:&#34;Aluminium Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;beryllium-matrix-composite&#34;,&#34;nodeId&#34;:&#34;beryllium-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Beryllium Matrix Composite&#34;,&#34;label&#34;:&#34;Beryllium Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-matrix-composite&#34;,&#34;nodeId&#34;:&#34;cobalt-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Matrix Composite&#34;,&#34;label&#34;:&#34;Cobalt Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-and-nickel-matrix-composite&#34;,&#34;nodeId&#34;:&#34;cobalt-and-nickel-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Cobalt and Nickel Matrix Composite&#34;,&#34;label&#34;:&#34;Cobalt and Nickel Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;iron-matrix-composite&#34;,&#34;nodeId&#34;:&#34;iron-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Iron Matrix Composite&#34;,&#34;label&#34;:&#34;Iron Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-matrix-composite&#34;,&#34;nodeId&#34;:&#34;nickel-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Nickel Matrix Composite&#34;,&#34;label&#34;:&#34;Nickel Matrix Composite&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polymer-matrix-composite&#34;,&#34;nodeId&#34;:&#34;polymer-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Polymer Matrix Composite&#34;,&#34;label&#34;:&#34;Polymer Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;thermoset-polymer-matrix-composite&#34;,&#34;nodeId&#34;:&#34;thermoset-polymer-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Thermoset Polymer Matrix Composite&#34;,&#34;label&#34;:&#34;Thermoset Polymer Matrix Composite&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;glass&#34;,&#34;nodeId&#34;:&#34;glass&#34;,&#34;humanReadableId&#34;:&#34;Glass&#34;,&#34;label&#34;:&#34;Glass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;glass-ceramic&#34;,&#34;nodeId&#34;:&#34;glass-ceramic&#34;,&#34;humanReadableId&#34;:&#34;Glass Ceramic&#34;,&#34;label&#34;:&#34;Glass Ceramic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;las-glass-ceramic&#34;,&#34;nodeId&#34;:&#34;las-glass-ceramic&#34;,&#34;humanReadableId&#34;:&#34;LAS Glass Ceramic&#34;,&#34;label&#34;:&#34;LAS Glass Ceramic&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;lead-glass&#34;,&#34;nodeId&#34;:&#34;lead-glass&#34;,&#34;humanReadableId&#34;:&#34;Lead Glass&#34;,&#34;label&#34;:&#34;Lead Glass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicate-glass&#34;,&#34;nodeId&#34;:&#34;silicate-glass&#34;,&#34;humanReadableId&#34;:&#34;Silicate Glass&#34;,&#34;label&#34;:&#34;Silicate Glass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminosilicate&#34;,&#34;nodeId&#34;:&#34;aluminosilicate&#34;,&#34;humanReadableId&#34;:&#34;Aluminosilicate&#34;,&#34;label&#34;:&#34;Aluminosilicate&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;borosilicate&#34;,&#34;nodeId&#34;:&#34;borosilicate&#34;,&#34;humanReadableId&#34;:&#34;Borosilicate&#34;,&#34;label&#34;:&#34;Borosilicate&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;fused-quartz&#34;,&#34;nodeId&#34;:&#34;fused-quartz&#34;,&#34;humanReadableId&#34;:&#34;Fused Quartz&#34;,&#34;label&#34;:&#34;Fused Quartz&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;soda-lime-silicate&#34;,&#34;nodeId&#34;:&#34;soda-lime-silicate&#34;,&#34;humanReadableId&#34;:&#34;Soda Lime Silicate&#34;,&#34;label&#34;:&#34;Soda Lime Silicate&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;metal&#34;,&#34;nodeId&#34;:&#34;metal&#34;,&#34;humanReadableId&#34;:&#34;Metal&#34;,&#34;label&#34;:&#34;Metal&#34;,&#34;partiallyChecked&#34;:true,&#34;materialsCount&#34;:2214,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium&#34;,&#34;nodeId&#34;:&#34;aluminium&#34;,&#34;humanReadableId&#34;:&#34;Aluminium&#34;,&#34;label&#34;:&#34;Aluminium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-master-alloy&#34;,&#34;nodeId&#34;:&#34;aluminium-master-alloy&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Master Alloy&#34;,&#34;label&#34;:&#34;Aluminium Master Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-aluminium&#34;,&#34;nodeId&#34;:&#34;cast-aluminium&#34;,&#34;humanReadableId&#34;:&#34;Cast Aluminium&#34;,&#34;label&#34;:&#34;Cast Aluminium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;1xx-x&#34;,&#34;nodeId&#34;:&#34;1xx-x&#34;,&#34;humanReadableId&#34;:&#34;1xx.x&#34;,&#34;label&#34;:&#34;1xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;2xx-x&#34;,&#34;nodeId&#34;:&#34;2xx-x&#34;,&#34;humanReadableId&#34;:&#34;2xx.x&#34;,&#34;label&#34;:&#34;2xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;3xx-x&#34;,&#34;nodeId&#34;:&#34;3xx-x&#34;,&#34;humanReadableId&#34;:&#34;3xx.x&#34;,&#34;label&#34;:&#34;3xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;4xx-x&#34;,&#34;nodeId&#34;:&#34;4xx-x&#34;,&#34;humanReadableId&#34;:&#34;4xx.x&#34;,&#34;label&#34;:&#34;4xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;5xx-x&#34;,&#34;nodeId&#34;:&#34;5xx-x&#34;,&#34;humanReadableId&#34;:&#34;5xx.x&#34;,&#34;label&#34;:&#34;5xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;7xx-x&#34;,&#34;nodeId&#34;:&#34;7xx-x&#34;,&#34;humanReadableId&#34;:&#34;7xx.x&#34;,&#34;label&#34;:&#34;7xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;8xx-x&#34;,&#34;nodeId&#34;:&#34;8xx-x&#34;,&#34;humanReadableId&#34;:&#34;8xx.x&#34;,&#34;label&#34;:&#34;8xx.x&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;wrought-aluminium&#34;,&#34;nodeId&#34;:&#34;wrought-aluminium&#34;,&#34;humanReadableId&#34;:&#34;Wrought Aluminium&#34;,&#34;label&#34;:&#34;Wrought Aluminium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;1000-series&#34;,&#34;nodeId&#34;:&#34;1000-series&#34;,&#34;humanReadableId&#34;:&#34;1000 Series&#34;,&#34;label&#34;:&#34;1000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;2000-series&#34;,&#34;nodeId&#34;:&#34;2000-series&#34;,&#34;humanReadableId&#34;:&#34;2000 Series&#34;,&#34;label&#34;:&#34;2000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;3000-series&#34;,&#34;nodeId&#34;:&#34;3000-series&#34;,&#34;humanReadableId&#34;:&#34;3000 Series&#34;,&#34;label&#34;:&#34;3000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;4000-series&#34;,&#34;nodeId&#34;:&#34;4000-series&#34;,&#34;humanReadableId&#34;:&#34;4000 Series&#34;,&#34;label&#34;:&#34;4000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;5000-series&#34;,&#34;nodeId&#34;:&#34;5000-series&#34;,&#34;humanReadableId&#34;:&#34;5000 Series&#34;,&#34;label&#34;:&#34;5000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;6000-series&#34;,&#34;nodeId&#34;:&#34;6000-series&#34;,&#34;humanReadableId&#34;:&#34;6000 Series&#34;,&#34;label&#34;:&#34;6000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;7000-series&#34;,&#34;nodeId&#34;:&#34;7000-series&#34;,&#34;humanReadableId&#34;:&#34;7000 Series&#34;,&#34;label&#34;:&#34;7000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;8000-series&#34;,&#34;nodeId&#34;:&#34;8000-series&#34;,&#34;humanReadableId&#34;:&#34;8000 Series&#34;,&#34;label&#34;:&#34;8000 Series&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;cladbimetal&#34;,&#34;nodeId&#34;:&#34;cladbimetal&#34;,&#34;humanReadableId&#34;:&#34;Clad / Bimetal&#34;,&#34;label&#34;:&#34;Clad / Bimetal&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt&#34;,&#34;nodeId&#34;:&#34;cobalt&#34;,&#34;humanReadableId&#34;:&#34;Cobalt&#34;,&#34;label&#34;:&#34;Cobalt&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cobalt-chromium&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium&#34;,&#34;label&#34;:&#34;Cobalt Chromium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-chromium-molybdenum&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium-molybdenum&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium Molybdenum&#34;,&#34;label&#34;:&#34;Cobalt Chromium Molybdenum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-chromium-nickel-tungsten&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium-nickel-tungsten&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium Nickel Tungsten&#34;,&#34;label&#34;:&#34;Cobalt Chromium Nickel Tungsten&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-chromium-tungsten&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium-tungsten&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium Tungsten&#34;,&#34;label&#34;:&#34;Cobalt Chromium Tungsten&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-nickel-chromium-molybdenum&#34;,&#34;nodeId&#34;:&#34;cobalt-nickel-chromium-molybdenum&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Nickel Chromium Molybdenum&#34;,&#34;label&#34;:&#34;Cobalt Nickel Chromium Molybdenum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-superalloy&#34;,&#34;nodeId&#34;:&#34;cobalt-superalloy&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Superalloy&#34;,&#34;label&#34;:&#34;Cobalt Superalloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;unclassified-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;unclassified-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Cobalt Alloy&#34;,&#34;label&#34;:&#34;Unclassified Cobalt Alloy&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;copper&#34;,&#34;nodeId&#34;:&#34;copper&#34;,&#34;humanReadableId&#34;:&#34;Copper&#34;,&#34;label&#34;:&#34;Copper&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper&#34;,&#34;nodeId&#34;:&#34;cast-copper&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper&#34;,&#34;label&#34;:&#34;Cast Copper&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper-brass&#34;,&#34;nodeId&#34;:&#34;cast-copper-brass&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Brass&#34;,&#34;label&#34;:&#34;Cast Copper Brass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper-brass-yellow-brass&#34;,&#34;nodeId&#34;:&#34;cast-copper-brass-yellow-brass&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Brass Yellow Brass&#34;,&#34;label&#34;:&#34;Cast Copper Brass Yellow Brass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-copper-silicon-brass&#34;,&#34;nodeId&#34;:&#34;cast-copper-silicon-brass&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Silicon Brass&#34;,&#34;label&#34;:&#34;Cast Copper Silicon Brass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copper-bismuth-alloy&#34;,&#34;nodeId&#34;:&#34;copper-bismuth-alloy&#34;,&#34;humanReadableId&#34;:&#34;Copper Bismuth Alloy&#34;,&#34;label&#34;:&#34;Copper Bismuth Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;red-brass&#34;,&#34;nodeId&#34;:&#34;red-brass&#34;,&#34;humanReadableId&#34;:&#34;Red Brass&#34;,&#34;label&#34;:&#34;Red Brass&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;cast-copper-bronze&#34;,&#34;nodeId&#34;:&#34;cast-copper-bronze&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Bronze&#34;,&#34;label&#34;:&#34;Cast Copper Bronze&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper-bronze-aluminium-bronze&#34;,&#34;nodeId&#34;:&#34;cast-copper-bronze-aluminium-bronze&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Bronze Aluminium Bronze&#34;,&#34;label&#34;:&#34;Cast Copper Bronze Aluminium Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;leaded-tin-bronze&#34;,&#34;nodeId&#34;:&#34;leaded-tin-bronze&#34;,&#34;humanReadableId&#34;:&#34;Leaded Tin Bronze&#34;,&#34;label&#34;:&#34;Leaded Tin Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-tin-bronze&#34;,&#34;nodeId&#34;:&#34;nickel-tin-bronze&#34;,&#34;humanReadableId&#34;:&#34;Nickel Tin Bronze&#34;,&#34;label&#34;:&#34;Nickel Tin Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tin-bronze&#34;,&#34;nodeId&#34;:&#34;tin-bronze&#34;,&#34;humanReadableId&#34;:&#34;Tin Bronze&#34;,&#34;label&#34;:&#34;Tin Bronze&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;cast-copper-high-copper-alloy&#34;,&#34;nodeId&#34;:&#34;cast-copper-high-copper-alloy&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper High Copper Alloy&#34;,&#34;label&#34;:&#34;Cast Copper High Copper Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-copper-nickel-grade&#34;,&#34;nodeId&#34;:&#34;cast-copper-nickel-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Nickel Grade&#34;,&#34;label&#34;:&#34;Cast Copper Nickel Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-copper-nickel-silver-grade&#34;,&#34;nodeId&#34;:&#34;cast-copper-nickel-silver-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Nickel Silver Grade&#34;,&#34;label&#34;:&#34;Cast Copper Nickel Silver Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-copper-purelow-alloyed-copper&#34;,&#34;nodeId&#34;:&#34;cast-copper-purelow-alloyed-copper&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Pure / Low Alloyed Copper&#34;,&#34;label&#34;:&#34;Cast Copper Pure / Low Alloyed Copper&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copper-lead-alloy&#34;,&#34;nodeId&#34;:&#34;copper-lead-alloy&#34;,&#34;humanReadableId&#34;:&#34;Copper-Lead Alloy&#34;,&#34;label&#34;:&#34;Copper-Lead Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;special-alloy&#34;,&#34;nodeId&#34;:&#34;special-alloy&#34;,&#34;humanReadableId&#34;:&#34;Special Alloy&#34;,&#34;label&#34;:&#34;Special Alloy&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;welding&#34;,&#34;nodeId&#34;:&#34;welding&#34;,&#34;humanReadableId&#34;:&#34;Welding&#34;,&#34;label&#34;:&#34;Welding&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper&#34;,&#34;nodeId&#34;:&#34;wrought-copper&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper&#34;,&#34;label&#34;:&#34;Wrought Copper&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;unclassified-wrought-copper&#34;,&#34;nodeId&#34;:&#34;unclassified-wrought-copper&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Wrought Copper&#34;,&#34;label&#34;:&#34;Unclassified Wrought Copper&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-brass&#34;,&#34;nodeId&#34;:&#34;wrought-copper-brass&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Brass&#34;,&#34;label&#34;:&#34;Wrought Copper Brass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;leaded-brass&#34;,&#34;nodeId&#34;:&#34;leaded-brass&#34;,&#34;humanReadableId&#34;:&#34;Leaded Brass&#34;,&#34;label&#34;:&#34;Leaded Brass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;other-copper-zinc-alloy&#34;,&#34;nodeId&#34;:&#34;other-copper-zinc-alloy&#34;,&#34;humanReadableId&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;label&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tin-brass&#34;,&#34;nodeId&#34;:&#34;tin-brass&#34;,&#34;humanReadableId&#34;:&#34;Tin Brass&#34;,&#34;label&#34;:&#34;Tin Brass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-brass-yellow-brass&#34;,&#34;nodeId&#34;:&#34;wrought-copper-brass-yellow-brass&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Brass Yellow Brass&#34;,&#34;label&#34;:&#34;Wrought Copper Brass Yellow Brass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;yellow-wrought-brass&#34;,&#34;nodeId&#34;:&#34;yellow-wrought-brass&#34;,&#34;humanReadableId&#34;:&#34;Yellow Wrought Brass&#34;,&#34;label&#34;:&#34;Yellow Wrought Brass&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;wrought-copper-bronze&#34;,&#34;nodeId&#34;:&#34;wrought-copper-bronze&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Bronze&#34;,&#34;label&#34;:&#34;Wrought Copper Bronze&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;copper-silver-zinc-alloy&#34;,&#34;nodeId&#34;:&#34;copper-silver-zinc-alloy&#34;,&#34;humanReadableId&#34;:&#34;Copper Silver Zinc Alloy&#34;,&#34;label&#34;:&#34;Copper Silver Zinc Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;leaded-phosphor-bronze&#34;,&#34;nodeId&#34;:&#34;leaded-phosphor-bronze&#34;,&#34;humanReadableId&#34;:&#34;Leaded Phosphor Bronze&#34;,&#34;label&#34;:&#34;Leaded Phosphor Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;other-copper-zinc-alloy&#34;,&#34;nodeId&#34;:&#34;other-copper-zinc-alloy-&#34;,&#34;humanReadableId&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;label&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;phosphor-bronze&#34;,&#34;nodeId&#34;:&#34;phosphor-bronze&#34;,&#34;humanReadableId&#34;:&#34;Phosphor Bronze&#34;,&#34;label&#34;:&#34;Phosphor Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-bronze-aluminium-bronze&#34;,&#34;nodeId&#34;:&#34;wrought-copper-bronze-aluminium-bronze&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Bronze Aluminium Bronze&#34;,&#34;label&#34;:&#34;Wrought Copper Bronze Aluminium Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-bronze-silicon-bronze&#34;,&#34;nodeId&#34;:&#34;wrought-copper-bronze-silicon-bronze&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Bronze Silicon Bronze&#34;,&#34;label&#34;:&#34;Wrought Copper Bronze Silicon Bronze&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;wrought-copper-high-copper-alloy&#34;,&#34;nodeId&#34;:&#34;wrought-copper-high-copper-alloy&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper High Copper Alloy&#34;,&#34;label&#34;:&#34;Wrought Copper High Copper Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-nickel-grade&#34;,&#34;nodeId&#34;:&#34;wrought-copper-nickel-grade&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Nickel Grade&#34;,&#34;label&#34;:&#34;Wrought Copper Nickel Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-nickel-silver-grade&#34;,&#34;nodeId&#34;:&#34;wrought-copper-nickel-silver-grade&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Nickel Silver Grade&#34;,&#34;label&#34;:&#34;Wrought Copper Nickel Silver Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-purelow-alloyed-copper&#34;,&#34;nodeId&#34;:&#34;wrought-copper-purelow-alloyed-copper&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Pure / Low Alloyed Copper&#34;,&#34;label&#34;:&#34;Wrought Copper Pure / Low Alloyed Copper&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;iron&#34;,&#34;nodeId&#34;:&#34;iron&#34;,&#34;humanReadableId&#34;:&#34;Iron&#34;,&#34;label&#34;:&#34;Iron&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;alloy-iron&#34;,&#34;nodeId&#34;:&#34;alloy-iron&#34;,&#34;humanReadableId&#34;:&#34;Alloy Iron&#34;,&#34;label&#34;:&#34;Alloy Iron&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-iron&#34;,&#34;nodeId&#34;:&#34;cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Cast Iron&#34;,&#34;label&#34;:&#34;Cast Iron&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ductile--nodular--cast-iron&#34;,&#34;nodeId&#34;:&#34;ductile--nodular--cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Ductile (Nodular) Cast Iron&#34;,&#34;label&#34;:&#34;Ductile (Nodular) Cast Iron&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;grey-cast-iron&#34;,&#34;nodeId&#34;:&#34;grey-cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Grey Cast Iron&#34;,&#34;label&#34;:&#34;Grey Cast Iron&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;malleable-cast-iron&#34;,&#34;nodeId&#34;:&#34;malleable-cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Malleable Cast Iron&#34;,&#34;label&#34;:&#34;Malleable Cast Iron&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;other-cast-iron-alloy&#34;,&#34;nodeId&#34;:&#34;other-cast-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Other Cast Iron Alloy&#34;,&#34;label&#34;:&#34;Other Cast Iron Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;white-cast-iron&#34;,&#34;nodeId&#34;:&#34;white-cast-iron&#34;,&#34;humanReadableId&#34;:&#34;White Cast Iron&#34;,&#34;label&#34;:&#34;White Cast Iron&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;ferromolybdenum&#34;,&#34;nodeId&#34;:&#34;ferromolybdenum&#34;,&#34;humanReadableId&#34;:&#34;Ferromolybdenum&#34;,&#34;label&#34;:&#34;Ferromolybdenum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ferrosilicon&#34;,&#34;nodeId&#34;:&#34;ferrosilicon&#34;,&#34;humanReadableId&#34;:&#34;Ferrosilicon&#34;,&#34;label&#34;:&#34;Ferrosilicon&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ferrovanadium&#34;,&#34;nodeId&#34;:&#34;ferrovanadium&#34;,&#34;humanReadableId&#34;:&#34;Ferrovanadium&#34;,&#34;label&#34;:&#34;Ferrovanadium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;iron-alloy&#34;,&#34;nodeId&#34;:&#34;iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Iron Alloy&#34;,&#34;label&#34;:&#34;Iron Alloy&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-nickel-cobalt-iron-alloy&#34;,&#34;nodeId&#34;:&#34;aluminium-nickel-cobalt-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Nickel Cobalt Iron Alloy&#34;,&#34;label&#34;:&#34;Aluminium Nickel Cobalt Iron Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;miscellaneous-iron-alloy&#34;,&#34;nodeId&#34;:&#34;miscellaneous-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Miscellaneous Iron Alloy&#34;,&#34;label&#34;:&#34;Miscellaneous Iron Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;soft-magnetic-iron&#34;,&#34;nodeId&#34;:&#34;soft-magnetic-iron&#34;,&#34;humanReadableId&#34;:&#34;Soft Magnetic Iron&#34;,&#34;label&#34;:&#34;Soft Magnetic Iron&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;malleable-cast-iron&#34;,&#34;nodeId&#34;:&#34;malleable-cast-iron-&#34;,&#34;humanReadableId&#34;:&#34;Malleable Cast Iron&#34;,&#34;label&#34;:&#34;Malleable Cast Iron&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;magnesium&#34;,&#34;nodeId&#34;:&#34;magnesium&#34;,&#34;humanReadableId&#34;:&#34;Magnesium&#34;,&#34;label&#34;:&#34;Magnesium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-grade&#34;,&#34;nodeId&#34;:&#34;aluminium-grade&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Grade&#34;,&#34;label&#34;:&#34;Aluminium Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-aluminium-manganese-grade&#34;,&#34;nodeId&#34;:&#34;cast-aluminium-manganese-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Aluminium Manganese Grade&#34;,&#34;label&#34;:&#34;Cast Aluminium Manganese Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-rare-earth-grade&#34;,&#34;nodeId&#34;:&#34;cast-rare-earth-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Rare Earth Grade&#34;,&#34;label&#34;:&#34;Cast Rare Earth Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-wrought-aluminium-zinc-grade&#34;,&#34;nodeId&#34;:&#34;cast-wrought-aluminium-zinc-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast/Wrought Aluminium Zinc Grade&#34;,&#34;label&#34;:&#34;Cast/Wrought Aluminium Zinc Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-wrought-unclassified-grade&#34;,&#34;nodeId&#34;:&#34;cast-wrought-unclassified-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast/Wrought Unclassified Grade&#34;,&#34;label&#34;:&#34;Cast/Wrought Unclassified Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;pure-magnesium&#34;,&#34;nodeId&#34;:&#34;pure-magnesium&#34;,&#34;humanReadableId&#34;:&#34;Pure Magnesium&#34;,&#34;label&#34;:&#34;Pure Magnesium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;rare-earth-grade&#34;,&#34;nodeId&#34;:&#34;rare-earth-grade&#34;,&#34;humanReadableId&#34;:&#34;Rare Earth Grade&#34;,&#34;label&#34;:&#34;Rare Earth Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-zinc-grade&#34;,&#34;nodeId&#34;:&#34;wrought-zinc-grade&#34;,&#34;humanReadableId&#34;:&#34;Wrought Zinc Grade&#34;,&#34;label&#34;:&#34;Wrought Zinc Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;yttrium-grade&#34;,&#34;nodeId&#34;:&#34;yttrium-grade&#34;,&#34;humanReadableId&#34;:&#34;Yttrium Grade&#34;,&#34;label&#34;:&#34;Yttrium Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zinc-grade&#34;,&#34;nodeId&#34;:&#34;zinc-grade&#34;,&#34;humanReadableId&#34;:&#34;Zinc Grade&#34;,&#34;label&#34;:&#34;Zinc Grade&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;manganese&#34;,&#34;nodeId&#34;:&#34;manganese&#34;,&#34;humanReadableId&#34;:&#34;Manganese&#34;,&#34;label&#34;:&#34;Manganese&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel&#34;,&#34;nodeId&#34;:&#34;nickel&#34;,&#34;humanReadableId&#34;:&#34;Nickel&#34;,&#34;label&#34;:&#34;Nickel&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;nickel-chromium-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-chromium-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Cobalt Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Cobalt Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-chromium-iron-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Iron Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Iron Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-chromium-molybdenum-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-molybdenum-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Molybdenum Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Molybdenum Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Cobalt Alloy&#34;,&#34;label&#34;:&#34;Nickel Cobalt Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-copper-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-copper-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Copper Alloy&#34;,&#34;label&#34;:&#34;Nickel Copper Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-iron-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Iron Alloy&#34;,&#34;label&#34;:&#34;Nickel Iron Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-molybdenum-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-molybdenum-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Molybdenum Alloy&#34;,&#34;label&#34;:&#34;Nickel Molybdenum Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-superalloy&#34;,&#34;nodeId&#34;:&#34;nickel-superalloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Superalloy&#34;,&#34;label&#34;:&#34;Nickel Superalloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-welding-filler&#34;,&#34;nodeId&#34;:&#34;nickel-welding-filler&#34;,&#34;humanReadableId&#34;:&#34;Nickel Welding Filler&#34;,&#34;label&#34;:&#34;Nickel Welding Filler&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;other-nickel-alloy&#34;,&#34;nodeId&#34;:&#34;other-nickel-alloy&#34;,&#34;humanReadableId&#34;:&#34;Other Nickel Alloy&#34;,&#34;label&#34;:&#34;Other Nickel Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;pure-low-nickel-alloy&#34;,&#34;nodeId&#34;:&#34;pure-low-nickel-alloy&#34;,&#34;humanReadableId&#34;:&#34;Pure/Low Nickel Alloy&#34;,&#34;label&#34;:&#34;Pure/Low Nickel Alloy&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;noble-metal&#34;,&#34;nodeId&#34;:&#34;noble-metal&#34;,&#34;humanReadableId&#34;:&#34;Noble Metal&#34;,&#34;label&#34;:&#34;Noble Metal&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;gold&#34;,&#34;nodeId&#34;:&#34;gold&#34;,&#34;humanReadableId&#34;:&#34;Gold&#34;,&#34;label&#34;:&#34;Gold&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;iridium&#34;,&#34;nodeId&#34;:&#34;iridium&#34;,&#34;humanReadableId&#34;:&#34;Iridium&#34;,&#34;label&#34;:&#34;Iridium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;palladium&#34;,&#34;nodeId&#34;:&#34;palladium&#34;,&#34;humanReadableId&#34;:&#34;Palladium&#34;,&#34;label&#34;:&#34;Palladium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;platinum&#34;,&#34;nodeId&#34;:&#34;platinum&#34;,&#34;humanReadableId&#34;:&#34;Platinum&#34;,&#34;label&#34;:&#34;Platinum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;rhodium&#34;,&#34;nodeId&#34;:&#34;rhodium&#34;,&#34;humanReadableId&#34;:&#34;Rhodium&#34;,&#34;label&#34;:&#34;Rhodium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silver&#34;,&#34;nodeId&#34;:&#34;silver&#34;,&#34;humanReadableId&#34;:&#34;Silver&#34;,&#34;label&#34;:&#34;Silver&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;other-metal&#34;,&#34;nodeId&#34;:&#34;other-metal&#34;,&#34;humanReadableId&#34;:&#34;Other Metal&#34;,&#34;label&#34;:&#34;Other Metal&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;beryllium&#34;,&#34;nodeId&#34;:&#34;beryllium&#34;,&#34;humanReadableId&#34;:&#34;Beryllium&#34;,&#34;label&#34;:&#34;Beryllium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cadmium&#34;,&#34;nodeId&#34;:&#34;cadmium&#34;,&#34;humanReadableId&#34;:&#34;Cadmium&#34;,&#34;label&#34;:&#34;Cadmium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;chromium&#34;,&#34;nodeId&#34;:&#34;chromium&#34;,&#34;humanReadableId&#34;:&#34;Chromium&#34;,&#34;label&#34;:&#34;Chromium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;lead&#34;,&#34;nodeId&#34;:&#34;lead&#34;,&#34;humanReadableId&#34;:&#34;Lead&#34;,&#34;label&#34;:&#34;Lead&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;lead-antimony&#34;,&#34;nodeId&#34;:&#34;lead-antimony&#34;,&#34;humanReadableId&#34;:&#34;Lead Antimony&#34;,&#34;label&#34;:&#34;Lead Antimony&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;lead-tin&#34;,&#34;nodeId&#34;:&#34;lead-tin&#34;,&#34;humanReadableId&#34;:&#34;Lead Tin&#34;,&#34;label&#34;:&#34;Lead Tin&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;pure-low-alloyed-lead&#34;,&#34;nodeId&#34;:&#34;pure-low-alloyed-lead&#34;,&#34;humanReadableId&#34;:&#34;Pure/Low Alloyed Lead&#34;,&#34;label&#34;:&#34;Pure/Low Alloyed Lead&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;lithium&#34;,&#34;nodeId&#34;:&#34;lithium&#34;,&#34;humanReadableId&#34;:&#34;Lithium&#34;,&#34;label&#34;:&#34;Lithium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;neodymium&#34;,&#34;nodeId&#34;:&#34;neodymium&#34;,&#34;humanReadableId&#34;:&#34;Neodymium&#34;,&#34;label&#34;:&#34;Neodymium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;neodymium-iron-boron-alloy&#34;,&#34;nodeId&#34;:&#34;neodymium-iron-boron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Neodymium Iron Boron Alloy&#34;,&#34;label&#34;:&#34;Neodymium Iron Boron Alloy&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;samarium&#34;,&#34;nodeId&#34;:&#34;samarium&#34;,&#34;humanReadableId&#34;:&#34;Samarium&#34;,&#34;label&#34;:&#34;Samarium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;samarium-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;samarium-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Samarium Cobalt Alloy&#34;,&#34;label&#34;:&#34;Samarium Cobalt Alloy&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;tin&#34;,&#34;nodeId&#34;:&#34;tin&#34;,&#34;humanReadableId&#34;:&#34;Tin&#34;,&#34;label&#34;:&#34;Tin&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;pure-low-alloyed-tin&#34;,&#34;nodeId&#34;:&#34;pure-low-alloyed-tin&#34;,&#34;humanReadableId&#34;:&#34;Pure/Low Alloyed Tin&#34;,&#34;label&#34;:&#34;Pure/Low Alloyed Tin&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tin-antimony&#34;,&#34;nodeId&#34;:&#34;tin-antimony&#34;,&#34;humanReadableId&#34;:&#34;Tin Antimony&#34;,&#34;label&#34;:&#34;Tin Antimony&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tin-lead&#34;,&#34;nodeId&#34;:&#34;tin-lead&#34;,&#34;humanReadableId&#34;:&#34;Tin Lead&#34;,&#34;label&#34;:&#34;Tin Lead&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;unclassified-tin&#34;,&#34;nodeId&#34;:&#34;unclassified-tin&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Tin&#34;,&#34;label&#34;:&#34;Unclassified Tin&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;zinc&#34;,&#34;nodeId&#34;:&#34;zinc&#34;,&#34;humanReadableId&#34;:&#34;Zinc&#34;,&#34;label&#34;:&#34;Zinc&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;unalloyed-zinc&#34;,&#34;nodeId&#34;:&#34;unalloyed-zinc&#34;,&#34;humanReadableId&#34;:&#34;Unalloyed Zinc&#34;,&#34;label&#34;:&#34;Unalloyed Zinc&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;unclassified-zinc&#34;,&#34;nodeId&#34;:&#34;unclassified-zinc&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Zinc&#34;,&#34;label&#34;:&#34;Unclassified Zinc&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zinc-aluminium&#34;,&#34;nodeId&#34;:&#34;zinc-aluminium&#34;,&#34;humanReadableId&#34;:&#34;Zinc Aluminium&#34;,&#34;label&#34;:&#34;Zinc Aluminium&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;refractory-metal&#34;,&#34;nodeId&#34;:&#34;refractory-metal&#34;,&#34;humanReadableId&#34;:&#34;Refractory Metal&#34;,&#34;label&#34;:&#34;Refractory Metal&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;hafnium&#34;,&#34;nodeId&#34;:&#34;hafnium&#34;,&#34;humanReadableId&#34;:&#34;Hafnium&#34;,&#34;label&#34;:&#34;Hafnium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;molybdenum&#34;,&#34;nodeId&#34;:&#34;molybdenum&#34;,&#34;humanReadableId&#34;:&#34;Molybdenum&#34;,&#34;label&#34;:&#34;Molybdenum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;niobium&#34;,&#34;nodeId&#34;:&#34;niobium&#34;,&#34;humanReadableId&#34;:&#34;Niobium&#34;,&#34;label&#34;:&#34;Niobium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;rhenium&#34;,&#34;nodeId&#34;:&#34;rhenium&#34;,&#34;humanReadableId&#34;:&#34;Rhenium&#34;,&#34;label&#34;:&#34;Rhenium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tantalum&#34;,&#34;nodeId&#34;:&#34;tantalum&#34;,&#34;humanReadableId&#34;:&#34;Tantalum&#34;,&#34;label&#34;:&#34;Tantalum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tungsten&#34;,&#34;nodeId&#34;:&#34;tungsten&#34;,&#34;humanReadableId&#34;:&#34;Tungsten&#34;,&#34;label&#34;:&#34;Tungsten&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;vanadium&#34;,&#34;nodeId&#34;:&#34;vanadium&#34;,&#34;humanReadableId&#34;:&#34;Vanadium&#34;,&#34;label&#34;:&#34;Vanadium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zirconium&#34;,&#34;nodeId&#34;:&#34;zirconium&#34;,&#34;humanReadableId&#34;:&#34;Zirconium&#34;,&#34;label&#34;:&#34;Zirconium&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;steel&#34;,&#34;nodeId&#34;:&#34;steel&#34;,&#34;humanReadableId&#34;:&#34;Steel&#34;,&#34;label&#34;:&#34;Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;alloy-steel&#34;,&#34;nodeId&#34;:&#34;alloy-steel&#34;,&#34;humanReadableId&#34;:&#34;Alloy Steel&#34;,&#34;label&#34;:&#34;Alloy Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;chromium-molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;chromium-molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Molybdenum Steel&#34;,&#34;label&#34;:&#34;Chromium Molybdenum Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;chromium-molybdenum-vanadium-steel&#34;,&#34;nodeId&#34;:&#34;chromium-molybdenum-vanadium-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Molybdenum Vanadium Steel&#34;,&#34;label&#34;:&#34;Chromium Molybdenum Vanadium Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;chromium-steel&#34;,&#34;nodeId&#34;:&#34;chromium-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Steel&#34;,&#34;label&#34;:&#34;Chromium Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;chromium-vanadium-steel&#34;,&#34;nodeId&#34;:&#34;chromium-vanadium-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Vanadium Steel&#34;,&#34;label&#34;:&#34;Chromium Vanadium Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;manganese-steel&#34;,&#34;nodeId&#34;:&#34;manganese-steel&#34;,&#34;humanReadableId&#34;:&#34;Manganese Steel&#34;,&#34;label&#34;:&#34;Manganese Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Molybdenum Steel&#34;,&#34;label&#34;:&#34;Molybdenum Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;nickel-chromium-molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Molybdenum Steel&#34;,&#34;label&#34;:&#34;Nickel Chromium Molybdenum Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;nickel-chromium-steel&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Steel&#34;,&#34;label&#34;:&#34;Nickel Chromium Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;nickel-molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;nickel-molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Molybdenum Steel&#34;,&#34;label&#34;:&#34;Nickel Molybdenum Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-steel&#34;,&#34;nodeId&#34;:&#34;nickel-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Steel&#34;,&#34;label&#34;:&#34;Nickel Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;nitriding-steel&#34;,&#34;nodeId&#34;:&#34;nitriding-steel&#34;,&#34;humanReadableId&#34;:&#34;Nitriding Steel&#34;,&#34;label&#34;:&#34;Nitriding Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;silicon-manganese-steel&#34;,&#34;nodeId&#34;:&#34;silicon-manganese-steel&#34;,&#34;humanReadableId&#34;:&#34;Silicon Manganese Steel&#34;,&#34;label&#34;:&#34;Silicon Manganese Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicon-steel&#34;,&#34;nodeId&#34;:&#34;silicon-steel&#34;,&#34;humanReadableId&#34;:&#34;Silicon Steel&#34;,&#34;label&#34;:&#34;Silicon Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;unclassified-low-alloy-steel&#34;,&#34;nodeId&#34;:&#34;unclassified-low-alloy-steel&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Low Alloy Steel&#34;,&#34;label&#34;:&#34;Unclassified Low Alloy Steel&#34;,&#34;checked&#34;:true}]},{&#34;id&#34;:&#34;carbon-steel&#34;,&#34;nodeId&#34;:&#34;carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Carbon Steel&#34;,&#34;label&#34;:&#34;Carbon Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;high-carbon-steel&#34;,&#34;nodeId&#34;:&#34;high-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;High Carbon Steel&#34;,&#34;label&#34;:&#34;High Carbon Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;low-carbon-steel&#34;,&#34;nodeId&#34;:&#34;low-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Low Carbon Steel&#34;,&#34;label&#34;:&#34;Low Carbon Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;medium-carbon-steel&#34;,&#34;nodeId&#34;:&#34;medium-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Medium Carbon Steel&#34;,&#34;label&#34;:&#34;Medium Carbon Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;unclassified-carbon-steel&#34;,&#34;nodeId&#34;:&#34;unclassified-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Carbon Steel&#34;,&#34;label&#34;:&#34;Unclassified Carbon Steel&#34;,&#34;checked&#34;:true}]},{&#34;id&#34;:&#34;low-alloy-steel&#34;,&#34;nodeId&#34;:&#34;low-alloy-steel&#34;,&#34;humanReadableId&#34;:&#34;Low Alloy Steel&#34;,&#34;label&#34;:&#34;Low Alloy Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;low-carbon-steel&#34;,&#34;nodeId&#34;:&#34;low-carbon-steel-&#34;,&#34;humanReadableId&#34;:&#34;Low Carbon Steel&#34;,&#34;label&#34;:&#34;Low Carbon Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;maraging-steel&#34;,&#34;nodeId&#34;:&#34;maraging-steel&#34;,&#34;humanReadableId&#34;:&#34;Maraging Steel&#34;,&#34;label&#34;:&#34;Maraging Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;stainless-steel&#34;,&#34;nodeId&#34;:&#34;stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Stainless Steel&#34;,&#34;label&#34;:&#34;Stainless Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;austenitic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Austenitic Stainless Steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;duplex-stainless-steel&#34;,&#34;nodeId&#34;:&#34;duplex-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Duplex Stainless Steel&#34;,&#34;label&#34;:&#34;Duplex Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;ferritic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;ferritic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Ferritic Stainless Steel&#34;,&#34;label&#34;:&#34;Ferritic Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;martensitic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;martensitic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Martensitic Stainless Steel&#34;,&#34;label&#34;:&#34;Martensitic Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;precipitation-hardening-stainless-steel&#34;,&#34;nodeId&#34;:&#34;precipitation-hardening-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Precipitation Hardening Stainless Steel&#34;,&#34;label&#34;:&#34;Precipitation Hardening Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;superaustenitic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;superaustenitic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Superaustenitic Stainless Steel&#34;,&#34;label&#34;:&#34;Superaustenitic Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;unclassified-stainless-steel&#34;,&#34;nodeId&#34;:&#34;unclassified-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Stainless Steel&#34;,&#34;label&#34;:&#34;Unclassified Stainless Steel&#34;,&#34;checked&#34;:true}]},{&#34;id&#34;:&#34;tool-and-machining-steel&#34;,&#34;nodeId&#34;:&#34;tool-and-machining-steel&#34;,&#34;humanReadableId&#34;:&#34;Tool And Machining Steel&#34;,&#34;label&#34;:&#34;Tool And Machining Steel&#34;,&#34;checked&#34;:true}]},{&#34;id&#34;:&#34;titanium&#34;,&#34;nodeId&#34;:&#34;titanium&#34;,&#34;humanReadableId&#34;:&#34;Titanium&#34;,&#34;label&#34;:&#34;Titanium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;alpha-alloy&#34;,&#34;nodeId&#34;:&#34;alpha-alloy&#34;,&#34;humanReadableId&#34;:&#34;Alpha Alloy&#34;,&#34;label&#34;:&#34;Alpha Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;alpha-beta-alloy&#34;,&#34;nodeId&#34;:&#34;alpha-beta-alloy&#34;,&#34;humanReadableId&#34;:&#34;Alpha Beta Alloy&#34;,&#34;label&#34;:&#34;Alpha Beta Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;beta-alloy&#34;,&#34;nodeId&#34;:&#34;beta-alloy&#34;,&#34;humanReadableId&#34;:&#34;Beta Alloy&#34;,&#34;label&#34;:&#34;Beta Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;low-alloy-titanium&#34;,&#34;nodeId&#34;:&#34;low-alloy-titanium&#34;,&#34;humanReadableId&#34;:&#34;Low Alloy Titanium&#34;,&#34;label&#34;:&#34;Low Alloy Titanium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;near-alpha-alloy&#34;,&#34;nodeId&#34;:&#34;near-alpha-alloy&#34;,&#34;humanReadableId&#34;:&#34;Near Alpha Alloy&#34;,&#34;label&#34;:&#34;Near Alpha Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;pure-titanium&#34;,&#34;nodeId&#34;:&#34;pure-titanium&#34;,&#34;humanReadableId&#34;:&#34;Pure Titanium&#34;,&#34;label&#34;:&#34;Pure Titanium&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;polymer&#34;,&#34;nodeId&#34;:&#34;polymer&#34;,&#34;humanReadableId&#34;:&#34;Polymer&#34;,&#34;label&#34;:&#34;Polymer&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;elastomer&#34;,&#34;nodeId&#34;:&#34;elastomer&#34;,&#34;humanReadableId&#34;:&#34;Elastomer&#34;,&#34;label&#34;:&#34;Elastomer&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;butadiene-rubber--br-&#34;,&#34;nodeId&#34;:&#34;butadiene-rubber--br-&#34;,&#34;humanReadableId&#34;:&#34;Butadiene Rubber (BR)&#34;,&#34;label&#34;:&#34;Butadiene Rubber (BR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;chloroprene-rubber--cr-&#34;,&#34;nodeId&#34;:&#34;chloroprene-rubber--cr-&#34;,&#34;humanReadableId&#34;:&#34;Chloroprene Rubber (CR)&#34;,&#34;label&#34;:&#34;Chloroprene Rubber (CR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ethylene-propylene-diene-rubber--epdm-&#34;,&#34;nodeId&#34;:&#34;ethylene-propylene-diene-rubber--epdm-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Propylene Diene Rubber (EPDM)&#34;,&#34;label&#34;:&#34;Ethylene Propylene Diene Rubber (EPDM)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ethylene-propylene-rubber--epr-&#34;,&#34;nodeId&#34;:&#34;ethylene-propylene-rubber--epr-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Propylene Rubber (EPR)&#34;,&#34;label&#34;:&#34;Ethylene Propylene Rubber (EPR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;fluorosilicone-rubber--fvmq-&#34;,&#34;nodeId&#34;:&#34;fluorosilicone-rubber--fvmq-&#34;,&#34;humanReadableId&#34;:&#34;Fluorosilicone Rubber (FVMQ)&#34;,&#34;label&#34;:&#34;Fluorosilicone Rubber (FVMQ)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;natural-rubber--nr-&#34;,&#34;nodeId&#34;:&#34;natural-rubber--nr-&#34;,&#34;humanReadableId&#34;:&#34;Natural Rubber (NR)&#34;,&#34;label&#34;:&#34;Natural Rubber (NR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nitrile-rubber--nbr-&#34;,&#34;nodeId&#34;:&#34;nitrile-rubber--nbr-&#34;,&#34;humanReadableId&#34;:&#34;Nitrile Rubber (NBR)&#34;,&#34;label&#34;:&#34;Nitrile Rubber (NBR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;styrene-butadiene-rubber--sbr-&#34;,&#34;nodeId&#34;:&#34;styrene-butadiene-rubber--sbr-&#34;,&#34;humanReadableId&#34;:&#34;Styrene Butadiene Rubber (SBR)&#34;,&#34;label&#34;:&#34;Styrene Butadiene Rubber (SBR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-elastomer--tpe-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-elastomer--tpe-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Elastomer (TPE)&#34;,&#34;label&#34;:&#34;Thermoplastic Elastomer (TPE)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;elastomeric-alloy--tpv-&#34;,&#34;nodeId&#34;:&#34;elastomeric-alloy--tpv-&#34;,&#34;humanReadableId&#34;:&#34;Elastomeric Alloy (TPV)&#34;,&#34;label&#34;:&#34;Elastomeric Alloy (TPV)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;styrene-butadiene-styrene--sbs-&#34;,&#34;nodeId&#34;:&#34;styrene-butadiene-styrene--sbs-&#34;,&#34;humanReadableId&#34;:&#34;Styrene Butadiene Styrene (SBS)&#34;,&#34;label&#34;:&#34;Styrene Butadiene Styrene (SBS)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-copolyester--tpc-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-copolyester--tpc-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Copolyester (TPC)&#34;,&#34;label&#34;:&#34;Thermoplastic Copolyester (TPC)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-polyamide--tpa-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyamide--tpa-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyamide (TPA)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyamide (TPA)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-polyester-elastomer--tpee-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyester-elastomer--tpee-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyester Elastomer (TPEE)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyester Elastomer (TPEE)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-polyolefin--tpo-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyolefin--tpo-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyolefin (TPO)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyolefin (TPO)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-polyurethane--tpu-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyurethane--tpu-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyurethane (TPU)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyurethane (TPU)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-styrenic-block-copolymer--tps-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-styrenic-block-copolymer--tps-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Styrenic Block Copolymer (TPS)&#34;,&#34;label&#34;:&#34;Thermoplastic Styrenic Block Copolymer (TPS)&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;thermoplastic&#34;,&#34;nodeId&#34;:&#34;thermoplastic&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic&#34;,&#34;label&#34;:&#34;Thermoplastic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;acrylic&#34;,&#34;nodeId&#34;:&#34;acrylic&#34;,&#34;humanReadableId&#34;:&#34;Acrylic&#34;,&#34;label&#34;:&#34;Acrylic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyacrylonitrile--pan-&#34;,&#34;nodeId&#34;:&#34;polyacrylonitrile--pan-&#34;,&#34;humanReadableId&#34;:&#34;Polyacrylonitrile (PAN)&#34;,&#34;label&#34;:&#34;Polyacrylonitrile (PAN)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polymethyl-methacrylate--pmma-&#34;,&#34;nodeId&#34;:&#34;polymethyl-methacrylate--pmma-&#34;,&#34;humanReadableId&#34;:&#34;Polymethyl methacrylate (PMMA)&#34;,&#34;label&#34;:&#34;Polymethyl methacrylate (PMMA)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;fluoropolymer&#34;,&#34;nodeId&#34;:&#34;fluoropolymer&#34;,&#34;humanReadableId&#34;:&#34;Fluoropolymer&#34;,&#34;label&#34;:&#34;Fluoropolymer&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ethylene-tetrafluoroethylene-copolymer--etfe-&#34;,&#34;nodeId&#34;:&#34;ethylene-tetrafluoroethylene-copolymer--etfe-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Tetrafluoroethylene Copolymer (ETFE)&#34;,&#34;label&#34;:&#34;Ethylene Tetrafluoroethylene Copolymer (ETFE)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;fluorinated-ethylene-propylene--fep-&#34;,&#34;nodeId&#34;:&#34;fluorinated-ethylene-propylene--fep-&#34;,&#34;humanReadableId&#34;:&#34;Fluorinated ethylene propylene (FEP)&#34;,&#34;label&#34;:&#34;Fluorinated ethylene propylene (FEP)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polytetrafluoroethylene--ptfe-&#34;,&#34;nodeId&#34;:&#34;polytetrafluoroethylene--ptfe-&#34;,&#34;humanReadableId&#34;:&#34;Polytetrafluoroethylene (PTFE)&#34;,&#34;label&#34;:&#34;Polytetrafluoroethylene (PTFE)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyvinylidenefluoride--pvdf-&#34;,&#34;nodeId&#34;:&#34;polyvinylidenefluoride--pvdf-&#34;,&#34;humanReadableId&#34;:&#34;Polyvinylidenefluoride (PVDF)&#34;,&#34;label&#34;:&#34;Polyvinylidenefluoride (PVDF)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;liquid-crystal-polymers--lcp-&#34;,&#34;nodeId&#34;:&#34;liquid-crystal-polymers--lcp-&#34;,&#34;humanReadableId&#34;:&#34;Liquid Crystal Polymers (LCP)&#34;,&#34;label&#34;:&#34;Liquid Crystal Polymers (LCP)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide--pa-&#34;,&#34;nodeId&#34;:&#34;polyamide--pa-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide (PA)&#34;,&#34;label&#34;:&#34;Polyamide (PA)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aramide&#34;,&#34;nodeId&#34;:&#34;aramide&#34;,&#34;humanReadableId&#34;:&#34;Aramide&#34;,&#34;label&#34;:&#34;Aramide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copolyamide-6-66--pa6-66-&#34;,&#34;nodeId&#34;:&#34;copolyamide-6-66--pa6-66-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 6/66 (PA6/66)&#34;,&#34;label&#34;:&#34;Copolyamide 6/66 (PA6/66)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;other-polyamide--pa-&#34;,&#34;nodeId&#34;:&#34;other-polyamide--pa-&#34;,&#34;humanReadableId&#34;:&#34;Other Polyamide (PA)&#34;,&#34;label&#34;:&#34;Other Polyamide (PA)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-1010--pa1010-&#34;,&#34;nodeId&#34;:&#34;polyamide-1010--pa1010-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 1010 (PA1010)&#34;,&#34;label&#34;:&#34;Polyamide 1010 (PA1010)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-1012--pa1012-&#34;,&#34;nodeId&#34;:&#34;polyamide-1012--pa1012-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 1012 (PA1012)&#34;,&#34;label&#34;:&#34;Polyamide 1012 (PA1012)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-11--pa11-&#34;,&#34;nodeId&#34;:&#34;polyamide-11--pa11-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 11 (PA11)&#34;,&#34;label&#34;:&#34;Polyamide 11 (PA11)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-12--pa12-&#34;,&#34;nodeId&#34;:&#34;polyamide-12--pa12-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 12 (PA12)&#34;,&#34;label&#34;:&#34;Polyamide 12 (PA12)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-410--pa410-&#34;,&#34;nodeId&#34;:&#34;polyamide-410--pa410-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 410 (PA410)&#34;,&#34;label&#34;:&#34;Polyamide 410 (PA410)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-46--pa46-&#34;,&#34;nodeId&#34;:&#34;polyamide-46--pa46-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 46 (PA46)&#34;,&#34;label&#34;:&#34;Polyamide 46 (PA46)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-6--pa6-&#34;,&#34;nodeId&#34;:&#34;polyamide-6--pa6-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 6 (PA6)&#34;,&#34;label&#34;:&#34;Polyamide 6 (PA6)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyamide-4t--pa4t-&#34;,&#34;nodeId&#34;:&#34;polyamide-4t--pa4t-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;label&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polyamide-6-66--pa6-66-&#34;,&#34;nodeId&#34;:&#34;polyamide-6-66--pa6-66-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 6/66 (PA6/66)&#34;,&#34;label&#34;:&#34;Polyamide 6/66 (PA6/66)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-610--pa610-&#34;,&#34;nodeId&#34;:&#34;polyamide-610--pa610-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 610 (PA610)&#34;,&#34;label&#34;:&#34;Polyamide 610 (PA610)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-612--pa612-&#34;,&#34;nodeId&#34;:&#34;polyamide-612--pa612-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 612 (PA612)&#34;,&#34;label&#34;:&#34;Polyamide 612 (PA612)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-66--pa66-&#34;,&#34;nodeId&#34;:&#34;polyamide-66--pa66-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 66 (PA66)&#34;,&#34;label&#34;:&#34;Polyamide 66 (PA66)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyphthalamide--ppa-&#34;,&#34;nodeId&#34;:&#34;polyphthalamide--ppa-&#34;,&#34;humanReadableId&#34;:&#34;Polyphthalamide (PPA)&#34;,&#34;label&#34;:&#34;Polyphthalamide (PPA)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;copolyamide-66-6i--pa66-6i-&#34;,&#34;nodeId&#34;:&#34;copolyamide-66-6i--pa66-6i-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 66/6I (PA66/6I)&#34;,&#34;label&#34;:&#34;Copolyamide 66/6I (PA66/6I)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copolyamide-6t-66--pa6t-66-&#34;,&#34;nodeId&#34;:&#34;copolyamide-6t-66--pa6t-66-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 6T/66 (PA6T/66)&#34;,&#34;label&#34;:&#34;Copolyamide 6T/66 (PA6T/66)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copolyamide-6t-6i-66--pa6t-6i-66-&#34;,&#34;nodeId&#34;:&#34;copolyamide-6t-6i-66--pa6t-6i-66-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 6T/6I/66 (PA6T/6I/66)&#34;,&#34;label&#34;:&#34;Copolyamide 6T/6I/66 (PA6T/6I/66)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copolyamide-pa6i-6t--pa6i-6t-&#34;,&#34;nodeId&#34;:&#34;copolyamide-pa6i-6t--pa6i-6t-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide PA6I/6T (PA6I/6T)&#34;,&#34;label&#34;:&#34;Copolyamide PA6I/6T (PA6I/6T)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-4t--pa4t-&#34;,&#34;nodeId&#34;:&#34;polyamide-4t--pa4t--&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;label&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-6t--pa6t-&#34;,&#34;nodeId&#34;:&#34;polyamide-6t--pa6t-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 6T (PA6T)&#34;,&#34;label&#34;:&#34;Polyamide 6T (PA6T)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-mxd6--pamxd6-&#34;,&#34;nodeId&#34;:&#34;polyamide-mxd6--pamxd6-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide MXD6 (PAMXD6)&#34;,&#34;label&#34;:&#34;Polyamide MXD6 (PAMXD6)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-pa6-6t--pa6-6t-&#34;,&#34;nodeId&#34;:&#34;polyamide-pa6-6t--pa6-6t-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide PA6/6T (PA6/6T)&#34;,&#34;label&#34;:&#34;Polyamide PA6/6T (PA6/6T)&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;polyaryletherketone--paek-&#34;,&#34;nodeId&#34;:&#34;polyaryletherketone--paek-&#34;,&#34;humanReadableId&#34;:&#34;Polyaryletherketone (PAEK)&#34;,&#34;label&#34;:&#34;Polyaryletherketone (PAEK)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyether-ketone--pek-&#34;,&#34;nodeId&#34;:&#34;polyether-ketone--pek-&#34;,&#34;humanReadableId&#34;:&#34;Polyether Ketone (PEK)&#34;,&#34;label&#34;:&#34;Polyether Ketone (PEK)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyetherether-ketone--peek-&#34;,&#34;nodeId&#34;:&#34;polyetherether-ketone--peek-&#34;,&#34;humanReadableId&#34;:&#34;Polyetherether Ketone (PEEK)&#34;,&#34;label&#34;:&#34;Polyetherether Ketone (PEEK)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyetherketoneketone--pekk-&#34;,&#34;nodeId&#34;:&#34;polyetherketoneketone--pekk-&#34;,&#34;humanReadableId&#34;:&#34;Polyetherketoneketone (PEKK)&#34;,&#34;label&#34;:&#34;Polyetherketoneketone (PEKK)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polycarbonate--pc-&#34;,&#34;nodeId&#34;:&#34;polycarbonate--pc-&#34;,&#34;humanReadableId&#34;:&#34;Polycarbonate (PC)&#34;,&#34;label&#34;:&#34;Polycarbonate (PC)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyester&#34;,&#34;nodeId&#34;:&#34;polyester&#34;,&#34;humanReadableId&#34;:&#34;Polyester&#34;,&#34;label&#34;:&#34;Polyester&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polybutylene-terephthalate--pbt-&#34;,&#34;nodeId&#34;:&#34;polybutylene-terephthalate--pbt-&#34;,&#34;humanReadableId&#34;:&#34;Polybutylene Terephthalate (PBT)&#34;,&#34;label&#34;:&#34;Polybutylene Terephthalate (PBT)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyethylene-terephthalate--pet-&#34;,&#34;nodeId&#34;:&#34;polyethylene-terephthalate--pet-&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene Terephthalate (PET)&#34;,&#34;label&#34;:&#34;Polyethylene Terephthalate (PET)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyethylene-terephthalate-glycol--petg-&#34;,&#34;nodeId&#34;:&#34;polyethylene-terephthalate-glycol--petg-&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene Terephthalate Glycol (PETG)&#34;,&#34;label&#34;:&#34;Polyethylene Terephthalate Glycol (PETG)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyglycolicide--pga-&#34;,&#34;nodeId&#34;:&#34;polyglycolicide--pga-&#34;,&#34;humanReadableId&#34;:&#34;Polyglycolicide (PGA)&#34;,&#34;label&#34;:&#34;Polyglycolicide (PGA)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polytrimethylene-terephthalate--ptt-&#34;,&#34;nodeId&#34;:&#34;polytrimethylene-terephthalate--ptt-&#34;,&#34;humanReadableId&#34;:&#34;Polytrimethylene Terephthalate (PTT)&#34;,&#34;label&#34;:&#34;Polytrimethylene Terephthalate (PTT)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polyethylene--pe-&#34;,&#34;nodeId&#34;:&#34;polyethylene--pe-&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene (PE)&#34;,&#34;label&#34;:&#34;Polyethylene (PE)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyimide--pi-&#34;,&#34;nodeId&#34;:&#34;polyimide--pi-&#34;,&#34;humanReadableId&#34;:&#34;Polyimide (PI)&#34;,&#34;label&#34;:&#34;Polyimide (PI)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyamidimide--pai-&#34;,&#34;nodeId&#34;:&#34;polyamidimide--pai-&#34;,&#34;humanReadableId&#34;:&#34;Polyamidimide (PAI)&#34;,&#34;label&#34;:&#34;Polyamidimide (PAI)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polybenzimidazole--pbi-&#34;,&#34;nodeId&#34;:&#34;polybenzimidazole--pbi-&#34;,&#34;humanReadableId&#34;:&#34;Polybenzimidazole (PBI)&#34;,&#34;label&#34;:&#34;Polybenzimidazole (PBI)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyetherimide--pei-&#34;,&#34;nodeId&#34;:&#34;polyetherimide--pei-&#34;,&#34;humanReadableId&#34;:&#34;Polyetherimide (PEI)&#34;,&#34;label&#34;:&#34;Polyetherimide (PEI)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polyketone--pk-&#34;,&#34;nodeId&#34;:&#34;polyketone--pk-&#34;,&#34;humanReadableId&#34;:&#34;Polyketone (PK)&#34;,&#34;label&#34;:&#34;Polyketone (PK)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polylactic-acid--pla-&#34;,&#34;nodeId&#34;:&#34;polylactic-acid--pla-&#34;,&#34;humanReadableId&#34;:&#34;Polylactic Acid (PLA)&#34;,&#34;label&#34;:&#34;Polylactic Acid (PLA)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polymer-blend&#34;,&#34;nodeId&#34;:&#34;polymer-blend&#34;,&#34;humanReadableId&#34;:&#34;Polymer Blend&#34;,&#34;label&#34;:&#34;Polymer Blend&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyolefin--po-&#34;,&#34;nodeId&#34;:&#34;polyolefin--po-&#34;,&#34;humanReadableId&#34;:&#34;Polyolefin (PO)&#34;,&#34;label&#34;:&#34;Polyolefin (PO)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polybutene--pb-&#34;,&#34;nodeId&#34;:&#34;polybutene--pb-&#34;,&#34;humanReadableId&#34;:&#34;Polybutene (PB)&#34;,&#34;label&#34;:&#34;Polybutene (PB)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyethylene--pe-&#34;,&#34;nodeId&#34;:&#34;polyethylene--pe--&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene (PE)&#34;,&#34;label&#34;:&#34;Polyethylene (PE)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;high-density-polyethylene--pe-hd-&#34;,&#34;nodeId&#34;:&#34;high-density-polyethylene--pe-hd-&#34;,&#34;humanReadableId&#34;:&#34;High Density Polyethylene (PE-HD)&#34;,&#34;label&#34;:&#34;High Density Polyethylene (PE-HD)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;high-molecular-weight-polyethylene--pe-hmw-&#34;,&#34;nodeId&#34;:&#34;high-molecular-weight-polyethylene--pe-hmw-&#34;,&#34;humanReadableId&#34;:&#34;High Molecular Weight Polyethylene (PE-HMW)&#34;,&#34;label&#34;:&#34;High Molecular Weight Polyethylene (PE-HMW)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;linear-low-density-polyethylene--pe-lld-&#34;,&#34;nodeId&#34;:&#34;linear-low-density-polyethylene--pe-lld-&#34;,&#34;humanReadableId&#34;:&#34;Linear Low Density Polyethylene (PE-LLD)&#34;,&#34;label&#34;:&#34;Linear Low Density Polyethylene (PE-LLD)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;low-density-polyethylene--pe-ld-&#34;,&#34;nodeId&#34;:&#34;low-density-polyethylene--pe-ld-&#34;,&#34;humanReadableId&#34;:&#34;Low Density Polyethylene (PE-LD)&#34;,&#34;label&#34;:&#34;Low Density Polyethylene (PE-LD)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;medium-density-polyethylene--pe-md-&#34;,&#34;nodeId&#34;:&#34;medium-density-polyethylene--pe-md-&#34;,&#34;humanReadableId&#34;:&#34;Medium Density Polyethylene (PE-MD)&#34;,&#34;label&#34;:&#34;Medium Density Polyethylene (PE-MD)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ultra-high-molecular-weight-polyethylene--pe-uhmw-&#34;,&#34;nodeId&#34;:&#34;ultra-high-molecular-weight-polyethylene--pe-uhmw-&#34;,&#34;humanReadableId&#34;:&#34;Ultra High Molecular Weight Polyethylene (PE-UHMW)&#34;,&#34;label&#34;:&#34;Ultra High Molecular Weight Polyethylene (PE-UHMW)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;very-low-density-polyethylene--pe-vld-&#34;,&#34;nodeId&#34;:&#34;very-low-density-polyethylene--pe-vld-&#34;,&#34;humanReadableId&#34;:&#34;Very Low Density Polyethylene (PE-VLD)&#34;,&#34;label&#34;:&#34;Very Low Density Polyethylene (PE-VLD)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polymethylpentene--pmp-&#34;,&#34;nodeId&#34;:&#34;polymethylpentene--pmp-&#34;,&#34;humanReadableId&#34;:&#34;Polymethylpentene (PMP)&#34;,&#34;label&#34;:&#34;Polymethylpentene (PMP)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polypropylene--pp-&#34;,&#34;nodeId&#34;:&#34;polypropylene--pp-&#34;,&#34;humanReadableId&#34;:&#34;Polypropylene (PP)&#34;,&#34;label&#34;:&#34;Polypropylene (PP)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polyoxymethylene--pom-&#34;,&#34;nodeId&#34;:&#34;polyoxymethylene--pom-&#34;,&#34;humanReadableId&#34;:&#34;Polyoxymethylene (POM)&#34;,&#34;label&#34;:&#34;Polyoxymethylene (POM)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyphenyl&#34;,&#34;nodeId&#34;:&#34;polyphenyl&#34;,&#34;humanReadableId&#34;:&#34;Polyphenyl&#34;,&#34;label&#34;:&#34;Polyphenyl&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyphenyl-ether--ppe-&#34;,&#34;nodeId&#34;:&#34;polyphenyl-ether--ppe-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenyl Ether (PPE)&#34;,&#34;label&#34;:&#34;Polyphenyl Ether (PPE)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyphenylene-oxide--ppo-&#34;,&#34;nodeId&#34;:&#34;polyphenylene-oxide--ppo-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenylene Oxide (PPO)&#34;,&#34;label&#34;:&#34;Polyphenylene Oxide (PPO)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyphenylene-sulfide--pps-&#34;,&#34;nodeId&#34;:&#34;polyphenylene-sulfide--pps-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenylene Sulfide (PPS)&#34;,&#34;label&#34;:&#34;Polyphenylene Sulfide (PPS)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polysaccharide&#34;,&#34;nodeId&#34;:&#34;polysaccharide&#34;,&#34;humanReadableId&#34;:&#34;Polysaccharide&#34;,&#34;label&#34;:&#34;Polysaccharide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polysulphones&#34;,&#34;nodeId&#34;:&#34;polysulphones&#34;,&#34;humanReadableId&#34;:&#34;Polysulphones&#34;,&#34;label&#34;:&#34;Polysulphones&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyether-sulfone--pes-&#34;,&#34;nodeId&#34;:&#34;polyether-sulfone--pes-&#34;,&#34;humanReadableId&#34;:&#34;Polyether Sulfone (PES)&#34;,&#34;label&#34;:&#34;Polyether Sulfone (PES)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyphenylsulphone--ppsu-&#34;,&#34;nodeId&#34;:&#34;polyphenylsulphone--ppsu-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenylsulphone (PPSU)&#34;,&#34;label&#34;:&#34;Polyphenylsulphone (PPSU)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polysulphone--psu-&#34;,&#34;nodeId&#34;:&#34;polysulphone--psu-&#34;,&#34;humanReadableId&#34;:&#34;Polysulphone (PSU)&#34;,&#34;label&#34;:&#34;Polysulphone (PSU)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polysulphone-general--psu-&#34;,&#34;nodeId&#34;:&#34;polysulphone-general--psu-&#34;,&#34;humanReadableId&#34;:&#34;Polysulphone General (PSU)&#34;,&#34;label&#34;:&#34;Polysulphone General (PSU)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;styrene&#34;,&#34;nodeId&#34;:&#34;styrene&#34;,&#34;humanReadableId&#34;:&#34;Styrene&#34;,&#34;label&#34;:&#34;Styrene&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;acrylonitrile-butadiene-styrene--abs-&#34;,&#34;nodeId&#34;:&#34;acrylonitrile-butadiene-styrene--abs-&#34;,&#34;humanReadableId&#34;:&#34;Acrylonitrile Butadiene Styrene (ABS)&#34;,&#34;label&#34;:&#34;Acrylonitrile Butadiene Styrene (ABS)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;acrylonitrile-styrene-acrylate--asa-&#34;,&#34;nodeId&#34;:&#34;acrylonitrile-styrene-acrylate--asa-&#34;,&#34;humanReadableId&#34;:&#34;Acrylonitrile Styrene Acrylate (ASA)&#34;,&#34;label&#34;:&#34;Acrylonitrile Styrene Acrylate (ASA)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;high-impact-polystyrene--hips-&#34;,&#34;nodeId&#34;:&#34;high-impact-polystyrene--hips-&#34;,&#34;humanReadableId&#34;:&#34;High Impact Polystyrene (HIPS)&#34;,&#34;label&#34;:&#34;High Impact Polystyrene (HIPS)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;methacrylate-butadiene-styrene--mbs-&#34;,&#34;nodeId&#34;:&#34;methacrylate-butadiene-styrene--mbs-&#34;,&#34;humanReadableId&#34;:&#34;Methacrylate Butadiene Styrene (MBS)&#34;,&#34;label&#34;:&#34;Methacrylate Butadiene Styrene (MBS)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polystyrene--ps-&#34;,&#34;nodeId&#34;:&#34;polystyrene--ps-&#34;,&#34;humanReadableId&#34;:&#34;Polystyrene (PS)&#34;,&#34;label&#34;:&#34;Polystyrene (PS)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;styrene-acrylonitrile--san-&#34;,&#34;nodeId&#34;:&#34;styrene-acrylonitrile--san-&#34;,&#34;humanReadableId&#34;:&#34;Styrene Acrylonitrile (SAN)&#34;,&#34;label&#34;:&#34;Styrene Acrylonitrile (SAN)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;vinyl&#34;,&#34;nodeId&#34;:&#34;vinyl&#34;,&#34;humanReadableId&#34;:&#34;Vinyl&#34;,&#34;label&#34;:&#34;Vinyl&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ethylene-vinyl-acetate--evac-&#34;,&#34;nodeId&#34;:&#34;ethylene-vinyl-acetate--evac-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Vinyl Acetate (EVAC)&#34;,&#34;label&#34;:&#34;Ethylene Vinyl Acetate (EVAC)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyvinyl-chloride--pvc-&#34;,&#34;nodeId&#34;:&#34;polyvinyl-chloride--pvc-&#34;,&#34;humanReadableId&#34;:&#34;Polyvinyl Chloride (PVC)&#34;,&#34;label&#34;:&#34;Polyvinyl Chloride (PVC)&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;thermosetting&#34;,&#34;nodeId&#34;:&#34;thermosetting&#34;,&#34;humanReadableId&#34;:&#34;Thermosetting&#34;,&#34;label&#34;:&#34;Thermosetting&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;amino-resin&#34;,&#34;nodeId&#34;:&#34;amino-resin&#34;,&#34;humanReadableId&#34;:&#34;Amino Resin&#34;,&#34;label&#34;:&#34;Amino Resin&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;bismaleimide--bmi-&#34;,&#34;nodeId&#34;:&#34;bismaleimide--bmi-&#34;,&#34;humanReadableId&#34;:&#34;Bismaleimide (BMI)&#34;,&#34;label&#34;:&#34;Bismaleimide (BMI)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;melamine-formaldehyde--mf-&#34;,&#34;nodeId&#34;:&#34;melamine-formaldehyde--mf-&#34;,&#34;humanReadableId&#34;:&#34;Melamine formaldehyde (MF)&#34;,&#34;label&#34;:&#34;Melamine formaldehyde (MF)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;epoxy-resin--ep-&#34;,&#34;nodeId&#34;:&#34;epoxy-resin--ep-&#34;,&#34;humanReadableId&#34;:&#34;Epoxy Resin (EP)&#34;,&#34;label&#34;:&#34;Epoxy Resin (EP)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;phenol-formaldehyde-resin--pf-&#34;,&#34;nodeId&#34;:&#34;phenol-formaldehyde-resin--pf-&#34;,&#34;humanReadableId&#34;:&#34;Phenol Formaldehyde Resin (PF)&#34;,&#34;label&#34;:&#34;Phenol Formaldehyde Resin (PF)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;phthalonitrile--pn-&#34;,&#34;nodeId&#34;:&#34;phthalonitrile--pn-&#34;,&#34;humanReadableId&#34;:&#34;Phthalonitrile (PN)&#34;,&#34;label&#34;:&#34;Phthalonitrile (PN)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyester-resin--up-&#34;,&#34;nodeId&#34;:&#34;polyester-resin--up-&#34;,&#34;humanReadableId&#34;:&#34;Polyester Resin (UP)&#34;,&#34;label&#34;:&#34;Polyester Resin (UP)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;vinyl-ester-resin--ve-&#34;,&#34;nodeId&#34;:&#34;vinyl-ester-resin--ve-&#34;,&#34;humanReadableId&#34;:&#34;Vinyl Ester Resin (VE)&#34;,&#34;label&#34;:&#34;Vinyl Ester Resin (VE)&#34;,&#34;disabled&#34;:true}]}]}],&#34;propertySections&#34;:[],&#34;suppliers&#34;:[{&#34;id&#34;:&#34;dest&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;materialsCount&#34;:93},{&#34;id&#34;:&#34;ugit&#34;,&#34;label&#34;:&#34;Ugitech&#34;,&#34;materialsCount&#34;:50},{&#34;id&#34;:&#34;sver&#34;,&#34;label&#34;:&#34;Sverdrup Steel AS&#34;,&#34;materialsCount&#34;:20},{&#34;id&#34;:&#34;salo&#34;,&#34;label&#34;:&#34;Salomon&#39;s Metalen&#34;,&#34;materialsCount&#34;:16},{&#34;id&#34;:&#34;hemp&#34;,&#34;label&#34;:&#34;Hempel Special Metals&#34;,&#34;materialsCount&#34;:4},{&#34;id&#34;:&#34;vdmm&#34;,&#34;label&#34;:&#34;VDM Metals&#34;,&#34;materialsCount&#34;:1},{&#34;id&#34;:&#34;song&#34;,&#34;label&#34;:&#34;Dongguan songshun mould steel Co., Ltd.&#34;,&#34;materialsCount&#34;:13},{&#34;id&#34;:&#34;ambi&#34;,&#34;label&#34;:&#34;Ambica Steels Limited&#34;,&#34;materialsCount&#34;:10}],&#34;supplierMaterialsOnly&#34;:false,&#34;polymerFilter&#34;:{&#34;disabled&#34;:true},&#34;tags&#34;:[{&#34;id&#34;:&#34;form&#34;,&#34;value&#34;:&#34;bar&#34;,&#34;label&#34;:&#34;Bar&#34;}],&#34;specification&#34;:{&#34;queryParams&#34;:&#34;categories=steel u0026tags=form:bar&#34;,&#34;clauses&#34;:[{&#34;type&#34;:&#34;tags&#34;,&#34;id&#34;:&#34;form&#34;,&#34;value&#34;:&#34;bar&#34;,&#34;label&#34;:&#34;Bar&#34;}]},&#34;context&#34;:{&#34;unitsSystem&#34;:&#34;metric&#34;,&#34;categories&#34;:[{&#34;id&#34;:&#34;biological-material&#34;,&#34;nodeId&#34;:&#34;biological-material&#34;,&#34;humanReadableId&#34;:&#34;Biological Material&#34;,&#34;label&#34;:&#34;Biological Material&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;wood&#34;,&#34;nodeId&#34;:&#34;wood&#34;,&#34;humanReadableId&#34;:&#34;Wood&#34;,&#34;label&#34;:&#34;Wood&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;ceramic&#34;,&#34;nodeId&#34;:&#34;ceramic&#34;,&#34;humanReadableId&#34;:&#34;Ceramic&#34;,&#34;label&#34;:&#34;Ceramic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;carbon&#34;,&#34;nodeId&#34;:&#34;carbon&#34;,&#34;humanReadableId&#34;:&#34;Carbon&#34;,&#34;label&#34;:&#34;Carbon&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;carbon-nanotube&#34;,&#34;nodeId&#34;:&#34;carbon-nanotube&#34;,&#34;humanReadableId&#34;:&#34;Carbon Nanotube&#34;,&#34;label&#34;:&#34;Carbon Nanotube&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;diamond&#34;,&#34;nodeId&#34;:&#34;diamond&#34;,&#34;humanReadableId&#34;:&#34;Diamond&#34;,&#34;label&#34;:&#34;Diamond&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;natural-diamond&#34;,&#34;nodeId&#34;:&#34;natural-diamond&#34;,&#34;humanReadableId&#34;:&#34;Natural Diamond&#34;,&#34;label&#34;:&#34;Natural Diamond&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;synthetic-diamond&#34;,&#34;nodeId&#34;:&#34;synthetic-diamond&#34;,&#34;humanReadableId&#34;:&#34;Synthetic Diamond&#34;,&#34;label&#34;:&#34;Synthetic Diamond&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;graphene&#34;,&#34;nodeId&#34;:&#34;graphene&#34;,&#34;humanReadableId&#34;:&#34;Graphene&#34;,&#34;label&#34;:&#34;Graphene&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;graphite&#34;,&#34;nodeId&#34;:&#34;graphite&#34;,&#34;humanReadableId&#34;:&#34;Graphite&#34;,&#34;label&#34;:&#34;Graphite&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;engineering-ceramic&#34;,&#34;nodeId&#34;:&#34;engineering-ceramic&#34;,&#34;humanReadableId&#34;:&#34;Engineering Ceramic&#34;,&#34;label&#34;:&#34;Engineering Ceramic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;non-oxide-based&#34;,&#34;nodeId&#34;:&#34;non-oxide-based&#34;,&#34;humanReadableId&#34;:&#34;Non Oxide Based&#34;,&#34;label&#34;:&#34;Non Oxide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;boride-based&#34;,&#34;nodeId&#34;:&#34;boride-based&#34;,&#34;humanReadableId&#34;:&#34;Boride Based&#34;,&#34;label&#34;:&#34;Boride Based&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;carbide-based&#34;,&#34;nodeId&#34;:&#34;carbide-based&#34;,&#34;humanReadableId&#34;:&#34;Carbide Based&#34;,&#34;label&#34;:&#34;Carbide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;boron-carbide&#34;,&#34;nodeId&#34;:&#34;boron-carbide&#34;,&#34;humanReadableId&#34;:&#34;Boron Carbide&#34;,&#34;label&#34;:&#34;Boron Carbide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicon-carbide&#34;,&#34;nodeId&#34;:&#34;silicon-carbide&#34;,&#34;humanReadableId&#34;:&#34;Silicon Carbide&#34;,&#34;label&#34;:&#34;Silicon Carbide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tantalum-carbide&#34;,&#34;nodeId&#34;:&#34;tantalum-carbide&#34;,&#34;humanReadableId&#34;:&#34;Tantalum Carbide&#34;,&#34;label&#34;:&#34;Tantalum Carbide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;titanium-carbide&#34;,&#34;nodeId&#34;:&#34;titanium-carbide&#34;,&#34;humanReadableId&#34;:&#34;Titanium Carbide&#34;,&#34;label&#34;:&#34;Titanium Carbide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tungsten-carbide&#34;,&#34;nodeId&#34;:&#34;tungsten-carbide&#34;,&#34;humanReadableId&#34;:&#34;Tungsten Carbide&#34;,&#34;label&#34;:&#34;Tungsten Carbide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zirconium-carbide&#34;,&#34;nodeId&#34;:&#34;zirconium-carbide&#34;,&#34;humanReadableId&#34;:&#34;Zirconium Carbide&#34;,&#34;label&#34;:&#34;Zirconium Carbide&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;nitride-based&#34;,&#34;nodeId&#34;:&#34;nitride-based&#34;,&#34;humanReadableId&#34;:&#34;Nitride Based&#34;,&#34;label&#34;:&#34;Nitride Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-nitirde&#34;,&#34;nodeId&#34;:&#34;aluminium-nitirde&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Nitirde&#34;,&#34;label&#34;:&#34;Aluminium Nitirde&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;boron-nitride&#34;,&#34;nodeId&#34;:&#34;boron-nitride&#34;,&#34;humanReadableId&#34;:&#34;Boron Nitride&#34;,&#34;label&#34;:&#34;Boron Nitride&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicon-nitride&#34;,&#34;nodeId&#34;:&#34;silicon-nitride&#34;,&#34;humanReadableId&#34;:&#34;Silicon Nitride&#34;,&#34;label&#34;:&#34;Silicon Nitride&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;titanium-nitride&#34;,&#34;nodeId&#34;:&#34;titanium-nitride&#34;,&#34;humanReadableId&#34;:&#34;Titanium Nitride&#34;,&#34;label&#34;:&#34;Titanium Nitride&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;silicate-based&#34;,&#34;nodeId&#34;:&#34;silicate-based&#34;,&#34;humanReadableId&#34;:&#34;Silicate Based&#34;,&#34;label&#34;:&#34;Silicate Based&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;sulfide-based&#34;,&#34;nodeId&#34;:&#34;sulfide-based&#34;,&#34;humanReadableId&#34;:&#34;Sulfide Based&#34;,&#34;label&#34;:&#34;Sulfide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;bismuth-sulfide&#34;,&#34;nodeId&#34;:&#34;bismuth-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Bismuth Sulfide&#34;,&#34;label&#34;:&#34;Bismuth Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copper-sulfide&#34;,&#34;nodeId&#34;:&#34;copper-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Copper Sulfide&#34;,&#34;label&#34;:&#34;Copper Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;iron-sulfide&#34;,&#34;nodeId&#34;:&#34;iron-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Iron Sulfide&#34;,&#34;label&#34;:&#34;Iron Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;manganese-sulfide&#34;,&#34;nodeId&#34;:&#34;manganese-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Manganese Sulfide&#34;,&#34;label&#34;:&#34;Manganese Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;molybdenum-disulfide&#34;,&#34;nodeId&#34;:&#34;molybdenum-disulfide&#34;,&#34;humanReadableId&#34;:&#34;Molybdenum Disulfide&#34;,&#34;label&#34;:&#34;Molybdenum Disulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;multiphase-metal-sulfide&#34;,&#34;nodeId&#34;:&#34;multiphase-metal-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Multiphase Metal Sulfide&#34;,&#34;label&#34;:&#34;Multiphase Metal Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tin-sulfide&#34;,&#34;nodeId&#34;:&#34;tin-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Tin Sulfide&#34;,&#34;label&#34;:&#34;Tin Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tungsten-disulfide&#34;,&#34;nodeId&#34;:&#34;tungsten-disulfide&#34;,&#34;humanReadableId&#34;:&#34;Tungsten Disulfide&#34;,&#34;label&#34;:&#34;Tungsten Disulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zinc-sulfide&#34;,&#34;nodeId&#34;:&#34;zinc-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Zinc Sulfide&#34;,&#34;label&#34;:&#34;Zinc Sulfide&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;oxide-based&#34;,&#34;nodeId&#34;:&#34;oxide-based&#34;,&#34;humanReadableId&#34;:&#34;Oxide Based&#34;,&#34;label&#34;:&#34;Oxide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;advanced-ceramic-oxides&#34;,&#34;nodeId&#34;:&#34;advanced-ceramic-oxides&#34;,&#34;humanReadableId&#34;:&#34;Advanced Ceramic Oxides&#34;,&#34;label&#34;:&#34;Advanced Ceramic Oxides&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;aluminium-oxide&#34;,&#34;nodeId&#34;:&#34;aluminium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Oxide&#34;,&#34;label&#34;:&#34;Aluminium Oxide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;beryllium-oxide&#34;,&#34;nodeId&#34;:&#34;beryllium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Beryllium Oxide&#34;,&#34;label&#34;:&#34;Beryllium Oxide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ferrite&#34;,&#34;nodeId&#34;:&#34;ferrite&#34;,&#34;humanReadableId&#34;:&#34;Ferrite&#34;,&#34;label&#34;:&#34;Ferrite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicon-oxide&#34;,&#34;nodeId&#34;:&#34;silicon-oxide&#34;,&#34;humanReadableId&#34;:&#34;Silicon Oxide&#34;,&#34;label&#34;:&#34;Silicon Oxide&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-silicate&#34;,&#34;nodeId&#34;:&#34;aluminium-silicate&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Silicate&#34;,&#34;label&#34;:&#34;Aluminium Silicate&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;magnesium-silicate&#34;,&#34;nodeId&#34;:&#34;magnesium-silicate&#34;,&#34;humanReadableId&#34;:&#34;Magnesium Silicate&#34;,&#34;label&#34;:&#34;Magnesium Silicate&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zirconium-silicate&#34;,&#34;nodeId&#34;:&#34;zirconium-silicate&#34;,&#34;humanReadableId&#34;:&#34;Zirconium Silicate&#34;,&#34;label&#34;:&#34;Zirconium Silicate&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;titanium-oxide&#34;,&#34;nodeId&#34;:&#34;titanium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Titanium Oxide&#34;,&#34;label&#34;:&#34;Titanium Oxide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zirconium-oxide&#34;,&#34;nodeId&#34;:&#34;zirconium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Zirconium Oxide&#34;,&#34;label&#34;:&#34;Zirconium Oxide&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;oxide-based-ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;oxide-based-ceramic-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;multi-oxide-ceramics&#34;,&#34;nodeId&#34;:&#34;multi-oxide-ceramics&#34;,&#34;humanReadableId&#34;:&#34;Multi-Oxide Ceramics&#34;,&#34;label&#34;:&#34;Multi-Oxide Ceramics&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicon-oxide&#34;,&#34;nodeId&#34;:&#34;silicon-oxide-&#34;,&#34;humanReadableId&#34;:&#34;Silicon Oxide&#34;,&#34;label&#34;:&#34;Silicon Oxide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ytterbium-oxide&#34;,&#34;nodeId&#34;:&#34;ytterbium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Ytterbium Oxide&#34;,&#34;label&#34;:&#34;Ytterbium Oxide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;yttrium-oxide&#34;,&#34;nodeId&#34;:&#34;yttrium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Yttrium Oxide&#34;,&#34;label&#34;:&#34;Yttrium Oxide&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;natural-ceramic&#34;,&#34;nodeId&#34;:&#34;natural-ceramic&#34;,&#34;humanReadableId&#34;:&#34;Natural Ceramic&#34;,&#34;label&#34;:&#34;Natural Ceramic&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;composite&#34;,&#34;nodeId&#34;:&#34;composite&#34;,&#34;humanReadableId&#34;:&#34;Composite&#34;,&#34;label&#34;:&#34;Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;ceramic-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;carbide-based-ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;carbide-based-ceramic-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Carbide Based Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Carbide Based Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;oxide-based-ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;oxide-based-ceramic-matrix-composite-&#34;,&#34;humanReadableId&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;metal-matrix-composite&#34;,&#34;nodeId&#34;:&#34;metal-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Metal Matrix Composite&#34;,&#34;label&#34;:&#34;Metal Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-matrix-composite&#34;,&#34;nodeId&#34;:&#34;aluminium-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Matrix Composite&#34;,&#34;label&#34;:&#34;Aluminium Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;beryllium-matrix-composite&#34;,&#34;nodeId&#34;:&#34;beryllium-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Beryllium Matrix Composite&#34;,&#34;label&#34;:&#34;Beryllium Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-matrix-composite&#34;,&#34;nodeId&#34;:&#34;cobalt-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Matrix Composite&#34;,&#34;label&#34;:&#34;Cobalt Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-and-nickel-matrix-composite&#34;,&#34;nodeId&#34;:&#34;cobalt-and-nickel-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Cobalt and Nickel Matrix Composite&#34;,&#34;label&#34;:&#34;Cobalt and Nickel Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;iron-matrix-composite&#34;,&#34;nodeId&#34;:&#34;iron-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Iron Matrix Composite&#34;,&#34;label&#34;:&#34;Iron Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-matrix-composite&#34;,&#34;nodeId&#34;:&#34;nickel-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Nickel Matrix Composite&#34;,&#34;label&#34;:&#34;Nickel Matrix Composite&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polymer-matrix-composite&#34;,&#34;nodeId&#34;:&#34;polymer-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Polymer Matrix Composite&#34;,&#34;label&#34;:&#34;Polymer Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;thermoset-polymer-matrix-composite&#34;,&#34;nodeId&#34;:&#34;thermoset-polymer-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Thermoset Polymer Matrix Composite&#34;,&#34;label&#34;:&#34;Thermoset Polymer Matrix Composite&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;glass&#34;,&#34;nodeId&#34;:&#34;glass&#34;,&#34;humanReadableId&#34;:&#34;Glass&#34;,&#34;label&#34;:&#34;Glass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;glass-ceramic&#34;,&#34;nodeId&#34;:&#34;glass-ceramic&#34;,&#34;humanReadableId&#34;:&#34;Glass Ceramic&#34;,&#34;label&#34;:&#34;Glass Ceramic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;las-glass-ceramic&#34;,&#34;nodeId&#34;:&#34;las-glass-ceramic&#34;,&#34;humanReadableId&#34;:&#34;LAS Glass Ceramic&#34;,&#34;label&#34;:&#34;LAS Glass Ceramic&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;lead-glass&#34;,&#34;nodeId&#34;:&#34;lead-glass&#34;,&#34;humanReadableId&#34;:&#34;Lead Glass&#34;,&#34;label&#34;:&#34;Lead Glass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicate-glass&#34;,&#34;nodeId&#34;:&#34;silicate-glass&#34;,&#34;humanReadableId&#34;:&#34;Silicate Glass&#34;,&#34;label&#34;:&#34;Silicate Glass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminosilicate&#34;,&#34;nodeId&#34;:&#34;aluminosilicate&#34;,&#34;humanReadableId&#34;:&#34;Aluminosilicate&#34;,&#34;label&#34;:&#34;Aluminosilicate&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;borosilicate&#34;,&#34;nodeId&#34;:&#34;borosilicate&#34;,&#34;humanReadableId&#34;:&#34;Borosilicate&#34;,&#34;label&#34;:&#34;Borosilicate&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;fused-quartz&#34;,&#34;nodeId&#34;:&#34;fused-quartz&#34;,&#34;humanReadableId&#34;:&#34;Fused Quartz&#34;,&#34;label&#34;:&#34;Fused Quartz&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;soda-lime-silicate&#34;,&#34;nodeId&#34;:&#34;soda-lime-silicate&#34;,&#34;humanReadableId&#34;:&#34;Soda Lime Silicate&#34;,&#34;label&#34;:&#34;Soda Lime Silicate&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;metal&#34;,&#34;nodeId&#34;:&#34;metal&#34;,&#34;humanReadableId&#34;:&#34;Metal&#34;,&#34;label&#34;:&#34;Metal&#34;,&#34;partiallyChecked&#34;:true,&#34;materialsCount&#34;:2214,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium&#34;,&#34;nodeId&#34;:&#34;aluminium&#34;,&#34;humanReadableId&#34;:&#34;Aluminium&#34;,&#34;label&#34;:&#34;Aluminium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-master-alloy&#34;,&#34;nodeId&#34;:&#34;aluminium-master-alloy&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Master Alloy&#34;,&#34;label&#34;:&#34;Aluminium Master Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-aluminium&#34;,&#34;nodeId&#34;:&#34;cast-aluminium&#34;,&#34;humanReadableId&#34;:&#34;Cast Aluminium&#34;,&#34;label&#34;:&#34;Cast Aluminium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;1xx-x&#34;,&#34;nodeId&#34;:&#34;1xx-x&#34;,&#34;humanReadableId&#34;:&#34;1xx.x&#34;,&#34;label&#34;:&#34;1xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;2xx-x&#34;,&#34;nodeId&#34;:&#34;2xx-x&#34;,&#34;humanReadableId&#34;:&#34;2xx.x&#34;,&#34;label&#34;:&#34;2xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;3xx-x&#34;,&#34;nodeId&#34;:&#34;3xx-x&#34;,&#34;humanReadableId&#34;:&#34;3xx.x&#34;,&#34;label&#34;:&#34;3xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;4xx-x&#34;,&#34;nodeId&#34;:&#34;4xx-x&#34;,&#34;humanReadableId&#34;:&#34;4xx.x&#34;,&#34;label&#34;:&#34;4xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;5xx-x&#34;,&#34;nodeId&#34;:&#34;5xx-x&#34;,&#34;humanReadableId&#34;:&#34;5xx.x&#34;,&#34;label&#34;:&#34;5xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;7xx-x&#34;,&#34;nodeId&#34;:&#34;7xx-x&#34;,&#34;humanReadableId&#34;:&#34;7xx.x&#34;,&#34;label&#34;:&#34;7xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;8xx-x&#34;,&#34;nodeId&#34;:&#34;8xx-x&#34;,&#34;humanReadableId&#34;:&#34;8xx.x&#34;,&#34;label&#34;:&#34;8xx.x&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;wrought-aluminium&#34;,&#34;nodeId&#34;:&#34;wrought-aluminium&#34;,&#34;humanReadableId&#34;:&#34;Wrought Aluminium&#34;,&#34;label&#34;:&#34;Wrought Aluminium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;1000-series&#34;,&#34;nodeId&#34;:&#34;1000-series&#34;,&#34;humanReadableId&#34;:&#34;1000 Series&#34;,&#34;label&#34;:&#34;1000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;2000-series&#34;,&#34;nodeId&#34;:&#34;2000-series&#34;,&#34;humanReadableId&#34;:&#34;2000 Series&#34;,&#34;label&#34;:&#34;2000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;3000-series&#34;,&#34;nodeId&#34;:&#34;3000-series&#34;,&#34;humanReadableId&#34;:&#34;3000 Series&#34;,&#34;label&#34;:&#34;3000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;4000-series&#34;,&#34;nodeId&#34;:&#34;4000-series&#34;,&#34;humanReadableId&#34;:&#34;4000 Series&#34;,&#34;label&#34;:&#34;4000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;5000-series&#34;,&#34;nodeId&#34;:&#34;5000-series&#34;,&#34;humanReadableId&#34;:&#34;5000 Series&#34;,&#34;label&#34;:&#34;5000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;6000-series&#34;,&#34;nodeId&#34;:&#34;6000-series&#34;,&#34;humanReadableId&#34;:&#34;6000 Series&#34;,&#34;label&#34;:&#34;6000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;7000-series&#34;,&#34;nodeId&#34;:&#34;7000-series&#34;,&#34;humanReadableId&#34;:&#34;7000 Series&#34;,&#34;label&#34;:&#34;7000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;8000-series&#34;,&#34;nodeId&#34;:&#34;8000-series&#34;,&#34;humanReadableId&#34;:&#34;8000 Series&#34;,&#34;label&#34;:&#34;8000 Series&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;cladbimetal&#34;,&#34;nodeId&#34;:&#34;cladbimetal&#34;,&#34;humanReadableId&#34;:&#34;Clad / Bimetal&#34;,&#34;label&#34;:&#34;Clad / Bimetal&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt&#34;,&#34;nodeId&#34;:&#34;cobalt&#34;,&#34;humanReadableId&#34;:&#34;Cobalt&#34;,&#34;label&#34;:&#34;Cobalt&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cobalt-chromium&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium&#34;,&#34;label&#34;:&#34;Cobalt Chromium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-chromium-molybdenum&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium-molybdenum&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium Molybdenum&#34;,&#34;label&#34;:&#34;Cobalt Chromium Molybdenum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-chromium-nickel-tungsten&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium-nickel-tungsten&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium Nickel Tungsten&#34;,&#34;label&#34;:&#34;Cobalt Chromium Nickel Tungsten&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-chromium-tungsten&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium-tungsten&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium Tungsten&#34;,&#34;label&#34;:&#34;Cobalt Chromium Tungsten&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-nickel-chromium-molybdenum&#34;,&#34;nodeId&#34;:&#34;cobalt-nickel-chromium-molybdenum&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Nickel Chromium Molybdenum&#34;,&#34;label&#34;:&#34;Cobalt Nickel Chromium Molybdenum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-superalloy&#34;,&#34;nodeId&#34;:&#34;cobalt-superalloy&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Superalloy&#34;,&#34;label&#34;:&#34;Cobalt Superalloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;unclassified-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;unclassified-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Cobalt Alloy&#34;,&#34;label&#34;:&#34;Unclassified Cobalt Alloy&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;copper&#34;,&#34;nodeId&#34;:&#34;copper&#34;,&#34;humanReadableId&#34;:&#34;Copper&#34;,&#34;label&#34;:&#34;Copper&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper&#34;,&#34;nodeId&#34;:&#34;cast-copper&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper&#34;,&#34;label&#34;:&#34;Cast Copper&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper-brass&#34;,&#34;nodeId&#34;:&#34;cast-copper-brass&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Brass&#34;,&#34;label&#34;:&#34;Cast Copper Brass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper-brass-yellow-brass&#34;,&#34;nodeId&#34;:&#34;cast-copper-brass-yellow-brass&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Brass Yellow Brass&#34;,&#34;label&#34;:&#34;Cast Copper Brass Yellow Brass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-copper-silicon-brass&#34;,&#34;nodeId&#34;:&#34;cast-copper-silicon-brass&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Silicon Brass&#34;,&#34;label&#34;:&#34;Cast Copper Silicon Brass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copper-bismuth-alloy&#34;,&#34;nodeId&#34;:&#34;copper-bismuth-alloy&#34;,&#34;humanReadableId&#34;:&#34;Copper Bismuth Alloy&#34;,&#34;label&#34;:&#34;Copper Bismuth Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;red-brass&#34;,&#34;nodeId&#34;:&#34;red-brass&#34;,&#34;humanReadableId&#34;:&#34;Red Brass&#34;,&#34;label&#34;:&#34;Red Brass&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;cast-copper-bronze&#34;,&#34;nodeId&#34;:&#34;cast-copper-bronze&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Bronze&#34;,&#34;label&#34;:&#34;Cast Copper Bronze&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper-bronze-aluminium-bronze&#34;,&#34;nodeId&#34;:&#34;cast-copper-bronze-aluminium-bronze&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Bronze Aluminium Bronze&#34;,&#34;label&#34;:&#34;Cast Copper Bronze Aluminium Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;leaded-tin-bronze&#34;,&#34;nodeId&#34;:&#34;leaded-tin-bronze&#34;,&#34;humanReadableId&#34;:&#34;Leaded Tin Bronze&#34;,&#34;label&#34;:&#34;Leaded Tin Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-tin-bronze&#34;,&#34;nodeId&#34;:&#34;nickel-tin-bronze&#34;,&#34;humanReadableId&#34;:&#34;Nickel Tin Bronze&#34;,&#34;label&#34;:&#34;Nickel Tin Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tin-bronze&#34;,&#34;nodeId&#34;:&#34;tin-bronze&#34;,&#34;humanReadableId&#34;:&#34;Tin Bronze&#34;,&#34;label&#34;:&#34;Tin Bronze&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;cast-copper-high-copper-alloy&#34;,&#34;nodeId&#34;:&#34;cast-copper-high-copper-alloy&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper High Copper Alloy&#34;,&#34;label&#34;:&#34;Cast Copper High Copper Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-copper-nickel-grade&#34;,&#34;nodeId&#34;:&#34;cast-copper-nickel-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Nickel Grade&#34;,&#34;label&#34;:&#34;Cast Copper Nickel Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-copper-nickel-silver-grade&#34;,&#34;nodeId&#34;:&#34;cast-copper-nickel-silver-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Nickel Silver Grade&#34;,&#34;label&#34;:&#34;Cast Copper Nickel Silver Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-copper-purelow-alloyed-copper&#34;,&#34;nodeId&#34;:&#34;cast-copper-purelow-alloyed-copper&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Pure / Low Alloyed Copper&#34;,&#34;label&#34;:&#34;Cast Copper Pure / Low Alloyed Copper&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copper-lead-alloy&#34;,&#34;nodeId&#34;:&#34;copper-lead-alloy&#34;,&#34;humanReadableId&#34;:&#34;Copper-Lead Alloy&#34;,&#34;label&#34;:&#34;Copper-Lead Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;special-alloy&#34;,&#34;nodeId&#34;:&#34;special-alloy&#34;,&#34;humanReadableId&#34;:&#34;Special Alloy&#34;,&#34;label&#34;:&#34;Special Alloy&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;welding&#34;,&#34;nodeId&#34;:&#34;welding&#34;,&#34;humanReadableId&#34;:&#34;Welding&#34;,&#34;label&#34;:&#34;Welding&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper&#34;,&#34;nodeId&#34;:&#34;wrought-copper&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper&#34;,&#34;label&#34;:&#34;Wrought Copper&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;unclassified-wrought-copper&#34;,&#34;nodeId&#34;:&#34;unclassified-wrought-copper&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Wrought Copper&#34;,&#34;label&#34;:&#34;Unclassified Wrought Copper&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-brass&#34;,&#34;nodeId&#34;:&#34;wrought-copper-brass&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Brass&#34;,&#34;label&#34;:&#34;Wrought Copper Brass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;leaded-brass&#34;,&#34;nodeId&#34;:&#34;leaded-brass&#34;,&#34;humanReadableId&#34;:&#34;Leaded Brass&#34;,&#34;label&#34;:&#34;Leaded Brass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;other-copper-zinc-alloy&#34;,&#34;nodeId&#34;:&#34;other-copper-zinc-alloy&#34;,&#34;humanReadableId&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;label&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tin-brass&#34;,&#34;nodeId&#34;:&#34;tin-brass&#34;,&#34;humanReadableId&#34;:&#34;Tin Brass&#34;,&#34;label&#34;:&#34;Tin Brass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-brass-yellow-brass&#34;,&#34;nodeId&#34;:&#34;wrought-copper-brass-yellow-brass&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Brass Yellow Brass&#34;,&#34;label&#34;:&#34;Wrought Copper Brass Yellow Brass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;yellow-wrought-brass&#34;,&#34;nodeId&#34;:&#34;yellow-wrought-brass&#34;,&#34;humanReadableId&#34;:&#34;Yellow Wrought Brass&#34;,&#34;label&#34;:&#34;Yellow Wrought Brass&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;wrought-copper-bronze&#34;,&#34;nodeId&#34;:&#34;wrought-copper-bronze&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Bronze&#34;,&#34;label&#34;:&#34;Wrought Copper Bronze&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;copper-silver-zinc-alloy&#34;,&#34;nodeId&#34;:&#34;copper-silver-zinc-alloy&#34;,&#34;humanReadableId&#34;:&#34;Copper Silver Zinc Alloy&#34;,&#34;label&#34;:&#34;Copper Silver Zinc Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;leaded-phosphor-bronze&#34;,&#34;nodeId&#34;:&#34;leaded-phosphor-bronze&#34;,&#34;humanReadableId&#34;:&#34;Leaded Phosphor Bronze&#34;,&#34;label&#34;:&#34;Leaded Phosphor Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;other-copper-zinc-alloy&#34;,&#34;nodeId&#34;:&#34;other-copper-zinc-alloy-&#34;,&#34;humanReadableId&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;label&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;phosphor-bronze&#34;,&#34;nodeId&#34;:&#34;phosphor-bronze&#34;,&#34;humanReadableId&#34;:&#34;Phosphor Bronze&#34;,&#34;label&#34;:&#34;Phosphor Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-bronze-aluminium-bronze&#34;,&#34;nodeId&#34;:&#34;wrought-copper-bronze-aluminium-bronze&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Bronze Aluminium Bronze&#34;,&#34;label&#34;:&#34;Wrought Copper Bronze Aluminium Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-bronze-silicon-bronze&#34;,&#34;nodeId&#34;:&#34;wrought-copper-bronze-silicon-bronze&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Bronze Silicon Bronze&#34;,&#34;label&#34;:&#34;Wrought Copper Bronze Silicon Bronze&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;wrought-copper-high-copper-alloy&#34;,&#34;nodeId&#34;:&#34;wrought-copper-high-copper-alloy&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper High Copper Alloy&#34;,&#34;label&#34;:&#34;Wrought Copper High Copper Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-nickel-grade&#34;,&#34;nodeId&#34;:&#34;wrought-copper-nickel-grade&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Nickel Grade&#34;,&#34;label&#34;:&#34;Wrought Copper Nickel Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-nickel-silver-grade&#34;,&#34;nodeId&#34;:&#34;wrought-copper-nickel-silver-grade&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Nickel Silver Grade&#34;,&#34;label&#34;:&#34;Wrought Copper Nickel Silver Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-purelow-alloyed-copper&#34;,&#34;nodeId&#34;:&#34;wrought-copper-purelow-alloyed-copper&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Pure / Low Alloyed Copper&#34;,&#34;label&#34;:&#34;Wrought Copper Pure / Low Alloyed Copper&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;iron&#34;,&#34;nodeId&#34;:&#34;iron&#34;,&#34;humanReadableId&#34;:&#34;Iron&#34;,&#34;label&#34;:&#34;Iron&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;alloy-iron&#34;,&#34;nodeId&#34;:&#34;alloy-iron&#34;,&#34;humanReadableId&#34;:&#34;Alloy Iron&#34;,&#34;label&#34;:&#34;Alloy Iron&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-iron&#34;,&#34;nodeId&#34;:&#34;cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Cast Iron&#34;,&#34;label&#34;:&#34;Cast Iron&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ductile--nodular--cast-iron&#34;,&#34;nodeId&#34;:&#34;ductile--nodular--cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Ductile (Nodular) Cast Iron&#34;,&#34;label&#34;:&#34;Ductile (Nodular) Cast Iron&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;grey-cast-iron&#34;,&#34;nodeId&#34;:&#34;grey-cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Grey Cast Iron&#34;,&#34;label&#34;:&#34;Grey Cast Iron&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;malleable-cast-iron&#34;,&#34;nodeId&#34;:&#34;malleable-cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Malleable Cast Iron&#34;,&#34;label&#34;:&#34;Malleable Cast Iron&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;other-cast-iron-alloy&#34;,&#34;nodeId&#34;:&#34;other-cast-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Other Cast Iron Alloy&#34;,&#34;label&#34;:&#34;Other Cast Iron Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;white-cast-iron&#34;,&#34;nodeId&#34;:&#34;white-cast-iron&#34;,&#34;humanReadableId&#34;:&#34;White Cast Iron&#34;,&#34;label&#34;:&#34;White Cast Iron&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;ferromolybdenum&#34;,&#34;nodeId&#34;:&#34;ferromolybdenum&#34;,&#34;humanReadableId&#34;:&#34;Ferromolybdenum&#34;,&#34;label&#34;:&#34;Ferromolybdenum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ferrosilicon&#34;,&#34;nodeId&#34;:&#34;ferrosilicon&#34;,&#34;humanReadableId&#34;:&#34;Ferrosilicon&#34;,&#34;label&#34;:&#34;Ferrosilicon&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ferrovanadium&#34;,&#34;nodeId&#34;:&#34;ferrovanadium&#34;,&#34;humanReadableId&#34;:&#34;Ferrovanadium&#34;,&#34;label&#34;:&#34;Ferrovanadium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;iron-alloy&#34;,&#34;nodeId&#34;:&#34;iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Iron Alloy&#34;,&#34;label&#34;:&#34;Iron Alloy&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-nickel-cobalt-iron-alloy&#34;,&#34;nodeId&#34;:&#34;aluminium-nickel-cobalt-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Nickel Cobalt Iron Alloy&#34;,&#34;label&#34;:&#34;Aluminium Nickel Cobalt Iron Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;miscellaneous-iron-alloy&#34;,&#34;nodeId&#34;:&#34;miscellaneous-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Miscellaneous Iron Alloy&#34;,&#34;label&#34;:&#34;Miscellaneous Iron Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;soft-magnetic-iron&#34;,&#34;nodeId&#34;:&#34;soft-magnetic-iron&#34;,&#34;humanReadableId&#34;:&#34;Soft Magnetic Iron&#34;,&#34;label&#34;:&#34;Soft Magnetic Iron&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;malleable-cast-iron&#34;,&#34;nodeId&#34;:&#34;malleable-cast-iron-&#34;,&#34;humanReadableId&#34;:&#34;Malleable Cast Iron&#34;,&#34;label&#34;:&#34;Malleable Cast Iron&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;magnesium&#34;,&#34;nodeId&#34;:&#34;magnesium&#34;,&#34;humanReadableId&#34;:&#34;Magnesium&#34;,&#34;label&#34;:&#34;Magnesium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-grade&#34;,&#34;nodeId&#34;:&#34;aluminium-grade&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Grade&#34;,&#34;label&#34;:&#34;Aluminium Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-aluminium-manganese-grade&#34;,&#34;nodeId&#34;:&#34;cast-aluminium-manganese-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Aluminium Manganese Grade&#34;,&#34;label&#34;:&#34;Cast Aluminium Manganese Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-rare-earth-grade&#34;,&#34;nodeId&#34;:&#34;cast-rare-earth-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Rare Earth Grade&#34;,&#34;label&#34;:&#34;Cast Rare Earth Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-wrought-aluminium-zinc-grade&#34;,&#34;nodeId&#34;:&#34;cast-wrought-aluminium-zinc-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast/Wrought Aluminium Zinc Grade&#34;,&#34;label&#34;:&#34;Cast/Wrought Aluminium Zinc Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-wrought-unclassified-grade&#34;,&#34;nodeId&#34;:&#34;cast-wrought-unclassified-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast/Wrought Unclassified Grade&#34;,&#34;label&#34;:&#34;Cast/Wrought Unclassified Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;pure-magnesium&#34;,&#34;nodeId&#34;:&#34;pure-magnesium&#34;,&#34;humanReadableId&#34;:&#34;Pure Magnesium&#34;,&#34;label&#34;:&#34;Pure Magnesium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;rare-earth-grade&#34;,&#34;nodeId&#34;:&#34;rare-earth-grade&#34;,&#34;humanReadableId&#34;:&#34;Rare Earth Grade&#34;,&#34;label&#34;:&#34;Rare Earth Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-zinc-grade&#34;,&#34;nodeId&#34;:&#34;wrought-zinc-grade&#34;,&#34;humanReadableId&#34;:&#34;Wrought Zinc Grade&#34;,&#34;label&#34;:&#34;Wrought Zinc Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;yttrium-grade&#34;,&#34;nodeId&#34;:&#34;yttrium-grade&#34;,&#34;humanReadableId&#34;:&#34;Yttrium Grade&#34;,&#34;label&#34;:&#34;Yttrium Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zinc-grade&#34;,&#34;nodeId&#34;:&#34;zinc-grade&#34;,&#34;humanReadableId&#34;:&#34;Zinc Grade&#34;,&#34;label&#34;:&#34;Zinc Grade&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;manganese&#34;,&#34;nodeId&#34;:&#34;manganese&#34;,&#34;humanReadableId&#34;:&#34;Manganese&#34;,&#34;label&#34;:&#34;Manganese&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel&#34;,&#34;nodeId&#34;:&#34;nickel&#34;,&#34;humanReadableId&#34;:&#34;Nickel&#34;,&#34;label&#34;:&#34;Nickel&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;nickel-chromium-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-chromium-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Cobalt Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Cobalt Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-chromium-iron-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Iron Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Iron Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-chromium-molybdenum-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-molybdenum-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Molybdenum Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Molybdenum Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Cobalt Alloy&#34;,&#34;label&#34;:&#34;Nickel Cobalt Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-copper-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-copper-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Copper Alloy&#34;,&#34;label&#34;:&#34;Nickel Copper Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-iron-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Iron Alloy&#34;,&#34;label&#34;:&#34;Nickel Iron Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-molybdenum-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-molybdenum-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Molybdenum Alloy&#34;,&#34;label&#34;:&#34;Nickel Molybdenum Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-superalloy&#34;,&#34;nodeId&#34;:&#34;nickel-superalloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Superalloy&#34;,&#34;label&#34;:&#34;Nickel Superalloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-welding-filler&#34;,&#34;nodeId&#34;:&#34;nickel-welding-filler&#34;,&#34;humanReadableId&#34;:&#34;Nickel Welding Filler&#34;,&#34;label&#34;:&#34;Nickel Welding Filler&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;other-nickel-alloy&#34;,&#34;nodeId&#34;:&#34;other-nickel-alloy&#34;,&#34;humanReadableId&#34;:&#34;Other Nickel Alloy&#34;,&#34;label&#34;:&#34;Other Nickel Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;pure-low-nickel-alloy&#34;,&#34;nodeId&#34;:&#34;pure-low-nickel-alloy&#34;,&#34;humanReadableId&#34;:&#34;Pure/Low Nickel Alloy&#34;,&#34;label&#34;:&#34;Pure/Low Nickel Alloy&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;noble-metal&#34;,&#34;nodeId&#34;:&#34;noble-metal&#34;,&#34;humanReadableId&#34;:&#34;Noble Metal&#34;,&#34;label&#34;:&#34;Noble Metal&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;gold&#34;,&#34;nodeId&#34;:&#34;gold&#34;,&#34;humanReadableId&#34;:&#34;Gold&#34;,&#34;label&#34;:&#34;Gold&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;iridium&#34;,&#34;nodeId&#34;:&#34;iridium&#34;,&#34;humanReadableId&#34;:&#34;Iridium&#34;,&#34;label&#34;:&#34;Iridium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;palladium&#34;,&#34;nodeId&#34;:&#34;palladium&#34;,&#34;humanReadableId&#34;:&#34;Palladium&#34;,&#34;label&#34;:&#34;Palladium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;platinum&#34;,&#34;nodeId&#34;:&#34;platinum&#34;,&#34;humanReadableId&#34;:&#34;Platinum&#34;,&#34;label&#34;:&#34;Platinum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;rhodium&#34;,&#34;nodeId&#34;:&#34;rhodium&#34;,&#34;humanReadableId&#34;:&#34;Rhodium&#34;,&#34;label&#34;:&#34;Rhodium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silver&#34;,&#34;nodeId&#34;:&#34;silver&#34;,&#34;humanReadableId&#34;:&#34;Silver&#34;,&#34;label&#34;:&#34;Silver&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;other-metal&#34;,&#34;nodeId&#34;:&#34;other-metal&#34;,&#34;humanReadableId&#34;:&#34;Other Metal&#34;,&#34;label&#34;:&#34;Other Metal&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;beryllium&#34;,&#34;nodeId&#34;:&#34;beryllium&#34;,&#34;humanReadableId&#34;:&#34;Beryllium&#34;,&#34;label&#34;:&#34;Beryllium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cadmium&#34;,&#34;nodeId&#34;:&#34;cadmium&#34;,&#34;humanReadableId&#34;:&#34;Cadmium&#34;,&#34;label&#34;:&#34;Cadmium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;chromium&#34;,&#34;nodeId&#34;:&#34;chromium&#34;,&#34;humanReadableId&#34;:&#34;Chromium&#34;,&#34;label&#34;:&#34;Chromium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;lead&#34;,&#34;nodeId&#34;:&#34;lead&#34;,&#34;humanReadableId&#34;:&#34;Lead&#34;,&#34;label&#34;:&#34;Lead&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;lead-antimony&#34;,&#34;nodeId&#34;:&#34;lead-antimony&#34;,&#34;humanReadableId&#34;:&#34;Lead Antimony&#34;,&#34;label&#34;:&#34;Lead Antimony&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;lead-tin&#34;,&#34;nodeId&#34;:&#34;lead-tin&#34;,&#34;humanReadableId&#34;:&#34;Lead Tin&#34;,&#34;label&#34;:&#34;Lead Tin&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;pure-low-alloyed-lead&#34;,&#34;nodeId&#34;:&#34;pure-low-alloyed-lead&#34;,&#34;humanReadableId&#34;:&#34;Pure/Low Alloyed Lead&#34;,&#34;label&#34;:&#34;Pure/Low Alloyed Lead&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;lithium&#34;,&#34;nodeId&#34;:&#34;lithium&#34;,&#34;humanReadableId&#34;:&#34;Lithium&#34;,&#34;label&#34;:&#34;Lithium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;neodymium&#34;,&#34;nodeId&#34;:&#34;neodymium&#34;,&#34;humanReadableId&#34;:&#34;Neodymium&#34;,&#34;label&#34;:&#34;Neodymium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;neodymium-iron-boron-alloy&#34;,&#34;nodeId&#34;:&#34;neodymium-iron-boron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Neodymium Iron Boron Alloy&#34;,&#34;label&#34;:&#34;Neodymium Iron Boron Alloy&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;samarium&#34;,&#34;nodeId&#34;:&#34;samarium&#34;,&#34;humanReadableId&#34;:&#34;Samarium&#34;,&#34;label&#34;:&#34;Samarium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;samarium-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;samarium-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Samarium Cobalt Alloy&#34;,&#34;label&#34;:&#34;Samarium Cobalt Alloy&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;tin&#34;,&#34;nodeId&#34;:&#34;tin&#34;,&#34;humanReadableId&#34;:&#34;Tin&#34;,&#34;label&#34;:&#34;Tin&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;pure-low-alloyed-tin&#34;,&#34;nodeId&#34;:&#34;pure-low-alloyed-tin&#34;,&#34;humanReadableId&#34;:&#34;Pure/Low Alloyed Tin&#34;,&#34;label&#34;:&#34;Pure/Low Alloyed Tin&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tin-antimony&#34;,&#34;nodeId&#34;:&#34;tin-antimony&#34;,&#34;humanReadableId&#34;:&#34;Tin Antimony&#34;,&#34;label&#34;:&#34;Tin Antimony&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tin-lead&#34;,&#34;nodeId&#34;:&#34;tin-lead&#34;,&#34;humanReadableId&#34;:&#34;Tin Lead&#34;,&#34;label&#34;:&#34;Tin Lead&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;unclassified-tin&#34;,&#34;nodeId&#34;:&#34;unclassified-tin&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Tin&#34;,&#34;label&#34;:&#34;Unclassified Tin&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;zinc&#34;,&#34;nodeId&#34;:&#34;zinc&#34;,&#34;humanReadableId&#34;:&#34;Zinc&#34;,&#34;label&#34;:&#34;Zinc&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;unalloyed-zinc&#34;,&#34;nodeId&#34;:&#34;unalloyed-zinc&#34;,&#34;humanReadableId&#34;:&#34;Unalloyed Zinc&#34;,&#34;label&#34;:&#34;Unalloyed Zinc&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;unclassified-zinc&#34;,&#34;nodeId&#34;:&#34;unclassified-zinc&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Zinc&#34;,&#34;label&#34;:&#34;Unclassified Zinc&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zinc-aluminium&#34;,&#34;nodeId&#34;:&#34;zinc-aluminium&#34;,&#34;humanReadableId&#34;:&#34;Zinc Aluminium&#34;,&#34;label&#34;:&#34;Zinc Aluminium&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;refractory-metal&#34;,&#34;nodeId&#34;:&#34;refractory-metal&#34;,&#34;humanReadableId&#34;:&#34;Refractory Metal&#34;,&#34;label&#34;:&#34;Refractory Metal&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;hafnium&#34;,&#34;nodeId&#34;:&#34;hafnium&#34;,&#34;humanReadableId&#34;:&#34;Hafnium&#34;,&#34;label&#34;:&#34;Hafnium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;molybdenum&#34;,&#34;nodeId&#34;:&#34;molybdenum&#34;,&#34;humanReadableId&#34;:&#34;Molybdenum&#34;,&#34;label&#34;:&#34;Molybdenum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;niobium&#34;,&#34;nodeId&#34;:&#34;niobium&#34;,&#34;humanReadableId&#34;:&#34;Niobium&#34;,&#34;label&#34;:&#34;Niobium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;rhenium&#34;,&#34;nodeId&#34;:&#34;rhenium&#34;,&#34;humanReadableId&#34;:&#34;Rhenium&#34;,&#34;label&#34;:&#34;Rhenium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tantalum&#34;,&#34;nodeId&#34;:&#34;tantalum&#34;,&#34;humanReadableId&#34;:&#34;Tantalum&#34;,&#34;label&#34;:&#34;Tantalum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tungsten&#34;,&#34;nodeId&#34;:&#34;tungsten&#34;,&#34;humanReadableId&#34;:&#34;Tungsten&#34;,&#34;label&#34;:&#34;Tungsten&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;vanadium&#34;,&#34;nodeId&#34;:&#34;vanadium&#34;,&#34;humanReadableId&#34;:&#34;Vanadium&#34;,&#34;label&#34;:&#34;Vanadium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zirconium&#34;,&#34;nodeId&#34;:&#34;zirconium&#34;,&#34;humanReadableId&#34;:&#34;Zirconium&#34;,&#34;label&#34;:&#34;Zirconium&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;steel&#34;,&#34;nodeId&#34;:&#34;steel&#34;,&#34;humanReadableId&#34;:&#34;Steel&#34;,&#34;label&#34;:&#34;Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;alloy-steel&#34;,&#34;nodeId&#34;:&#34;alloy-steel&#34;,&#34;humanReadableId&#34;:&#34;Alloy Steel&#34;,&#34;label&#34;:&#34;Alloy Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;chromium-molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;chromium-molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Molybdenum Steel&#34;,&#34;label&#34;:&#34;Chromium Molybdenum Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;chromium-molybdenum-vanadium-steel&#34;,&#34;nodeId&#34;:&#34;chromium-molybdenum-vanadium-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Molybdenum Vanadium Steel&#34;,&#34;label&#34;:&#34;Chromium Molybdenum Vanadium Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;chromium-steel&#34;,&#34;nodeId&#34;:&#34;chromium-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Steel&#34;,&#34;label&#34;:&#34;Chromium Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;chromium-vanadium-steel&#34;,&#34;nodeId&#34;:&#34;chromium-vanadium-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Vanadium Steel&#34;,&#34;label&#34;:&#34;Chromium Vanadium Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;manganese-steel&#34;,&#34;nodeId&#34;:&#34;manganese-steel&#34;,&#34;humanReadableId&#34;:&#34;Manganese Steel&#34;,&#34;label&#34;:&#34;Manganese Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Molybdenum Steel&#34;,&#34;label&#34;:&#34;Molybdenum Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;nickel-chromium-molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Molybdenum Steel&#34;,&#34;label&#34;:&#34;Nickel Chromium Molybdenum Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;nickel-chromium-steel&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Steel&#34;,&#34;label&#34;:&#34;Nickel Chromium Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;nickel-molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;nickel-molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Molybdenum Steel&#34;,&#34;label&#34;:&#34;Nickel Molybdenum Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-steel&#34;,&#34;nodeId&#34;:&#34;nickel-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Steel&#34;,&#34;label&#34;:&#34;Nickel Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;nitriding-steel&#34;,&#34;nodeId&#34;:&#34;nitriding-steel&#34;,&#34;humanReadableId&#34;:&#34;Nitriding Steel&#34;,&#34;label&#34;:&#34;Nitriding Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;silicon-manganese-steel&#34;,&#34;nodeId&#34;:&#34;silicon-manganese-steel&#34;,&#34;humanReadableId&#34;:&#34;Silicon Manganese Steel&#34;,&#34;label&#34;:&#34;Silicon Manganese Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicon-steel&#34;,&#34;nodeId&#34;:&#34;silicon-steel&#34;,&#34;humanReadableId&#34;:&#34;Silicon Steel&#34;,&#34;label&#34;:&#34;Silicon Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;unclassified-low-alloy-steel&#34;,&#34;nodeId&#34;:&#34;unclassified-low-alloy-steel&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Low Alloy Steel&#34;,&#34;label&#34;:&#34;Unclassified Low Alloy Steel&#34;,&#34;checked&#34;:true}]},{&#34;id&#34;:&#34;carbon-steel&#34;,&#34;nodeId&#34;:&#34;carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Carbon Steel&#34;,&#34;label&#34;:&#34;Carbon Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;high-carbon-steel&#34;,&#34;nodeId&#34;:&#34;high-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;High Carbon Steel&#34;,&#34;label&#34;:&#34;High Carbon Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;low-carbon-steel&#34;,&#34;nodeId&#34;:&#34;low-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Low Carbon Steel&#34;,&#34;label&#34;:&#34;Low Carbon Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;medium-carbon-steel&#34;,&#34;nodeId&#34;:&#34;medium-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Medium Carbon Steel&#34;,&#34;label&#34;:&#34;Medium Carbon Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;unclassified-carbon-steel&#34;,&#34;nodeId&#34;:&#34;unclassified-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Carbon Steel&#34;,&#34;label&#34;:&#34;Unclassified Carbon Steel&#34;,&#34;checked&#34;:true}]},{&#34;id&#34;:&#34;low-alloy-steel&#34;,&#34;nodeId&#34;:&#34;low-alloy-steel&#34;,&#34;humanReadableId&#34;:&#34;Low Alloy Steel&#34;,&#34;label&#34;:&#34;Low Alloy Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;low-carbon-steel&#34;,&#34;nodeId&#34;:&#34;low-carbon-steel-&#34;,&#34;humanReadableId&#34;:&#34;Low Carbon Steel&#34;,&#34;label&#34;:&#34;Low Carbon Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;maraging-steel&#34;,&#34;nodeId&#34;:&#34;maraging-steel&#34;,&#34;humanReadableId&#34;:&#34;Maraging Steel&#34;,&#34;label&#34;:&#34;Maraging Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;stainless-steel&#34;,&#34;nodeId&#34;:&#34;stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Stainless Steel&#34;,&#34;label&#34;:&#34;Stainless Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;austenitic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Austenitic Stainless Steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;duplex-stainless-steel&#34;,&#34;nodeId&#34;:&#34;duplex-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Duplex Stainless Steel&#34;,&#34;label&#34;:&#34;Duplex Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;ferritic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;ferritic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Ferritic Stainless Steel&#34;,&#34;label&#34;:&#34;Ferritic Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;martensitic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;martensitic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Martensitic Stainless Steel&#34;,&#34;label&#34;:&#34;Martensitic Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;precipitation-hardening-stainless-steel&#34;,&#34;nodeId&#34;:&#34;precipitation-hardening-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Precipitation Hardening Stainless Steel&#34;,&#34;label&#34;:&#34;Precipitation Hardening Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;superaustenitic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;superaustenitic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Superaustenitic Stainless Steel&#34;,&#34;label&#34;:&#34;Superaustenitic Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;unclassified-stainless-steel&#34;,&#34;nodeId&#34;:&#34;unclassified-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Stainless Steel&#34;,&#34;label&#34;:&#34;Unclassified Stainless Steel&#34;,&#34;checked&#34;:true}]},{&#34;id&#34;:&#34;tool-and-machining-steel&#34;,&#34;nodeId&#34;:&#34;tool-and-machining-steel&#34;,&#34;humanReadableId&#34;:&#34;Tool And Machining Steel&#34;,&#34;label&#34;:&#34;Tool And Machining Steel&#34;,&#34;checked&#34;:true}]},{&#34;id&#34;:&#34;titanium&#34;,&#34;nodeId&#34;:&#34;titanium&#34;,&#34;humanReadableId&#34;:&#34;Titanium&#34;,&#34;label&#34;:&#34;Titanium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;alpha-alloy&#34;,&#34;nodeId&#34;:&#34;alpha-alloy&#34;,&#34;humanReadableId&#34;:&#34;Alpha Alloy&#34;,&#34;label&#34;:&#34;Alpha Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;alpha-beta-alloy&#34;,&#34;nodeId&#34;:&#34;alpha-beta-alloy&#34;,&#34;humanReadableId&#34;:&#34;Alpha Beta Alloy&#34;,&#34;label&#34;:&#34;Alpha Beta Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;beta-alloy&#34;,&#34;nodeId&#34;:&#34;beta-alloy&#34;,&#34;humanReadableId&#34;:&#34;Beta Alloy&#34;,&#34;label&#34;:&#34;Beta Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;low-alloy-titanium&#34;,&#34;nodeId&#34;:&#34;low-alloy-titanium&#34;,&#34;humanReadableId&#34;:&#34;Low Alloy Titanium&#34;,&#34;label&#34;:&#34;Low Alloy Titanium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;near-alpha-alloy&#34;,&#34;nodeId&#34;:&#34;near-alpha-alloy&#34;,&#34;humanReadableId&#34;:&#34;Near Alpha Alloy&#34;,&#34;label&#34;:&#34;Near Alpha Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;pure-titanium&#34;,&#34;nodeId&#34;:&#34;pure-titanium&#34;,&#34;humanReadableId&#34;:&#34;Pure Titanium&#34;,&#34;label&#34;:&#34;Pure Titanium&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;polymer&#34;,&#34;nodeId&#34;:&#34;polymer&#34;,&#34;humanReadableId&#34;:&#34;Polymer&#34;,&#34;label&#34;:&#34;Polymer&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;elastomer&#34;,&#34;nodeId&#34;:&#34;elastomer&#34;,&#34;humanReadableId&#34;:&#34;Elastomer&#34;,&#34;label&#34;:&#34;Elastomer&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;butadiene-rubber--br-&#34;,&#34;nodeId&#34;:&#34;butadiene-rubber--br-&#34;,&#34;humanReadableId&#34;:&#34;Butadiene Rubber (BR)&#34;,&#34;label&#34;:&#34;Butadiene Rubber (BR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;chloroprene-rubber--cr-&#34;,&#34;nodeId&#34;:&#34;chloroprene-rubber--cr-&#34;,&#34;humanReadableId&#34;:&#34;Chloroprene Rubber (CR)&#34;,&#34;label&#34;:&#34;Chloroprene Rubber (CR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ethylene-propylene-diene-rubber--epdm-&#34;,&#34;nodeId&#34;:&#34;ethylene-propylene-diene-rubber--epdm-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Propylene Diene Rubber (EPDM)&#34;,&#34;label&#34;:&#34;Ethylene Propylene Diene Rubber (EPDM)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ethylene-propylene-rubber--epr-&#34;,&#34;nodeId&#34;:&#34;ethylene-propylene-rubber--epr-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Propylene Rubber (EPR)&#34;,&#34;label&#34;:&#34;Ethylene Propylene Rubber (EPR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;fluorosilicone-rubber--fvmq-&#34;,&#34;nodeId&#34;:&#34;fluorosilicone-rubber--fvmq-&#34;,&#34;humanReadableId&#34;:&#34;Fluorosilicone Rubber (FVMQ)&#34;,&#34;label&#34;:&#34;Fluorosilicone Rubber (FVMQ)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;natural-rubber--nr-&#34;,&#34;nodeId&#34;:&#34;natural-rubber--nr-&#34;,&#34;humanReadableId&#34;:&#34;Natural Rubber (NR)&#34;,&#34;label&#34;:&#34;Natural Rubber (NR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nitrile-rubber--nbr-&#34;,&#34;nodeId&#34;:&#34;nitrile-rubber--nbr-&#34;,&#34;humanReadableId&#34;:&#34;Nitrile Rubber (NBR)&#34;,&#34;label&#34;:&#34;Nitrile Rubber (NBR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;styrene-butadiene-rubber--sbr-&#34;,&#34;nodeId&#34;:&#34;styrene-butadiene-rubber--sbr-&#34;,&#34;humanReadableId&#34;:&#34;Styrene Butadiene Rubber (SBR)&#34;,&#34;label&#34;:&#34;Styrene Butadiene Rubber (SBR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-elastomer--tpe-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-elastomer--tpe-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Elastomer (TPE)&#34;,&#34;label&#34;:&#34;Thermoplastic Elastomer (TPE)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;elastomeric-alloy--tpv-&#34;,&#34;nodeId&#34;:&#34;elastomeric-alloy--tpv-&#34;,&#34;humanReadableId&#34;:&#34;Elastomeric Alloy (TPV)&#34;,&#34;label&#34;:&#34;Elastomeric Alloy (TPV)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;styrene-butadiene-styrene--sbs-&#34;,&#34;nodeId&#34;:&#34;styrene-butadiene-styrene--sbs-&#34;,&#34;humanReadableId&#34;:&#34;Styrene Butadiene Styrene (SBS)&#34;,&#34;label&#34;:&#34;Styrene Butadiene Styrene (SBS)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-copolyester--tpc-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-copolyester--tpc-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Copolyester (TPC)&#34;,&#34;label&#34;:&#34;Thermoplastic Copolyester (TPC)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-polyamide--tpa-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyamide--tpa-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyamide (TPA)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyamide (TPA)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-polyester-elastomer--tpee-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyester-elastomer--tpee-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyester Elastomer (TPEE)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyester Elastomer (TPEE)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-polyolefin--tpo-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyolefin--tpo-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyolefin (TPO)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyolefin (TPO)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-polyurethane--tpu-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyurethane--tpu-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyurethane (TPU)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyurethane (TPU)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-styrenic-block-copolymer--tps-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-styrenic-block-copolymer--tps-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Styrenic Block Copolymer (TPS)&#34;,&#34;label&#34;:&#34;Thermoplastic Styrenic Block Copolymer (TPS)&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;thermoplastic&#34;,&#34;nodeId&#34;:&#34;thermoplastic&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic&#34;,&#34;label&#34;:&#34;Thermoplastic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;acrylic&#34;,&#34;nodeId&#34;:&#34;acrylic&#34;,&#34;humanReadableId&#34;:&#34;Acrylic&#34;,&#34;label&#34;:&#34;Acrylic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyacrylonitrile--pan-&#34;,&#34;nodeId&#34;:&#34;polyacrylonitrile--pan-&#34;,&#34;humanReadableId&#34;:&#34;Polyacrylonitrile (PAN)&#34;,&#34;label&#34;:&#34;Polyacrylonitrile (PAN)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polymethyl-methacrylate--pmma-&#34;,&#34;nodeId&#34;:&#34;polymethyl-methacrylate--pmma-&#34;,&#34;humanReadableId&#34;:&#34;Polymethyl methacrylate (PMMA)&#34;,&#34;label&#34;:&#34;Polymethyl methacrylate (PMMA)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;fluoropolymer&#34;,&#34;nodeId&#34;:&#34;fluoropolymer&#34;,&#34;humanReadableId&#34;:&#34;Fluoropolymer&#34;,&#34;label&#34;:&#34;Fluoropolymer&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ethylene-tetrafluoroethylene-copolymer--etfe-&#34;,&#34;nodeId&#34;:&#34;ethylene-tetrafluoroethylene-copolymer--etfe-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Tetrafluoroethylene Copolymer (ETFE)&#34;,&#34;label&#34;:&#34;Ethylene Tetrafluoroethylene Copolymer (ETFE)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;fluorinated-ethylene-propylene--fep-&#34;,&#34;nodeId&#34;:&#34;fluorinated-ethylene-propylene--fep-&#34;,&#34;humanReadableId&#34;:&#34;Fluorinated ethylene propylene (FEP)&#34;,&#34;label&#34;:&#34;Fluorinated ethylene propylene (FEP)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polytetrafluoroethylene--ptfe-&#34;,&#34;nodeId&#34;:&#34;polytetrafluoroethylene--ptfe-&#34;,&#34;humanReadableId&#34;:&#34;Polytetrafluoroethylene (PTFE)&#34;,&#34;label&#34;:&#34;Polytetrafluoroethylene (PTFE)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyvinylidenefluoride--pvdf-&#34;,&#34;nodeId&#34;:&#34;polyvinylidenefluoride--pvdf-&#34;,&#34;humanReadableId&#34;:&#34;Polyvinylidenefluoride (PVDF)&#34;,&#34;label&#34;:&#34;Polyvinylidenefluoride (PVDF)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;liquid-crystal-polymers--lcp-&#34;,&#34;nodeId&#34;:&#34;liquid-crystal-polymers--lcp-&#34;,&#34;humanReadableId&#34;:&#34;Liquid Crystal Polymers (LCP)&#34;,&#34;label&#34;:&#34;Liquid Crystal Polymers (LCP)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide--pa-&#34;,&#34;nodeId&#34;:&#34;polyamide--pa-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide (PA)&#34;,&#34;label&#34;:&#34;Polyamide (PA)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aramide&#34;,&#34;nodeId&#34;:&#34;aramide&#34;,&#34;humanReadableId&#34;:&#34;Aramide&#34;,&#34;label&#34;:&#34;Aramide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copolyamide-6-66--pa6-66-&#34;,&#34;nodeId&#34;:&#34;copolyamide-6-66--pa6-66-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 6/66 (PA6/66)&#34;,&#34;label&#34;:&#34;Copolyamide 6/66 (PA6/66)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;other-polyamide--pa-&#34;,&#34;nodeId&#34;:&#34;other-polyamide--pa-&#34;,&#34;humanReadableId&#34;:&#34;Other Polyamide (PA)&#34;,&#34;label&#34;:&#34;Other Polyamide (PA)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-1010--pa1010-&#34;,&#34;nodeId&#34;:&#34;polyamide-1010--pa1010-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 1010 (PA1010)&#34;,&#34;label&#34;:&#34;Polyamide 1010 (PA1010)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-1012--pa1012-&#34;,&#34;nodeId&#34;:&#34;polyamide-1012--pa1012-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 1012 (PA1012)&#34;,&#34;label&#34;:&#34;Polyamide 1012 (PA1012)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-11--pa11-&#34;,&#34;nodeId&#34;:&#34;polyamide-11--pa11-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 11 (PA11)&#34;,&#34;label&#34;:&#34;Polyamide 11 (PA11)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-12--pa12-&#34;,&#34;nodeId&#34;:&#34;polyamide-12--pa12-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 12 (PA12)&#34;,&#34;label&#34;:&#34;Polyamide 12 (PA12)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-410--pa410-&#34;,&#34;nodeId&#34;:&#34;polyamide-410--pa410-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 410 (PA410)&#34;,&#34;label&#34;:&#34;Polyamide 410 (PA410)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-46--pa46-&#34;,&#34;nodeId&#34;:&#34;polyamide-46--pa46-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 46 (PA46)&#34;,&#34;label&#34;:&#34;Polyamide 46 (PA46)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-6--pa6-&#34;,&#34;nodeId&#34;:&#34;polyamide-6--pa6-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 6 (PA6)&#34;,&#34;label&#34;:&#34;Polyamide 6 (PA6)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyamide-4t--pa4t-&#34;,&#34;nodeId&#34;:&#34;polyamide-4t--pa4t-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;label&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polyamide-6-66--pa6-66-&#34;,&#34;nodeId&#34;:&#34;polyamide-6-66--pa6-66-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 6/66 (PA6/66)&#34;,&#34;label&#34;:&#34;Polyamide 6/66 (PA6/66)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-610--pa610-&#34;,&#34;nodeId&#34;:&#34;polyamide-610--pa610-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 610 (PA610)&#34;,&#34;label&#34;:&#34;Polyamide 610 (PA610)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-612--pa612-&#34;,&#34;nodeId&#34;:&#34;polyamide-612--pa612-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 612 (PA612)&#34;,&#34;label&#34;:&#34;Polyamide 612 (PA612)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-66--pa66-&#34;,&#34;nodeId&#34;:&#34;polyamide-66--pa66-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 66 (PA66)&#34;,&#34;label&#34;:&#34;Polyamide 66 (PA66)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyphthalamide--ppa-&#34;,&#34;nodeId&#34;:&#34;polyphthalamide--ppa-&#34;,&#34;humanReadableId&#34;:&#34;Polyphthalamide (PPA)&#34;,&#34;label&#34;:&#34;Polyphthalamide (PPA)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;copolyamide-66-6i--pa66-6i-&#34;,&#34;nodeId&#34;:&#34;copolyamide-66-6i--pa66-6i-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 66/6I (PA66/6I)&#34;,&#34;label&#34;:&#34;Copolyamide 66/6I (PA66/6I)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copolyamide-6t-66--pa6t-66-&#34;,&#34;nodeId&#34;:&#34;copolyamide-6t-66--pa6t-66-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 6T/66 (PA6T/66)&#34;,&#34;label&#34;:&#34;Copolyamide 6T/66 (PA6T/66)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copolyamide-6t-6i-66--pa6t-6i-66-&#34;,&#34;nodeId&#34;:&#34;copolyamide-6t-6i-66--pa6t-6i-66-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 6T/6I/66 (PA6T/6I/66)&#34;,&#34;label&#34;:&#34;Copolyamide 6T/6I/66 (PA6T/6I/66)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copolyamide-pa6i-6t--pa6i-6t-&#34;,&#34;nodeId&#34;:&#34;copolyamide-pa6i-6t--pa6i-6t-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide PA6I/6T (PA6I/6T)&#34;,&#34;label&#34;:&#34;Copolyamide PA6I/6T (PA6I/6T)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-4t--pa4t-&#34;,&#34;nodeId&#34;:&#34;polyamide-4t--pa4t--&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;label&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-6t--pa6t-&#34;,&#34;nodeId&#34;:&#34;polyamide-6t--pa6t-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 6T (PA6T)&#34;,&#34;label&#34;:&#34;Polyamide 6T (PA6T)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-mxd6--pamxd6-&#34;,&#34;nodeId&#34;:&#34;polyamide-mxd6--pamxd6-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide MXD6 (PAMXD6)&#34;,&#34;label&#34;:&#34;Polyamide MXD6 (PAMXD6)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-pa6-6t--pa6-6t-&#34;,&#34;nodeId&#34;:&#34;polyamide-pa6-6t--pa6-6t-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide PA6/6T (PA6/6T)&#34;,&#34;label&#34;:&#34;Polyamide PA6/6T (PA6/6T)&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;polyaryletherketone--paek-&#34;,&#34;nodeId&#34;:&#34;polyaryletherketone--paek-&#34;,&#34;humanReadableId&#34;:&#34;Polyaryletherketone (PAEK)&#34;,&#34;label&#34;:&#34;Polyaryletherketone (PAEK)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyether-ketone--pek-&#34;,&#34;nodeId&#34;:&#34;polyether-ketone--pek-&#34;,&#34;humanReadableId&#34;:&#34;Polyether Ketone (PEK)&#34;,&#34;label&#34;:&#34;Polyether Ketone (PEK)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyetherether-ketone--peek-&#34;,&#34;nodeId&#34;:&#34;polyetherether-ketone--peek-&#34;,&#34;humanReadableId&#34;:&#34;Polyetherether Ketone (PEEK)&#34;,&#34;label&#34;:&#34;Polyetherether Ketone (PEEK)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyetherketoneketone--pekk-&#34;,&#34;nodeId&#34;:&#34;polyetherketoneketone--pekk-&#34;,&#34;humanReadableId&#34;:&#34;Polyetherketoneketone (PEKK)&#34;,&#34;label&#34;:&#34;Polyetherketoneketone (PEKK)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polycarbonate--pc-&#34;,&#34;nodeId&#34;:&#34;polycarbonate--pc-&#34;,&#34;humanReadableId&#34;:&#34;Polycarbonate (PC)&#34;,&#34;label&#34;:&#34;Polycarbonate (PC)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyester&#34;,&#34;nodeId&#34;:&#34;polyester&#34;,&#34;humanReadableId&#34;:&#34;Polyester&#34;,&#34;label&#34;:&#34;Polyester&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polybutylene-terephthalate--pbt-&#34;,&#34;nodeId&#34;:&#34;polybutylene-terephthalate--pbt-&#34;,&#34;humanReadableId&#34;:&#34;Polybutylene Terephthalate (PBT)&#34;,&#34;label&#34;:&#34;Polybutylene Terephthalate (PBT)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyethylene-terephthalate--pet-&#34;,&#34;nodeId&#34;:&#34;polyethylene-terephthalate--pet-&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene Terephthalate (PET)&#34;,&#34;label&#34;:&#34;Polyethylene Terephthalate (PET)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyethylene-terephthalate-glycol--petg-&#34;,&#34;nodeId&#34;:&#34;polyethylene-terephthalate-glycol--petg-&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene Terephthalate Glycol (PETG)&#34;,&#34;label&#34;:&#34;Polyethylene Terephthalate Glycol (PETG)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyglycolicide--pga-&#34;,&#34;nodeId&#34;:&#34;polyglycolicide--pga-&#34;,&#34;humanReadableId&#34;:&#34;Polyglycolicide (PGA)&#34;,&#34;label&#34;:&#34;Polyglycolicide (PGA)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polytrimethylene-terephthalate--ptt-&#34;,&#34;nodeId&#34;:&#34;polytrimethylene-terephthalate--ptt-&#34;,&#34;humanReadableId&#34;:&#34;Polytrimethylene Terephthalate (PTT)&#34;,&#34;label&#34;:&#34;Polytrimethylene Terephthalate (PTT)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polyethylene--pe-&#34;,&#34;nodeId&#34;:&#34;polyethylene--pe-&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene (PE)&#34;,&#34;label&#34;:&#34;Polyethylene (PE)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyimide--pi-&#34;,&#34;nodeId&#34;:&#34;polyimide--pi-&#34;,&#34;humanReadableId&#34;:&#34;Polyimide (PI)&#34;,&#34;label&#34;:&#34;Polyimide (PI)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyamidimide--pai-&#34;,&#34;nodeId&#34;:&#34;polyamidimide--pai-&#34;,&#34;humanReadableId&#34;:&#34;Polyamidimide (PAI)&#34;,&#34;label&#34;:&#34;Polyamidimide (PAI)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polybenzimidazole--pbi-&#34;,&#34;nodeId&#34;:&#34;polybenzimidazole--pbi-&#34;,&#34;humanReadableId&#34;:&#34;Polybenzimidazole (PBI)&#34;,&#34;label&#34;:&#34;Polybenzimidazole (PBI)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyetherimide--pei-&#34;,&#34;nodeId&#34;:&#34;polyetherimide--pei-&#34;,&#34;humanReadableId&#34;:&#34;Polyetherimide (PEI)&#34;,&#34;label&#34;:&#34;Polyetherimide (PEI)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polyketone--pk-&#34;,&#34;nodeId&#34;:&#34;polyketone--pk-&#34;,&#34;humanReadableId&#34;:&#34;Polyketone (PK)&#34;,&#34;label&#34;:&#34;Polyketone (PK)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polylactic-acid--pla-&#34;,&#34;nodeId&#34;:&#34;polylactic-acid--pla-&#34;,&#34;humanReadableId&#34;:&#34;Polylactic Acid (PLA)&#34;,&#34;label&#34;:&#34;Polylactic Acid (PLA)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polymer-blend&#34;,&#34;nodeId&#34;:&#34;polymer-blend&#34;,&#34;humanReadableId&#34;:&#34;Polymer Blend&#34;,&#34;label&#34;:&#34;Polymer Blend&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyolefin--po-&#34;,&#34;nodeId&#34;:&#34;polyolefin--po-&#34;,&#34;humanReadableId&#34;:&#34;Polyolefin (PO)&#34;,&#34;label&#34;:&#34;Polyolefin (PO)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polybutene--pb-&#34;,&#34;nodeId&#34;:&#34;polybutene--pb-&#34;,&#34;humanReadableId&#34;:&#34;Polybutene (PB)&#34;,&#34;label&#34;:&#34;Polybutene (PB)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyethylene--pe-&#34;,&#34;nodeId&#34;:&#34;polyethylene--pe--&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene (PE)&#34;,&#34;label&#34;:&#34;Polyethylene (PE)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;high-density-polyethylene--pe-hd-&#34;,&#34;nodeId&#34;:&#34;high-density-polyethylene--pe-hd-&#34;,&#34;humanReadableId&#34;:&#34;High Density Polyethylene (PE-HD)&#34;,&#34;label&#34;:&#34;High Density Polyethylene (PE-HD)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;high-molecular-weight-polyethylene--pe-hmw-&#34;,&#34;nodeId&#34;:&#34;high-molecular-weight-polyethylene--pe-hmw-&#34;,&#34;humanReadableId&#34;:&#34;High Molecular Weight Polyethylene (PE-HMW)&#34;,&#34;label&#34;:&#34;High Molecular Weight Polyethylene (PE-HMW)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;linear-low-density-polyethylene--pe-lld-&#34;,&#34;nodeId&#34;:&#34;linear-low-density-polyethylene--pe-lld-&#34;,&#34;humanReadableId&#34;:&#34;Linear Low Density Polyethylene (PE-LLD)&#34;,&#34;label&#34;:&#34;Linear Low Density Polyethylene (PE-LLD)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;low-density-polyethylene--pe-ld-&#34;,&#34;nodeId&#34;:&#34;low-density-polyethylene--pe-ld-&#34;,&#34;humanReadableId&#34;:&#34;Low Density Polyethylene (PE-LD)&#34;,&#34;label&#34;:&#34;Low Density Polyethylene (PE-LD)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;medium-density-polyethylene--pe-md-&#34;,&#34;nodeId&#34;:&#34;medium-density-polyethylene--pe-md-&#34;,&#34;humanReadableId&#34;:&#34;Medium Density Polyethylene (PE-MD)&#34;,&#34;label&#34;:&#34;Medium Density Polyethylene (PE-MD)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ultra-high-molecular-weight-polyethylene--pe-uhmw-&#34;,&#34;nodeId&#34;:&#34;ultra-high-molecular-weight-polyethylene--pe-uhmw-&#34;,&#34;humanReadableId&#34;:&#34;Ultra High Molecular Weight Polyethylene (PE-UHMW)&#34;,&#34;label&#34;:&#34;Ultra High Molecular Weight Polyethylene (PE-UHMW)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;very-low-density-polyethylene--pe-vld-&#34;,&#34;nodeId&#34;:&#34;very-low-density-polyethylene--pe-vld-&#34;,&#34;humanReadableId&#34;:&#34;Very Low Density Polyethylene (PE-VLD)&#34;,&#34;label&#34;:&#34;Very Low Density Polyethylene (PE-VLD)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polymethylpentene--pmp-&#34;,&#34;nodeId&#34;:&#34;polymethylpentene--pmp-&#34;,&#34;humanReadableId&#34;:&#34;Polymethylpentene (PMP)&#34;,&#34;label&#34;:&#34;Polymethylpentene (PMP)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polypropylene--pp-&#34;,&#34;nodeId&#34;:&#34;polypropylene--pp-&#34;,&#34;humanReadableId&#34;:&#34;Polypropylene (PP)&#34;,&#34;label&#34;:&#34;Polypropylene (PP)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polyoxymethylene--pom-&#34;,&#34;nodeId&#34;:&#34;polyoxymethylene--pom-&#34;,&#34;humanReadableId&#34;:&#34;Polyoxymethylene (POM)&#34;,&#34;label&#34;:&#34;Polyoxymethylene (POM)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyphenyl&#34;,&#34;nodeId&#34;:&#34;polyphenyl&#34;,&#34;humanReadableId&#34;:&#34;Polyphenyl&#34;,&#34;label&#34;:&#34;Polyphenyl&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyphenyl-ether--ppe-&#34;,&#34;nodeId&#34;:&#34;polyphenyl-ether--ppe-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenyl Ether (PPE)&#34;,&#34;label&#34;:&#34;Polyphenyl Ether (PPE)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyphenylene-oxide--ppo-&#34;,&#34;nodeId&#34;:&#34;polyphenylene-oxide--ppo-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenylene Oxide (PPO)&#34;,&#34;label&#34;:&#34;Polyphenylene Oxide (PPO)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyphenylene-sulfide--pps-&#34;,&#34;nodeId&#34;:&#34;polyphenylene-sulfide--pps-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenylene Sulfide (PPS)&#34;,&#34;label&#34;:&#34;Polyphenylene Sulfide (PPS)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polysaccharide&#34;,&#34;nodeId&#34;:&#34;polysaccharide&#34;,&#34;humanReadableId&#34;:&#34;Polysaccharide&#34;,&#34;label&#34;:&#34;Polysaccharide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polysulphones&#34;,&#34;nodeId&#34;:&#34;polysulphones&#34;,&#34;humanReadableId&#34;:&#34;Polysulphones&#34;,&#34;label&#34;:&#34;Polysulphones&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyether-sulfone--pes-&#34;,&#34;nodeId&#34;:&#34;polyether-sulfone--pes-&#34;,&#34;humanReadableId&#34;:&#34;Polyether Sulfone (PES)&#34;,&#34;label&#34;:&#34;Polyether Sulfone (PES)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyphenylsulphone--ppsu-&#34;,&#34;nodeId&#34;:&#34;polyphenylsulphone--ppsu-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenylsulphone (PPSU)&#34;,&#34;label&#34;:&#34;Polyphenylsulphone (PPSU)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polysulphone--psu-&#34;,&#34;nodeId&#34;:&#34;polysulphone--psu-&#34;,&#34;humanReadableId&#34;:&#34;Polysulphone (PSU)&#34;,&#34;label&#34;:&#34;Polysulphone (PSU)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polysulphone-general--psu-&#34;,&#34;nodeId&#34;:&#34;polysulphone-general--psu-&#34;,&#34;humanReadableId&#34;:&#34;Polysulphone General (PSU)&#34;,&#34;label&#34;:&#34;Polysulphone General (PSU)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;styrene&#34;,&#34;nodeId&#34;:&#34;styrene&#34;,&#34;humanReadableId&#34;:&#34;Styrene&#34;,&#34;label&#34;:&#34;Styrene&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;acrylonitrile-butadiene-styrene--abs-&#34;,&#34;nodeId&#34;:&#34;acrylonitrile-butadiene-styrene--abs-&#34;,&#34;humanReadableId&#34;:&#34;Acrylonitrile Butadiene Styrene (ABS)&#34;,&#34;label&#34;:&#34;Acrylonitrile Butadiene Styrene (ABS)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;acrylonitrile-styrene-acrylate--asa-&#34;,&#34;nodeId&#34;:&#34;acrylonitrile-styrene-acrylate--asa-&#34;,&#34;humanReadableId&#34;:&#34;Acrylonitrile Styrene Acrylate (ASA)&#34;,&#34;label&#34;:&#34;Acrylonitrile Styrene Acrylate (ASA)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;high-impact-polystyrene--hips-&#34;,&#34;nodeId&#34;:&#34;high-impact-polystyrene--hips-&#34;,&#34;humanReadableId&#34;:&#34;High Impact Polystyrene (HIPS)&#34;,&#34;label&#34;:&#34;High Impact Polystyrene (HIPS)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;methacrylate-butadiene-styrene--mbs-&#34;,&#34;nodeId&#34;:&#34;methacrylate-butadiene-styrene--mbs-&#34;,&#34;humanReadableId&#34;:&#34;Methacrylate Butadiene Styrene (MBS)&#34;,&#34;label&#34;:&#34;Methacrylate Butadiene Styrene (MBS)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polystyrene--ps-&#34;,&#34;nodeId&#34;:&#34;polystyrene--ps-&#34;,&#34;humanReadableId&#34;:&#34;Polystyrene (PS)&#34;,&#34;label&#34;:&#34;Polystyrene (PS)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;styrene-acrylonitrile--san-&#34;,&#34;nodeId&#34;:&#34;styrene-acrylonitrile--san-&#34;,&#34;humanReadableId&#34;:&#34;Styrene Acrylonitrile (SAN)&#34;,&#34;label&#34;:&#34;Styrene Acrylonitrile (SAN)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;vinyl&#34;,&#34;nodeId&#34;:&#34;vinyl&#34;,&#34;humanReadableId&#34;:&#34;Vinyl&#34;,&#34;label&#34;:&#34;Vinyl&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ethylene-vinyl-acetate--evac-&#34;,&#34;nodeId&#34;:&#34;ethylene-vinyl-acetate--evac-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Vinyl Acetate (EVAC)&#34;,&#34;label&#34;:&#34;Ethylene Vinyl Acetate (EVAC)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyvinyl-chloride--pvc-&#34;,&#34;nodeId&#34;:&#34;polyvinyl-chloride--pvc-&#34;,&#34;humanReadableId&#34;:&#34;Polyvinyl Chloride (PVC)&#34;,&#34;label&#34;:&#34;Polyvinyl Chloride (PVC)&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;thermosetting&#34;,&#34;nodeId&#34;:&#34;thermosetting&#34;,&#34;humanReadableId&#34;:&#34;Thermosetting&#34;,&#34;label&#34;:&#34;Thermosetting&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;amino-resin&#34;,&#34;nodeId&#34;:&#34;amino-resin&#34;,&#34;humanReadableId&#34;:&#34;Amino Resin&#34;,&#34;label&#34;:&#34;Amino Resin&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;bismaleimide--bmi-&#34;,&#34;nodeId&#34;:&#34;bismaleimide--bmi-&#34;,&#34;humanReadableId&#34;:&#34;Bismaleimide (BMI)&#34;,&#34;label&#34;:&#34;Bismaleimide (BMI)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;melamine-formaldehyde--mf-&#34;,&#34;nodeId&#34;:&#34;melamine-formaldehyde--mf-&#34;,&#34;humanReadableId&#34;:&#34;Melamine formaldehyde (MF)&#34;,&#34;label&#34;:&#34;Melamine formaldehyde (MF)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;epoxy-resin--ep-&#34;,&#34;nodeId&#34;:&#34;epoxy-resin--ep-&#34;,&#34;humanReadableId&#34;:&#34;Epoxy Resin (EP)&#34;,&#34;label&#34;:&#34;Epoxy Resin (EP)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;phenol-formaldehyde-resin--pf-&#34;,&#34;nodeId&#34;:&#34;phenol-formaldehyde-resin--pf-&#34;,&#34;humanReadableId&#34;:&#34;Phenol Formaldehyde Resin (PF)&#34;,&#34;label&#34;:&#34;Phenol Formaldehyde Resin (PF)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;phthalonitrile--pn-&#34;,&#34;nodeId&#34;:&#34;phthalonitrile--pn-&#34;,&#34;humanReadableId&#34;:&#34;Phthalonitrile (PN)&#34;,&#34;label&#34;:&#34;Phthalonitrile (PN)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyester-resin--up-&#34;,&#34;nodeId&#34;:&#34;polyester-resin--up-&#34;,&#34;humanReadableId&#34;:&#34;Polyester Resin (UP)&#34;,&#34;label&#34;:&#34;Polyester Resin (UP)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;vinyl-ester-resin--ve-&#34;,&#34;nodeId&#34;:&#34;vinyl-ester-resin--ve-&#34;,&#34;humanReadableId&#34;:&#34;Vinyl Ester Resin (VE)&#34;,&#34;label&#34;:&#34;Vinyl Ester Resin (VE)&#34;,&#34;disabled&#34;:true}]}]}],&#34;categorySpecificFilter&#34;:{&#34;name&#34;:&#34;metal&#34;,&#34;disabled&#34;:false,&#34;forms&#34;:[{&#34;id&#34;:&#34;bar&#34;,&#34;label&#34;:&#34;Bar&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;billet&#34;,&#34;label&#34;:&#34;Billet&#34;},{&#34;id&#34;:&#34;casting&#34;,&#34;label&#34;:&#34;Casting&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;coil&#34;,&#34;label&#34;:&#34;Coil&#34;},{&#34;id&#34;:&#34;disc&#34;,&#34;label&#34;:&#34;Disc&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;flat&#34;,&#34;label&#34;:&#34;Flat&#34;},{&#34;id&#34;:&#34;flat-bar&#34;,&#34;label&#34;:&#34;Flat Bar&#34;},{&#34;id&#34;:&#34;foil&#34;,&#34;label&#34;:&#34;Foil&#34;},{&#34;id&#34;:&#34;forging&#34;,&#34;label&#34;:&#34;Forging&#34;},{&#34;id&#34;:&#34;full-section&#34;,&#34;label&#34;:&#34;Full Section&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;half-round-bar&#34;,&#34;label&#34;:&#34;Half Round Bar&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;hexagonal-bar&#34;,&#34;label&#34;:&#34;Hexagonal Bar&#34;},{&#34;id&#34;:&#34;hexagonal-bright-bar&#34;,&#34;label&#34;:&#34;Hexagonal Bright Bar&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;hexagonal-rod&#34;,&#34;label&#34;:&#34;Hexagonal Rod&#34;},{&#34;id&#34;:&#34;hexagonal-wire&#34;,&#34;label&#34;:&#34;Hexagonal Wire&#34;},{&#34;id&#34;:&#34;hollow-bar&#34;,&#34;label&#34;:&#34;Hollow Bar&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ingot&#34;,&#34;label&#34;:&#34;Ingot&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;pipe&#34;,&#34;label&#34;:&#34;Pipe&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;plate&#34;,&#34;label&#34;:&#34;Plate&#34;},{&#34;id&#34;:&#34;powder&#34;,&#34;label&#34;:&#34;Powder&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;profile&#34;,&#34;label&#34;:&#34;Profile&#34;},{&#34;id&#34;:&#34;profile-wire&#34;,&#34;label&#34;:&#34;Profile Wire&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;rod&#34;,&#34;label&#34;:&#34;Rod&#34;},{&#34;id&#34;:&#34;round-bar&#34;,&#34;label&#34;:&#34;Round Bar&#34;},{&#34;id&#34;:&#34;round-bright-bar&#34;,&#34;label&#34;:&#34;Round Bright Bar&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;round-rod&#34;,&#34;label&#34;:&#34;Round Rod&#34;},{&#34;id&#34;:&#34;round-wire&#34;,&#34;label&#34;:&#34;Round Wire&#34;},{&#34;id&#34;:&#34;seamless-tube&#34;,&#34;label&#34;:&#34;Seamless Tube&#34;},{&#34;id&#34;:&#34;sheet&#34;,&#34;label&#34;:&#34;Sheet&#34;},{&#34;id&#34;:&#34;spring&#34;,&#34;label&#34;:&#34;Spring&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;squar-bar&#34;,&#34;label&#34;:&#34;Squar Bar&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;square-bar&#34;,&#34;label&#34;:&#34;Square Bar&#34;},{&#34;id&#34;:&#34;strip&#34;,&#34;label&#34;:&#34;Strip&#34;},{&#34;id&#34;:&#34;tube&#34;,&#34;label&#34;:&#34;Tube&#34;},{&#34;id&#34;:&#34;welded-tube&#34;,&#34;label&#34;:&#34;Welded Tube&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wire&#34;,&#34;label&#34;:&#34;Wire&#34;}],&#34;fillers&#34;:[],&#34;modifications&#34;:[],&#34;processing&#34;:[],&#34;certifications&#34;:[],&#34;primaryPhase&#34;:[],&#34;secondaryPhase&#34;:[]},&#34;tags&#34;:[{&#34;id&#34;:&#34;form&#34;,&#34;value&#34;:&#34;bar&#34;,&#34;label&#34;:&#34;Bar&#34;}],&#34;suppliers&#34;:[{&#34;id&#34;:&#34;dest&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;materialsCount&#34;:93},{&#34;id&#34;:&#34;ugit&#34;,&#34;label&#34;:&#34;Ugitech&#34;,&#34;materialsCount&#34;:50},{&#34;id&#34;:&#34;sver&#34;,&#34;label&#34;:&#34;Sverdrup Steel AS&#34;,&#34;materialsCount&#34;:20},{&#34;id&#34;:&#34;salo&#34;,&#34;label&#34;:&#34;Salomon&#39;s Metalen&#34;,&#34;materialsCount&#34;:16},{&#34;id&#34;:&#34;hemp&#34;,&#34;label&#34;:&#34;Hempel Special Metals&#34;,&#34;materialsCount&#34;:4},{&#34;id&#34;:&#34;vdmm&#34;,&#34;label&#34;:&#34;VDM Metals&#34;,&#34;materialsCount&#34;:1},{&#34;id&#34;:&#34;song&#34;,&#34;label&#34;:&#34;Dongguan songshun mould steel Co., Ltd.&#34;,&#34;materialsCount&#34;:13},{&#34;id&#34;:&#34;ambi&#34;,&#34;label&#34;:&#34;Ambica Steels Limited&#34;,&#34;materialsCount&#34;:10}]},&#34;results&#34;:{&#34;materials&#34;:{&#34;data&#34;:[{&#34;id&#34;:&#34;DESTB19&#34;,&#34;label&#34;:&#34;Acidur 4529&#34;,&#34;url&#34;:&#34;/materials/destb19-acidur-4529&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;superaustenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Superaustenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS11&#34;,&#34;label&#34;:&#34;Acidur 4401 +AT &#34;,&#34;url&#34;:&#34;/materials/dests11-acidur-4401-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS12&#34;,&#34;label&#34;:&#34;Acidur 4435 +AT &#34;,&#34;url&#34;:&#34;/materials/dests12-acidur-4435-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS13&#34;,&#34;label&#34;:&#34;Acidur 4541 +AT &#34;,&#34;url&#34;:&#34;/materials/dests13-acidur-4541-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS14&#34;,&#34;label&#34;:&#34;Acidur 4571 +AT &#34;,&#34;url&#34;:&#34;/materials/dests14-acidur-4571-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS11A&#34;,&#34;label&#34;:&#34;Acidur 4404 +AT &#34;,&#34;url&#34;:&#34;/materials/dests11a-acidur-4404-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS9&#34;,&#34;label&#34;:&#34;Acidur 4301 +AT &#34;,&#34;url&#34;:&#34;/materials/dests9-acidur-4301-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS9A&#34;,&#34;label&#34;:&#34;Acidur 4307 +AT &#34;,&#34;url&#34;:&#34;/materials/dests9a-acidur-4307-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS10&#34;,&#34;label&#34;:&#34;Acidur 4305 +AT &#34;,&#34;url&#34;:&#34;/materials/dests10-acidur-4305-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;VDMM023&#34;,&#34;label&#34;:&#34;VDM® Alloy 926&#34;,&#34;url&#34;:&#34;/materials/vdmm023-vdm-alloy-926&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;superaustenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Superaustenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;VDMM&#34;,&#34;label&#34;:&#34;VDM Metals&#34;,&#34;url&#34;:&#34;/suppliers/vdmm-vdm-metals&#34;}},{&#34;id&#34;:&#34;DESTS7&#34;,&#34;label&#34;:&#34;Acidur 4418 QT900 &#34;,&#34;url&#34;:&#34;/materials/dests7-acidur-4418-qt900-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;martensitic-stainless-steel&#34;,&#34;label&#34;:&#34;Martensitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS15&#34;,&#34;label&#34;:&#34;Acidur 4462 +AT &#34;,&#34;url&#34;:&#34;/materials/dests15-acidur-4462-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;duplex-stainless-steel&#34;,&#34;label&#34;:&#34;Duplex Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS7A&#34;,&#34;label&#34;:&#34;Acidur 4418 QT760 &#34;,&#34;url&#34;:&#34;/materials/dests7a-acidur-4418-qt760-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;martensitic-stainless-steel&#34;,&#34;label&#34;:&#34;Martensitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;UGIT0076&#34;,&#34;label&#34;:&#34;UGIMA® 4460 Cold Finished&#34;,&#34;url&#34;:&#34;/materials/ugit0076-ugima-4460-cold-finished&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;duplex-stainless-steel&#34;,&#34;label&#34;:&#34;Duplex Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;UGIT&#34;,&#34;label&#34;:&#34;Ugitech&#34;,&#34;url&#34;:&#34;/suppliers/ugit-ugitech&#34;}},{&#34;id&#34;:&#34;UGIT0077&#34;,&#34;label&#34;:&#34;UGIMA® 4460 Cold Finished and Drawn&#34;,&#34;url&#34;:&#34;/materials/ugit0077-ugima-4460-cold-finished-and-drawn&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;duplex-stainless-steel&#34;,&#34;label&#34;:&#34;Duplex Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;UGIT&#34;,&#34;label&#34;:&#34;Ugitech&#34;,&#34;url&#34;:&#34;/suppliers/ugit-ugitech&#34;}},{&#34;id&#34;:&#34;UGIT0129&#34;,&#34;label&#34;:&#34;UGI® 4545 AIR H1025&#34;,&#34;url&#34;:&#34;/materials/ugit0129-ugi-4545-air-h1025&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;precipitation-hardening-stainless-steel&#34;,&#34;label&#34;:&#34;Precipitation Hardening Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;UGIT&#34;,&#34;label&#34;:&#34;Ugitech&#34;,&#34;url&#34;:&#34;/suppliers/ugit-ugitech&#34;}},{&#34;id&#34;:&#34;DESTS1&#34;,&#34;label&#34;:&#34;Corrodur 4021 QT800 &#34;,&#34;url&#34;:&#34;/materials/dests1-corrodur-4021-qt800-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;martensitic-stainless-steel&#34;,&#34;label&#34;:&#34;Martensitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS3&#34;,&#34;label&#34;:&#34;Corrodur 4034 Annealed &#34;,&#34;url&#34;:&#34;/materials/dests3-corrodur-4034-annealed-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;martensitic-stainless-steel&#34;,&#34;label&#34;:&#34;Martensitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS4&#34;,&#34;label&#34;:&#34;Acidur 4057 QT800 &#34;,&#34;url&#34;:&#34;/materials/dests4-acidur-4057-qt800-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;martensitic-stainless-steel&#34;,&#34;label&#34;:&#34;Martensitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS8&#34;,&#34;label&#34;:&#34;Acidur 4542 P800 &#34;,&#34;url&#34;:&#34;/materials/dests8-acidur-4542-p800-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;precipitation-hardening-stainless-steel&#34;,&#34;label&#34;:&#34;Precipitation Hardening Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}}],&#34;materialsCount&#34;:2214,&#34;page&#34;:1}}},&#34;namespacesRequired&#34;:[&#34;account&#34;,&#34;common&#34;,&#34;navigation&#34;,&#34;sign-in-up&#34;,&#34;advanced-search&#34;,&#34;search-and-filters&#34;,&#34;ashby-chart&#34;]},&#34;pathname&#34;:&#34;/advanced-search&#34;,&#34;host&#34;:&#34;matmatch.com&#34;,&#34;auth&#34;:{&#34;oauth2Google&#34;:false,&#34;oauth2Linkedin&#34;:false,&#34;promotionalEmails&#34;:false,&#34;acceptedTerms&#34;:false}},&#34;initialState&#34;:{&#34;company&#34;:{},&#34;actionMessage&#34;:{&#34;messageCode&#34;:null,&#34;messageType&#34;:null,&#34;messageText&#34;:&#34;&#34;,&#34;messageTranslationKey&#34;:&#34;&#34;,&#34;errorObj&#34;:null,&#34;showPopup&#34;:false,&#34;showMessage&#34;:false,&#34;endPoint&#34;:null},&#34;user&#34;:{&#34;oauth2Google&#34;:false,&#34;oauth2Linkedin&#34;:false,&#34;promotionalEmails&#34;:false,&#34;acceptedTerms&#34;:false},&#34;companyUser&#34;:{},&#34;companyUsers&#34;:[],&#34;roles&#34;:[],&#34;form&#34;:{},&#34;popup&#34;:{&#34;open&#34;:false,&#34;popupComponent&#34;:&#34;&#34;,&#34;info&#34;:{},&#34;companyCodes&#34;:[],&#34;fieldsValues&#34;:{},&#34;formConfiguration&#34;:{},&#34;prePopulatedDataFetched&#34;:false,&#34;signupEmail&#34;:null},&#34;auth&#34;:{&#34;isAuthenticated&#34;:false,&#34;isLoginPopupVisible&#34;:false,&#34;isRequestingLogin&#34;:false,&#34;loginError&#34;:&#34;&#34;,&#34;isSignupPopupVisible&#34;:false,&#34;isRequestingSignup&#34;:false,&#34;isSignupSuccessPopupVisible&#34;:false,&#34;signupError&#34;:&#34;&#34;,&#34;signupEmail&#34;:&#34;&#34;,&#34;isAuthPopupVisible&#34;:false,&#34;form&#34;:&#34;&#34;,&#34;autoActionParams&#34;:null,&#34;activePremiumFeature&#34;:&#34;&#34;},&#34;targetUrl&#34;:null,&#34;deviceWidth&#34;:null,&#34;navigation&#34;:{&#34;openOverlay&#34;:false,&#34;categoriesTree&#34;:[{&#34;id&#34;:&#34;biological-material&#34;,&#34;nodeId&#34;:&#34;biological-material&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Biological Material&#34;,&#34;children&#34;:[{&#34;id&#34;:&#34;wood&#34;,&#34;nodeId&#34;:&#34;wood&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Wood&#34;}],&#34;materialsCount&#34;:1},{&#34;id&#34;:&#34;ceramic&#34;,&#34;nodeId&#34;:&#34;ceramic&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Ceramic&#34;,&#34;children&#34;:[{&#34;id&#34;:&#34;carbon&#34;,&#34;nodeId&#34;:&#34;carbon&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Carbon&#34;},{&#34;id&#34;:&#34;engineering-ceramic&#34;,&#34;nodeId&#34;:&#34;engineering-ceramic&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Engineering Ceramic&#34;},{&#34;id&#34;:&#34;natural-ceramic&#34;,&#34;nodeId&#34;:&#34;natural-ceramic&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Natural Ceramic&#34;}],&#34;materialsCount&#34;:305},{&#34;id&#34;:&#34;composite&#34;,&#34;nodeId&#34;:&#34;composite&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Composite&#34;,&#34;children&#34;:[{&#34;id&#34;:&#34;ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;ceramic-matrix-composite&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Ceramic Matrix Composite&#34;},{&#34;id&#34;:&#34;metal-matrix-composite&#34;,&#34;nodeId&#34;:&#34;metal-matrix-composite&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Metal Matrix Composite&#34;},{&#34;id&#34;:&#34;polymer-matrix-composite&#34;,&#34;nodeId&#34;:&#34;polymer-matrix-composite&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Polymer Matrix Composite&#34;}],&#34;materialsCount&#34;:367},{&#34;id&#34;:&#34;glass&#34;,&#34;nodeId&#34;:&#34;glass&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Glass&#34;,&#34;children&#34;:[{&#34;id&#34;:&#34;glass-ceramic&#34;,&#34;nodeId&#34;:&#34;glass-ceramic&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Glass Ceramic&#34;},{&#34;id&#34;:&#34;lead-glass&#34;,&#34;nodeId&#34;:&#34;lead-glass&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Lead Glass&#34;},{&#34;id&#34;:&#34;silicate-glass&#34;,&#34;nodeId&#34;:&#34;silicate-glass&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Silicate Glass&#34;}],&#34;materialsCount&#34;:364},{&#34;id&#34;:&#34;metal&#34;,&#34;nodeId&#34;:&#34;metal&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Metal&#34;,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium&#34;,&#34;nodeId&#34;:&#34;aluminium&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Aluminium&#34;},{&#34;id&#34;:&#34;cladbimetal&#34;,&#34;nodeId&#34;:&#34;cladbimetal&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Clad / Bimetal&#34;},{&#34;id&#34;:&#34;cobalt&#34;,&#34;nodeId&#34;:&#34;cobalt&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Cobalt&#34;},{&#34;id&#34;:&#34;copper&#34;,&#34;nodeId&#34;:&#34;copper&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Copper&#34;},{&#34;id&#34;:&#34;iron&#34;,&#34;nodeId&#34;:&#34;iron&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Iron&#34;},{&#34;id&#34;:&#34;magnesium&#34;,&#34;nodeId&#34;:&#34;magnesium&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Magnesium&#34;},{&#34;id&#34;:&#34;manganese&#34;,&#34;nodeId&#34;:&#34;manganese&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Manganese&#34;},{&#34;id&#34;:&#34;nickel&#34;,&#34;nodeId&#34;:&#34;nickel&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Nickel&#34;},{&#34;id&#34;:&#34;noble-metal&#34;,&#34;nodeId&#34;:&#34;noble-metal&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Noble Metal&#34;},{&#34;id&#34;:&#34;other-metal&#34;,&#34;nodeId&#34;:&#34;other-metal&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Other Metal&#34;},{&#34;id&#34;:&#34;refractory-metal&#34;,&#34;nodeId&#34;:&#34;refractory-metal&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Refractory Metal&#34;},{&#34;id&#34;:&#34;steel&#34;,&#34;nodeId&#34;:&#34;steel&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Steel&#34;},{&#34;id&#34;:&#34;titanium&#34;,&#34;nodeId&#34;:&#34;titanium&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Titanium&#34;}],&#34;materialsCount&#34;:23895},{&#34;id&#34;:&#34;polymer&#34;,&#34;nodeId&#34;:&#34;polymer&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Polymer&#34;,&#34;children&#34;:[{&#34;id&#34;:&#34;elastomer&#34;,&#34;nodeId&#34;:&#34;elastomer&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Elastomer&#34;},{&#34;id&#34;:&#34;thermoplastic&#34;,&#34;nodeId&#34;:&#34;thermoplastic&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Thermoplastic&#34;},{&#34;id&#34;:&#34;thermosetting&#34;,&#34;nodeId&#34;:&#34;thermosetting&#34;,&#34;name&#34;:&#34;Material category&#34;,&#34;label&#34;:&#34;Thermosetting&#34;}],&#34;materialsCount&#34;:6385}],&#34;expandedMenuIds&#34;:[]},&#34;footerCompanies&#34;:{&#34;loggedInSupplier&#34;:{},&#34;suppliers&#34;:[]},&#34;dynamicFilters&#34;:{&#34;query&#34;:&#34;&#34;,&#34;appliedFilters&#34;:[],&#34;filterDefinition&#34;:{&#34;name&#34;:&#34;root&#34;,&#34;children&#34;:[]}},&#34;autoSuggestions&#34;:[],&#34;contactFormSuccess&#34;:{&#34;formSubmitted&#34;:false,&#34;success&#34;:false,&#34;done&#34;:false},&#34;newsletter&#34;:{&#34;userSubscribed&#34;:false},&#34;comparison&#34;:{&#34;orderCounter&#34;:0,&#34;selection&#34;:{}},&#34;experiment&#34;:null,&#34;previewMaterial&#34;:null,&#34;supplierMaterials&#34;:{&#34;report&#34;:null,&#34;materials&#34;:[],&#34;publishedCount&#34;:0,&#34;approvalStatus&#34;:&#34;unpublished&#34;,&#34;showPublishAllTriggeredPopup&#34;:false},&#34;reviewCompany&#34;:null,&#34;applications&#34;:{&#34;applicationListView&#34;:[],&#34;materialsView&#34;:{&#34;query&#34;:&#34;&#34;,&#34;materials&#34;:[],&#34;filters&#34;:[],&#34;appliedFilters&#34;:[],&#34;breadcrumbs&#34;:[],&#34;filterGroups&#34;:[]},&#34;visualisedMaterials&#34;:[],&#34;visualisedProperties&#34;:[],&#34;selectedMaterialsForComparison&#34;:[],&#34;selectedPropertiesForCharts&#34;:[],&#34;selectedPropertiesForChartsLegendData&#34;:[],&#34;selectedMaterialsForCharts&#34;:[],&#34;chartType&#34;:&#34;&#34;,&#34;chartData&#34;:{},&#34;compareData&#34;:{},&#34;selectedApplication&#34;:&#34;&#34;,&#34;totalResults&#34;:0,&#34;comparisonId&#34;:&#34;&#34;},&#34;autoAction&#34;:{&#34;apiUrl&#34;:[],&#34;infoMessageTranslationKey&#34;:&#34;&#34;,&#34;successRedirect&#34;:&#34;&#34;,&#34;successApiUrl&#34;:&#34;&#34;,&#34;successApiMethod&#34;:&#34;&#34;,&#34;failedRedirect&#34;:&#34;&#34;,&#34;failedAction&#34;:&#34;&#34;,&#34;successAction&#34;:&#34;&#34;,&#34;eventsAnalyticsObj&#34;:null},&#34;savedSuppliers&#34;:{&#34;items&#34;:[],&#34;openAuthPopup&#34;:false,&#34;savingItem&#34;:null},&#34;advancedSearch&#34;:{&#34;labels&#34;:[],&#34;queryParams&#34;:&#34;categories=steel u0026tags=form:bar&#34;,&#34;categories&#34;:[{&#34;id&#34;:&#34;biological-material&#34;,&#34;nodeId&#34;:&#34;biological-material&#34;,&#34;humanReadableId&#34;:&#34;Biological Material&#34;,&#34;label&#34;:&#34;Biological Material&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;wood&#34;,&#34;nodeId&#34;:&#34;wood&#34;,&#34;humanReadableId&#34;:&#34;Wood&#34;,&#34;label&#34;:&#34;Wood&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;ceramic&#34;,&#34;nodeId&#34;:&#34;ceramic&#34;,&#34;humanReadableId&#34;:&#34;Ceramic&#34;,&#34;label&#34;:&#34;Ceramic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;carbon&#34;,&#34;nodeId&#34;:&#34;carbon&#34;,&#34;humanReadableId&#34;:&#34;Carbon&#34;,&#34;label&#34;:&#34;Carbon&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;carbon-nanotube&#34;,&#34;nodeId&#34;:&#34;carbon-nanotube&#34;,&#34;humanReadableId&#34;:&#34;Carbon Nanotube&#34;,&#34;label&#34;:&#34;Carbon Nanotube&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;diamond&#34;,&#34;nodeId&#34;:&#34;diamond&#34;,&#34;humanReadableId&#34;:&#34;Diamond&#34;,&#34;label&#34;:&#34;Diamond&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;natural-diamond&#34;,&#34;nodeId&#34;:&#34;natural-diamond&#34;,&#34;humanReadableId&#34;:&#34;Natural Diamond&#34;,&#34;label&#34;:&#34;Natural Diamond&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;synthetic-diamond&#34;,&#34;nodeId&#34;:&#34;synthetic-diamond&#34;,&#34;humanReadableId&#34;:&#34;Synthetic Diamond&#34;,&#34;label&#34;:&#34;Synthetic Diamond&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;graphene&#34;,&#34;nodeId&#34;:&#34;graphene&#34;,&#34;humanReadableId&#34;:&#34;Graphene&#34;,&#34;label&#34;:&#34;Graphene&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;graphite&#34;,&#34;nodeId&#34;:&#34;graphite&#34;,&#34;humanReadableId&#34;:&#34;Graphite&#34;,&#34;label&#34;:&#34;Graphite&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;engineering-ceramic&#34;,&#34;nodeId&#34;:&#34;engineering-ceramic&#34;,&#34;humanReadableId&#34;:&#34;Engineering Ceramic&#34;,&#34;label&#34;:&#34;Engineering Ceramic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;non-oxide-based&#34;,&#34;nodeId&#34;:&#34;non-oxide-based&#34;,&#34;humanReadableId&#34;:&#34;Non Oxide Based&#34;,&#34;label&#34;:&#34;Non Oxide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;boride-based&#34;,&#34;nodeId&#34;:&#34;boride-based&#34;,&#34;humanReadableId&#34;:&#34;Boride Based&#34;,&#34;label&#34;:&#34;Boride Based&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;carbide-based&#34;,&#34;nodeId&#34;:&#34;carbide-based&#34;,&#34;humanReadableId&#34;:&#34;Carbide Based&#34;,&#34;label&#34;:&#34;Carbide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;boron-carbide&#34;,&#34;nodeId&#34;:&#34;boron-carbide&#34;,&#34;humanReadableId&#34;:&#34;Boron Carbide&#34;,&#34;label&#34;:&#34;Boron Carbide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicon-carbide&#34;,&#34;nodeId&#34;:&#34;silicon-carbide&#34;,&#34;humanReadableId&#34;:&#34;Silicon Carbide&#34;,&#34;label&#34;:&#34;Silicon Carbide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tantalum-carbide&#34;,&#34;nodeId&#34;:&#34;tantalum-carbide&#34;,&#34;humanReadableId&#34;:&#34;Tantalum Carbide&#34;,&#34;label&#34;:&#34;Tantalum Carbide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;titanium-carbide&#34;,&#34;nodeId&#34;:&#34;titanium-carbide&#34;,&#34;humanReadableId&#34;:&#34;Titanium Carbide&#34;,&#34;label&#34;:&#34;Titanium Carbide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tungsten-carbide&#34;,&#34;nodeId&#34;:&#34;tungsten-carbide&#34;,&#34;humanReadableId&#34;:&#34;Tungsten Carbide&#34;,&#34;label&#34;:&#34;Tungsten Carbide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zirconium-carbide&#34;,&#34;nodeId&#34;:&#34;zirconium-carbide&#34;,&#34;humanReadableId&#34;:&#34;Zirconium Carbide&#34;,&#34;label&#34;:&#34;Zirconium Carbide&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;nitride-based&#34;,&#34;nodeId&#34;:&#34;nitride-based&#34;,&#34;humanReadableId&#34;:&#34;Nitride Based&#34;,&#34;label&#34;:&#34;Nitride Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-nitirde&#34;,&#34;nodeId&#34;:&#34;aluminium-nitirde&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Nitirde&#34;,&#34;label&#34;:&#34;Aluminium Nitirde&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;boron-nitride&#34;,&#34;nodeId&#34;:&#34;boron-nitride&#34;,&#34;humanReadableId&#34;:&#34;Boron Nitride&#34;,&#34;label&#34;:&#34;Boron Nitride&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicon-nitride&#34;,&#34;nodeId&#34;:&#34;silicon-nitride&#34;,&#34;humanReadableId&#34;:&#34;Silicon Nitride&#34;,&#34;label&#34;:&#34;Silicon Nitride&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;titanium-nitride&#34;,&#34;nodeId&#34;:&#34;titanium-nitride&#34;,&#34;humanReadableId&#34;:&#34;Titanium Nitride&#34;,&#34;label&#34;:&#34;Titanium Nitride&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;silicate-based&#34;,&#34;nodeId&#34;:&#34;silicate-based&#34;,&#34;humanReadableId&#34;:&#34;Silicate Based&#34;,&#34;label&#34;:&#34;Silicate Based&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;sulfide-based&#34;,&#34;nodeId&#34;:&#34;sulfide-based&#34;,&#34;humanReadableId&#34;:&#34;Sulfide Based&#34;,&#34;label&#34;:&#34;Sulfide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;bismuth-sulfide&#34;,&#34;nodeId&#34;:&#34;bismuth-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Bismuth Sulfide&#34;,&#34;label&#34;:&#34;Bismuth Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copper-sulfide&#34;,&#34;nodeId&#34;:&#34;copper-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Copper Sulfide&#34;,&#34;label&#34;:&#34;Copper Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;iron-sulfide&#34;,&#34;nodeId&#34;:&#34;iron-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Iron Sulfide&#34;,&#34;label&#34;:&#34;Iron Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;manganese-sulfide&#34;,&#34;nodeId&#34;:&#34;manganese-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Manganese Sulfide&#34;,&#34;label&#34;:&#34;Manganese Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;molybdenum-disulfide&#34;,&#34;nodeId&#34;:&#34;molybdenum-disulfide&#34;,&#34;humanReadableId&#34;:&#34;Molybdenum Disulfide&#34;,&#34;label&#34;:&#34;Molybdenum Disulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;multiphase-metal-sulfide&#34;,&#34;nodeId&#34;:&#34;multiphase-metal-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Multiphase Metal Sulfide&#34;,&#34;label&#34;:&#34;Multiphase Metal Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tin-sulfide&#34;,&#34;nodeId&#34;:&#34;tin-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Tin Sulfide&#34;,&#34;label&#34;:&#34;Tin Sulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tungsten-disulfide&#34;,&#34;nodeId&#34;:&#34;tungsten-disulfide&#34;,&#34;humanReadableId&#34;:&#34;Tungsten Disulfide&#34;,&#34;label&#34;:&#34;Tungsten Disulfide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zinc-sulfide&#34;,&#34;nodeId&#34;:&#34;zinc-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Zinc Sulfide&#34;,&#34;label&#34;:&#34;Zinc Sulfide&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;oxide-based&#34;,&#34;nodeId&#34;:&#34;oxide-based&#34;,&#34;humanReadableId&#34;:&#34;Oxide Based&#34;,&#34;label&#34;:&#34;Oxide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;advanced-ceramic-oxides&#34;,&#34;nodeId&#34;:&#34;advanced-ceramic-oxides&#34;,&#34;humanReadableId&#34;:&#34;Advanced Ceramic Oxides&#34;,&#34;label&#34;:&#34;Advanced Ceramic Oxides&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;aluminium-oxide&#34;,&#34;nodeId&#34;:&#34;aluminium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Oxide&#34;,&#34;label&#34;:&#34;Aluminium Oxide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;beryllium-oxide&#34;,&#34;nodeId&#34;:&#34;beryllium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Beryllium Oxide&#34;,&#34;label&#34;:&#34;Beryllium Oxide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ferrite&#34;,&#34;nodeId&#34;:&#34;ferrite&#34;,&#34;humanReadableId&#34;:&#34;Ferrite&#34;,&#34;label&#34;:&#34;Ferrite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicon-oxide&#34;,&#34;nodeId&#34;:&#34;silicon-oxide&#34;,&#34;humanReadableId&#34;:&#34;Silicon Oxide&#34;,&#34;label&#34;:&#34;Silicon Oxide&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-silicate&#34;,&#34;nodeId&#34;:&#34;aluminium-silicate&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Silicate&#34;,&#34;label&#34;:&#34;Aluminium Silicate&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;magnesium-silicate&#34;,&#34;nodeId&#34;:&#34;magnesium-silicate&#34;,&#34;humanReadableId&#34;:&#34;Magnesium Silicate&#34;,&#34;label&#34;:&#34;Magnesium Silicate&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zirconium-silicate&#34;,&#34;nodeId&#34;:&#34;zirconium-silicate&#34;,&#34;humanReadableId&#34;:&#34;Zirconium Silicate&#34;,&#34;label&#34;:&#34;Zirconium Silicate&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;titanium-oxide&#34;,&#34;nodeId&#34;:&#34;titanium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Titanium Oxide&#34;,&#34;label&#34;:&#34;Titanium Oxide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zirconium-oxide&#34;,&#34;nodeId&#34;:&#34;zirconium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Zirconium Oxide&#34;,&#34;label&#34;:&#34;Zirconium Oxide&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;oxide-based-ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;oxide-based-ceramic-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;multi-oxide-ceramics&#34;,&#34;nodeId&#34;:&#34;multi-oxide-ceramics&#34;,&#34;humanReadableId&#34;:&#34;Multi-Oxide Ceramics&#34;,&#34;label&#34;:&#34;Multi-Oxide Ceramics&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicon-oxide&#34;,&#34;nodeId&#34;:&#34;silicon-oxide-&#34;,&#34;humanReadableId&#34;:&#34;Silicon Oxide&#34;,&#34;label&#34;:&#34;Silicon Oxide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ytterbium-oxide&#34;,&#34;nodeId&#34;:&#34;ytterbium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Ytterbium Oxide&#34;,&#34;label&#34;:&#34;Ytterbium Oxide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;yttrium-oxide&#34;,&#34;nodeId&#34;:&#34;yttrium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Yttrium Oxide&#34;,&#34;label&#34;:&#34;Yttrium Oxide&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;natural-ceramic&#34;,&#34;nodeId&#34;:&#34;natural-ceramic&#34;,&#34;humanReadableId&#34;:&#34;Natural Ceramic&#34;,&#34;label&#34;:&#34;Natural Ceramic&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;composite&#34;,&#34;nodeId&#34;:&#34;composite&#34;,&#34;humanReadableId&#34;:&#34;Composite&#34;,&#34;label&#34;:&#34;Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;ceramic-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;carbide-based-ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;carbide-based-ceramic-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Carbide Based Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Carbide Based Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;oxide-based-ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;oxide-based-ceramic-matrix-composite-&#34;,&#34;humanReadableId&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;metal-matrix-composite&#34;,&#34;nodeId&#34;:&#34;metal-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Metal Matrix Composite&#34;,&#34;label&#34;:&#34;Metal Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-matrix-composite&#34;,&#34;nodeId&#34;:&#34;aluminium-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Matrix Composite&#34;,&#34;label&#34;:&#34;Aluminium Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;beryllium-matrix-composite&#34;,&#34;nodeId&#34;:&#34;beryllium-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Beryllium Matrix Composite&#34;,&#34;label&#34;:&#34;Beryllium Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-matrix-composite&#34;,&#34;nodeId&#34;:&#34;cobalt-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Matrix Composite&#34;,&#34;label&#34;:&#34;Cobalt Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-and-nickel-matrix-composite&#34;,&#34;nodeId&#34;:&#34;cobalt-and-nickel-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Cobalt and Nickel Matrix Composite&#34;,&#34;label&#34;:&#34;Cobalt and Nickel Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;iron-matrix-composite&#34;,&#34;nodeId&#34;:&#34;iron-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Iron Matrix Composite&#34;,&#34;label&#34;:&#34;Iron Matrix Composite&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-matrix-composite&#34;,&#34;nodeId&#34;:&#34;nickel-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Nickel Matrix Composite&#34;,&#34;label&#34;:&#34;Nickel Matrix Composite&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polymer-matrix-composite&#34;,&#34;nodeId&#34;:&#34;polymer-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Polymer Matrix Composite&#34;,&#34;label&#34;:&#34;Polymer Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;thermoset-polymer-matrix-composite&#34;,&#34;nodeId&#34;:&#34;thermoset-polymer-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Thermoset Polymer Matrix Composite&#34;,&#34;label&#34;:&#34;Thermoset Polymer Matrix Composite&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;glass&#34;,&#34;nodeId&#34;:&#34;glass&#34;,&#34;humanReadableId&#34;:&#34;Glass&#34;,&#34;label&#34;:&#34;Glass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;glass-ceramic&#34;,&#34;nodeId&#34;:&#34;glass-ceramic&#34;,&#34;humanReadableId&#34;:&#34;Glass Ceramic&#34;,&#34;label&#34;:&#34;Glass Ceramic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;las-glass-ceramic&#34;,&#34;nodeId&#34;:&#34;las-glass-ceramic&#34;,&#34;humanReadableId&#34;:&#34;LAS Glass Ceramic&#34;,&#34;label&#34;:&#34;LAS Glass Ceramic&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;lead-glass&#34;,&#34;nodeId&#34;:&#34;lead-glass&#34;,&#34;humanReadableId&#34;:&#34;Lead Glass&#34;,&#34;label&#34;:&#34;Lead Glass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicate-glass&#34;,&#34;nodeId&#34;:&#34;silicate-glass&#34;,&#34;humanReadableId&#34;:&#34;Silicate Glass&#34;,&#34;label&#34;:&#34;Silicate Glass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminosilicate&#34;,&#34;nodeId&#34;:&#34;aluminosilicate&#34;,&#34;humanReadableId&#34;:&#34;Aluminosilicate&#34;,&#34;label&#34;:&#34;Aluminosilicate&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;borosilicate&#34;,&#34;nodeId&#34;:&#34;borosilicate&#34;,&#34;humanReadableId&#34;:&#34;Borosilicate&#34;,&#34;label&#34;:&#34;Borosilicate&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;fused-quartz&#34;,&#34;nodeId&#34;:&#34;fused-quartz&#34;,&#34;humanReadableId&#34;:&#34;Fused Quartz&#34;,&#34;label&#34;:&#34;Fused Quartz&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;soda-lime-silicate&#34;,&#34;nodeId&#34;:&#34;soda-lime-silicate&#34;,&#34;humanReadableId&#34;:&#34;Soda Lime Silicate&#34;,&#34;label&#34;:&#34;Soda Lime Silicate&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;metal&#34;,&#34;nodeId&#34;:&#34;metal&#34;,&#34;humanReadableId&#34;:&#34;Metal&#34;,&#34;label&#34;:&#34;Metal&#34;,&#34;partiallyChecked&#34;:true,&#34;materialsCount&#34;:2214,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium&#34;,&#34;nodeId&#34;:&#34;aluminium&#34;,&#34;humanReadableId&#34;:&#34;Aluminium&#34;,&#34;label&#34;:&#34;Aluminium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-master-alloy&#34;,&#34;nodeId&#34;:&#34;aluminium-master-alloy&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Master Alloy&#34;,&#34;label&#34;:&#34;Aluminium Master Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-aluminium&#34;,&#34;nodeId&#34;:&#34;cast-aluminium&#34;,&#34;humanReadableId&#34;:&#34;Cast Aluminium&#34;,&#34;label&#34;:&#34;Cast Aluminium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;1xx-x&#34;,&#34;nodeId&#34;:&#34;1xx-x&#34;,&#34;humanReadableId&#34;:&#34;1xx.x&#34;,&#34;label&#34;:&#34;1xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;2xx-x&#34;,&#34;nodeId&#34;:&#34;2xx-x&#34;,&#34;humanReadableId&#34;:&#34;2xx.x&#34;,&#34;label&#34;:&#34;2xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;3xx-x&#34;,&#34;nodeId&#34;:&#34;3xx-x&#34;,&#34;humanReadableId&#34;:&#34;3xx.x&#34;,&#34;label&#34;:&#34;3xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;4xx-x&#34;,&#34;nodeId&#34;:&#34;4xx-x&#34;,&#34;humanReadableId&#34;:&#34;4xx.x&#34;,&#34;label&#34;:&#34;4xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;5xx-x&#34;,&#34;nodeId&#34;:&#34;5xx-x&#34;,&#34;humanReadableId&#34;:&#34;5xx.x&#34;,&#34;label&#34;:&#34;5xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;7xx-x&#34;,&#34;nodeId&#34;:&#34;7xx-x&#34;,&#34;humanReadableId&#34;:&#34;7xx.x&#34;,&#34;label&#34;:&#34;7xx.x&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;8xx-x&#34;,&#34;nodeId&#34;:&#34;8xx-x&#34;,&#34;humanReadableId&#34;:&#34;8xx.x&#34;,&#34;label&#34;:&#34;8xx.x&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;wrought-aluminium&#34;,&#34;nodeId&#34;:&#34;wrought-aluminium&#34;,&#34;humanReadableId&#34;:&#34;Wrought Aluminium&#34;,&#34;label&#34;:&#34;Wrought Aluminium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;1000-series&#34;,&#34;nodeId&#34;:&#34;1000-series&#34;,&#34;humanReadableId&#34;:&#34;1000 Series&#34;,&#34;label&#34;:&#34;1000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;2000-series&#34;,&#34;nodeId&#34;:&#34;2000-series&#34;,&#34;humanReadableId&#34;:&#34;2000 Series&#34;,&#34;label&#34;:&#34;2000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;3000-series&#34;,&#34;nodeId&#34;:&#34;3000-series&#34;,&#34;humanReadableId&#34;:&#34;3000 Series&#34;,&#34;label&#34;:&#34;3000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;4000-series&#34;,&#34;nodeId&#34;:&#34;4000-series&#34;,&#34;humanReadableId&#34;:&#34;4000 Series&#34;,&#34;label&#34;:&#34;4000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;5000-series&#34;,&#34;nodeId&#34;:&#34;5000-series&#34;,&#34;humanReadableId&#34;:&#34;5000 Series&#34;,&#34;label&#34;:&#34;5000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;6000-series&#34;,&#34;nodeId&#34;:&#34;6000-series&#34;,&#34;humanReadableId&#34;:&#34;6000 Series&#34;,&#34;label&#34;:&#34;6000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;7000-series&#34;,&#34;nodeId&#34;:&#34;7000-series&#34;,&#34;humanReadableId&#34;:&#34;7000 Series&#34;,&#34;label&#34;:&#34;7000 Series&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;8000-series&#34;,&#34;nodeId&#34;:&#34;8000-series&#34;,&#34;humanReadableId&#34;:&#34;8000 Series&#34;,&#34;label&#34;:&#34;8000 Series&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;cladbimetal&#34;,&#34;nodeId&#34;:&#34;cladbimetal&#34;,&#34;humanReadableId&#34;:&#34;Clad / Bimetal&#34;,&#34;label&#34;:&#34;Clad / Bimetal&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt&#34;,&#34;nodeId&#34;:&#34;cobalt&#34;,&#34;humanReadableId&#34;:&#34;Cobalt&#34;,&#34;label&#34;:&#34;Cobalt&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cobalt-chromium&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium&#34;,&#34;label&#34;:&#34;Cobalt Chromium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-chromium-molybdenum&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium-molybdenum&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium Molybdenum&#34;,&#34;label&#34;:&#34;Cobalt Chromium Molybdenum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-chromium-nickel-tungsten&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium-nickel-tungsten&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium Nickel Tungsten&#34;,&#34;label&#34;:&#34;Cobalt Chromium Nickel Tungsten&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-chromium-tungsten&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium-tungsten&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium Tungsten&#34;,&#34;label&#34;:&#34;Cobalt Chromium Tungsten&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-nickel-chromium-molybdenum&#34;,&#34;nodeId&#34;:&#34;cobalt-nickel-chromium-molybdenum&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Nickel Chromium Molybdenum&#34;,&#34;label&#34;:&#34;Cobalt Nickel Chromium Molybdenum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cobalt-superalloy&#34;,&#34;nodeId&#34;:&#34;cobalt-superalloy&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Superalloy&#34;,&#34;label&#34;:&#34;Cobalt Superalloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;unclassified-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;unclassified-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Cobalt Alloy&#34;,&#34;label&#34;:&#34;Unclassified Cobalt Alloy&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;copper&#34;,&#34;nodeId&#34;:&#34;copper&#34;,&#34;humanReadableId&#34;:&#34;Copper&#34;,&#34;label&#34;:&#34;Copper&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper&#34;,&#34;nodeId&#34;:&#34;cast-copper&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper&#34;,&#34;label&#34;:&#34;Cast Copper&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper-brass&#34;,&#34;nodeId&#34;:&#34;cast-copper-brass&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Brass&#34;,&#34;label&#34;:&#34;Cast Copper Brass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper-brass-yellow-brass&#34;,&#34;nodeId&#34;:&#34;cast-copper-brass-yellow-brass&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Brass Yellow Brass&#34;,&#34;label&#34;:&#34;Cast Copper Brass Yellow Brass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-copper-silicon-brass&#34;,&#34;nodeId&#34;:&#34;cast-copper-silicon-brass&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Silicon Brass&#34;,&#34;label&#34;:&#34;Cast Copper Silicon Brass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copper-bismuth-alloy&#34;,&#34;nodeId&#34;:&#34;copper-bismuth-alloy&#34;,&#34;humanReadableId&#34;:&#34;Copper Bismuth Alloy&#34;,&#34;label&#34;:&#34;Copper Bismuth Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;red-brass&#34;,&#34;nodeId&#34;:&#34;red-brass&#34;,&#34;humanReadableId&#34;:&#34;Red Brass&#34;,&#34;label&#34;:&#34;Red Brass&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;cast-copper-bronze&#34;,&#34;nodeId&#34;:&#34;cast-copper-bronze&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Bronze&#34;,&#34;label&#34;:&#34;Cast Copper Bronze&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper-bronze-aluminium-bronze&#34;,&#34;nodeId&#34;:&#34;cast-copper-bronze-aluminium-bronze&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Bronze Aluminium Bronze&#34;,&#34;label&#34;:&#34;Cast Copper Bronze Aluminium Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;leaded-tin-bronze&#34;,&#34;nodeId&#34;:&#34;leaded-tin-bronze&#34;,&#34;humanReadableId&#34;:&#34;Leaded Tin Bronze&#34;,&#34;label&#34;:&#34;Leaded Tin Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-tin-bronze&#34;,&#34;nodeId&#34;:&#34;nickel-tin-bronze&#34;,&#34;humanReadableId&#34;:&#34;Nickel Tin Bronze&#34;,&#34;label&#34;:&#34;Nickel Tin Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tin-bronze&#34;,&#34;nodeId&#34;:&#34;tin-bronze&#34;,&#34;humanReadableId&#34;:&#34;Tin Bronze&#34;,&#34;label&#34;:&#34;Tin Bronze&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;cast-copper-high-copper-alloy&#34;,&#34;nodeId&#34;:&#34;cast-copper-high-copper-alloy&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper High Copper Alloy&#34;,&#34;label&#34;:&#34;Cast Copper High Copper Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-copper-nickel-grade&#34;,&#34;nodeId&#34;:&#34;cast-copper-nickel-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Nickel Grade&#34;,&#34;label&#34;:&#34;Cast Copper Nickel Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-copper-nickel-silver-grade&#34;,&#34;nodeId&#34;:&#34;cast-copper-nickel-silver-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Nickel Silver Grade&#34;,&#34;label&#34;:&#34;Cast Copper Nickel Silver Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-copper-purelow-alloyed-copper&#34;,&#34;nodeId&#34;:&#34;cast-copper-purelow-alloyed-copper&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Pure / Low Alloyed Copper&#34;,&#34;label&#34;:&#34;Cast Copper Pure / Low Alloyed Copper&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copper-lead-alloy&#34;,&#34;nodeId&#34;:&#34;copper-lead-alloy&#34;,&#34;humanReadableId&#34;:&#34;Copper-Lead Alloy&#34;,&#34;label&#34;:&#34;Copper-Lead Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;special-alloy&#34;,&#34;nodeId&#34;:&#34;special-alloy&#34;,&#34;humanReadableId&#34;:&#34;Special Alloy&#34;,&#34;label&#34;:&#34;Special Alloy&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;welding&#34;,&#34;nodeId&#34;:&#34;welding&#34;,&#34;humanReadableId&#34;:&#34;Welding&#34;,&#34;label&#34;:&#34;Welding&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper&#34;,&#34;nodeId&#34;:&#34;wrought-copper&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper&#34;,&#34;label&#34;:&#34;Wrought Copper&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;unclassified-wrought-copper&#34;,&#34;nodeId&#34;:&#34;unclassified-wrought-copper&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Wrought Copper&#34;,&#34;label&#34;:&#34;Unclassified Wrought Copper&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-brass&#34;,&#34;nodeId&#34;:&#34;wrought-copper-brass&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Brass&#34;,&#34;label&#34;:&#34;Wrought Copper Brass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;leaded-brass&#34;,&#34;nodeId&#34;:&#34;leaded-brass&#34;,&#34;humanReadableId&#34;:&#34;Leaded Brass&#34;,&#34;label&#34;:&#34;Leaded Brass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;other-copper-zinc-alloy&#34;,&#34;nodeId&#34;:&#34;other-copper-zinc-alloy&#34;,&#34;humanReadableId&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;label&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tin-brass&#34;,&#34;nodeId&#34;:&#34;tin-brass&#34;,&#34;humanReadableId&#34;:&#34;Tin Brass&#34;,&#34;label&#34;:&#34;Tin Brass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-brass-yellow-brass&#34;,&#34;nodeId&#34;:&#34;wrought-copper-brass-yellow-brass&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Brass Yellow Brass&#34;,&#34;label&#34;:&#34;Wrought Copper Brass Yellow Brass&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;yellow-wrought-brass&#34;,&#34;nodeId&#34;:&#34;yellow-wrought-brass&#34;,&#34;humanReadableId&#34;:&#34;Yellow Wrought Brass&#34;,&#34;label&#34;:&#34;Yellow Wrought Brass&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;wrought-copper-bronze&#34;,&#34;nodeId&#34;:&#34;wrought-copper-bronze&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Bronze&#34;,&#34;label&#34;:&#34;Wrought Copper Bronze&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;copper-silver-zinc-alloy&#34;,&#34;nodeId&#34;:&#34;copper-silver-zinc-alloy&#34;,&#34;humanReadableId&#34;:&#34;Copper Silver Zinc Alloy&#34;,&#34;label&#34;:&#34;Copper Silver Zinc Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;leaded-phosphor-bronze&#34;,&#34;nodeId&#34;:&#34;leaded-phosphor-bronze&#34;,&#34;humanReadableId&#34;:&#34;Leaded Phosphor Bronze&#34;,&#34;label&#34;:&#34;Leaded Phosphor Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;other-copper-zinc-alloy&#34;,&#34;nodeId&#34;:&#34;other-copper-zinc-alloy-&#34;,&#34;humanReadableId&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;label&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;phosphor-bronze&#34;,&#34;nodeId&#34;:&#34;phosphor-bronze&#34;,&#34;humanReadableId&#34;:&#34;Phosphor Bronze&#34;,&#34;label&#34;:&#34;Phosphor Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-bronze-aluminium-bronze&#34;,&#34;nodeId&#34;:&#34;wrought-copper-bronze-aluminium-bronze&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Bronze Aluminium Bronze&#34;,&#34;label&#34;:&#34;Wrought Copper Bronze Aluminium Bronze&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-bronze-silicon-bronze&#34;,&#34;nodeId&#34;:&#34;wrought-copper-bronze-silicon-bronze&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Bronze Silicon Bronze&#34;,&#34;label&#34;:&#34;Wrought Copper Bronze Silicon Bronze&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;wrought-copper-high-copper-alloy&#34;,&#34;nodeId&#34;:&#34;wrought-copper-high-copper-alloy&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper High Copper Alloy&#34;,&#34;label&#34;:&#34;Wrought Copper High Copper Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-nickel-grade&#34;,&#34;nodeId&#34;:&#34;wrought-copper-nickel-grade&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Nickel Grade&#34;,&#34;label&#34;:&#34;Wrought Copper Nickel Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-nickel-silver-grade&#34;,&#34;nodeId&#34;:&#34;wrought-copper-nickel-silver-grade&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Nickel Silver Grade&#34;,&#34;label&#34;:&#34;Wrought Copper Nickel Silver Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-copper-purelow-alloyed-copper&#34;,&#34;nodeId&#34;:&#34;wrought-copper-purelow-alloyed-copper&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Pure / Low Alloyed Copper&#34;,&#34;label&#34;:&#34;Wrought Copper Pure / Low Alloyed Copper&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;iron&#34;,&#34;nodeId&#34;:&#34;iron&#34;,&#34;humanReadableId&#34;:&#34;Iron&#34;,&#34;label&#34;:&#34;Iron&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;alloy-iron&#34;,&#34;nodeId&#34;:&#34;alloy-iron&#34;,&#34;humanReadableId&#34;:&#34;Alloy Iron&#34;,&#34;label&#34;:&#34;Alloy Iron&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-iron&#34;,&#34;nodeId&#34;:&#34;cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Cast Iron&#34;,&#34;label&#34;:&#34;Cast Iron&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ductile--nodular--cast-iron&#34;,&#34;nodeId&#34;:&#34;ductile--nodular--cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Ductile (Nodular) Cast Iron&#34;,&#34;label&#34;:&#34;Ductile (Nodular) Cast Iron&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;grey-cast-iron&#34;,&#34;nodeId&#34;:&#34;grey-cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Grey Cast Iron&#34;,&#34;label&#34;:&#34;Grey Cast Iron&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;malleable-cast-iron&#34;,&#34;nodeId&#34;:&#34;malleable-cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Malleable Cast Iron&#34;,&#34;label&#34;:&#34;Malleable Cast Iron&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;other-cast-iron-alloy&#34;,&#34;nodeId&#34;:&#34;other-cast-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Other Cast Iron Alloy&#34;,&#34;label&#34;:&#34;Other Cast Iron Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;white-cast-iron&#34;,&#34;nodeId&#34;:&#34;white-cast-iron&#34;,&#34;humanReadableId&#34;:&#34;White Cast Iron&#34;,&#34;label&#34;:&#34;White Cast Iron&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;ferromolybdenum&#34;,&#34;nodeId&#34;:&#34;ferromolybdenum&#34;,&#34;humanReadableId&#34;:&#34;Ferromolybdenum&#34;,&#34;label&#34;:&#34;Ferromolybdenum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ferrosilicon&#34;,&#34;nodeId&#34;:&#34;ferrosilicon&#34;,&#34;humanReadableId&#34;:&#34;Ferrosilicon&#34;,&#34;label&#34;:&#34;Ferrosilicon&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ferrovanadium&#34;,&#34;nodeId&#34;:&#34;ferrovanadium&#34;,&#34;humanReadableId&#34;:&#34;Ferrovanadium&#34;,&#34;label&#34;:&#34;Ferrovanadium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;iron-alloy&#34;,&#34;nodeId&#34;:&#34;iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Iron Alloy&#34;,&#34;label&#34;:&#34;Iron Alloy&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-nickel-cobalt-iron-alloy&#34;,&#34;nodeId&#34;:&#34;aluminium-nickel-cobalt-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Nickel Cobalt Iron Alloy&#34;,&#34;label&#34;:&#34;Aluminium Nickel Cobalt Iron Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;miscellaneous-iron-alloy&#34;,&#34;nodeId&#34;:&#34;miscellaneous-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Miscellaneous Iron Alloy&#34;,&#34;label&#34;:&#34;Miscellaneous Iron Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;soft-magnetic-iron&#34;,&#34;nodeId&#34;:&#34;soft-magnetic-iron&#34;,&#34;humanReadableId&#34;:&#34;Soft Magnetic Iron&#34;,&#34;label&#34;:&#34;Soft Magnetic Iron&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;malleable-cast-iron&#34;,&#34;nodeId&#34;:&#34;malleable-cast-iron-&#34;,&#34;humanReadableId&#34;:&#34;Malleable Cast Iron&#34;,&#34;label&#34;:&#34;Malleable Cast Iron&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;magnesium&#34;,&#34;nodeId&#34;:&#34;magnesium&#34;,&#34;humanReadableId&#34;:&#34;Magnesium&#34;,&#34;label&#34;:&#34;Magnesium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-grade&#34;,&#34;nodeId&#34;:&#34;aluminium-grade&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Grade&#34;,&#34;label&#34;:&#34;Aluminium Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-aluminium-manganese-grade&#34;,&#34;nodeId&#34;:&#34;cast-aluminium-manganese-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Aluminium Manganese Grade&#34;,&#34;label&#34;:&#34;Cast Aluminium Manganese Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-rare-earth-grade&#34;,&#34;nodeId&#34;:&#34;cast-rare-earth-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Rare Earth Grade&#34;,&#34;label&#34;:&#34;Cast Rare Earth Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-wrought-aluminium-zinc-grade&#34;,&#34;nodeId&#34;:&#34;cast-wrought-aluminium-zinc-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast/Wrought Aluminium Zinc Grade&#34;,&#34;label&#34;:&#34;Cast/Wrought Aluminium Zinc Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cast-wrought-unclassified-grade&#34;,&#34;nodeId&#34;:&#34;cast-wrought-unclassified-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast/Wrought Unclassified Grade&#34;,&#34;label&#34;:&#34;Cast/Wrought Unclassified Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;pure-magnesium&#34;,&#34;nodeId&#34;:&#34;pure-magnesium&#34;,&#34;humanReadableId&#34;:&#34;Pure Magnesium&#34;,&#34;label&#34;:&#34;Pure Magnesium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;rare-earth-grade&#34;,&#34;nodeId&#34;:&#34;rare-earth-grade&#34;,&#34;humanReadableId&#34;:&#34;Rare Earth Grade&#34;,&#34;label&#34;:&#34;Rare Earth Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wrought-zinc-grade&#34;,&#34;nodeId&#34;:&#34;wrought-zinc-grade&#34;,&#34;humanReadableId&#34;:&#34;Wrought Zinc Grade&#34;,&#34;label&#34;:&#34;Wrought Zinc Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;yttrium-grade&#34;,&#34;nodeId&#34;:&#34;yttrium-grade&#34;,&#34;humanReadableId&#34;:&#34;Yttrium Grade&#34;,&#34;label&#34;:&#34;Yttrium Grade&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zinc-grade&#34;,&#34;nodeId&#34;:&#34;zinc-grade&#34;,&#34;humanReadableId&#34;:&#34;Zinc Grade&#34;,&#34;label&#34;:&#34;Zinc Grade&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;manganese&#34;,&#34;nodeId&#34;:&#34;manganese&#34;,&#34;humanReadableId&#34;:&#34;Manganese&#34;,&#34;label&#34;:&#34;Manganese&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel&#34;,&#34;nodeId&#34;:&#34;nickel&#34;,&#34;humanReadableId&#34;:&#34;Nickel&#34;,&#34;label&#34;:&#34;Nickel&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;nickel-chromium-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-chromium-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Cobalt Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Cobalt Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-chromium-iron-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Iron Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Iron Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-chromium-molybdenum-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-molybdenum-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Molybdenum Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Molybdenum Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Cobalt Alloy&#34;,&#34;label&#34;:&#34;Nickel Cobalt Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-copper-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-copper-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Copper Alloy&#34;,&#34;label&#34;:&#34;Nickel Copper Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-iron-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Iron Alloy&#34;,&#34;label&#34;:&#34;Nickel Iron Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-molybdenum-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-molybdenum-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Molybdenum Alloy&#34;,&#34;label&#34;:&#34;Nickel Molybdenum Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-superalloy&#34;,&#34;nodeId&#34;:&#34;nickel-superalloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Superalloy&#34;,&#34;label&#34;:&#34;Nickel Superalloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-welding-filler&#34;,&#34;nodeId&#34;:&#34;nickel-welding-filler&#34;,&#34;humanReadableId&#34;:&#34;Nickel Welding Filler&#34;,&#34;label&#34;:&#34;Nickel Welding Filler&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;other-nickel-alloy&#34;,&#34;nodeId&#34;:&#34;other-nickel-alloy&#34;,&#34;humanReadableId&#34;:&#34;Other Nickel Alloy&#34;,&#34;label&#34;:&#34;Other Nickel Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;pure-low-nickel-alloy&#34;,&#34;nodeId&#34;:&#34;pure-low-nickel-alloy&#34;,&#34;humanReadableId&#34;:&#34;Pure/Low Nickel Alloy&#34;,&#34;label&#34;:&#34;Pure/Low Nickel Alloy&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;noble-metal&#34;,&#34;nodeId&#34;:&#34;noble-metal&#34;,&#34;humanReadableId&#34;:&#34;Noble Metal&#34;,&#34;label&#34;:&#34;Noble Metal&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;gold&#34;,&#34;nodeId&#34;:&#34;gold&#34;,&#34;humanReadableId&#34;:&#34;Gold&#34;,&#34;label&#34;:&#34;Gold&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;iridium&#34;,&#34;nodeId&#34;:&#34;iridium&#34;,&#34;humanReadableId&#34;:&#34;Iridium&#34;,&#34;label&#34;:&#34;Iridium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;palladium&#34;,&#34;nodeId&#34;:&#34;palladium&#34;,&#34;humanReadableId&#34;:&#34;Palladium&#34;,&#34;label&#34;:&#34;Palladium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;platinum&#34;,&#34;nodeId&#34;:&#34;platinum&#34;,&#34;humanReadableId&#34;:&#34;Platinum&#34;,&#34;label&#34;:&#34;Platinum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;rhodium&#34;,&#34;nodeId&#34;:&#34;rhodium&#34;,&#34;humanReadableId&#34;:&#34;Rhodium&#34;,&#34;label&#34;:&#34;Rhodium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silver&#34;,&#34;nodeId&#34;:&#34;silver&#34;,&#34;humanReadableId&#34;:&#34;Silver&#34;,&#34;label&#34;:&#34;Silver&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;other-metal&#34;,&#34;nodeId&#34;:&#34;other-metal&#34;,&#34;humanReadableId&#34;:&#34;Other Metal&#34;,&#34;label&#34;:&#34;Other Metal&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;beryllium&#34;,&#34;nodeId&#34;:&#34;beryllium&#34;,&#34;humanReadableId&#34;:&#34;Beryllium&#34;,&#34;label&#34;:&#34;Beryllium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;cadmium&#34;,&#34;nodeId&#34;:&#34;cadmium&#34;,&#34;humanReadableId&#34;:&#34;Cadmium&#34;,&#34;label&#34;:&#34;Cadmium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;chromium&#34;,&#34;nodeId&#34;:&#34;chromium&#34;,&#34;humanReadableId&#34;:&#34;Chromium&#34;,&#34;label&#34;:&#34;Chromium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;lead&#34;,&#34;nodeId&#34;:&#34;lead&#34;,&#34;humanReadableId&#34;:&#34;Lead&#34;,&#34;label&#34;:&#34;Lead&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;lead-antimony&#34;,&#34;nodeId&#34;:&#34;lead-antimony&#34;,&#34;humanReadableId&#34;:&#34;Lead Antimony&#34;,&#34;label&#34;:&#34;Lead Antimony&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;lead-tin&#34;,&#34;nodeId&#34;:&#34;lead-tin&#34;,&#34;humanReadableId&#34;:&#34;Lead Tin&#34;,&#34;label&#34;:&#34;Lead Tin&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;pure-low-alloyed-lead&#34;,&#34;nodeId&#34;:&#34;pure-low-alloyed-lead&#34;,&#34;humanReadableId&#34;:&#34;Pure/Low Alloyed Lead&#34;,&#34;label&#34;:&#34;Pure/Low Alloyed Lead&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;lithium&#34;,&#34;nodeId&#34;:&#34;lithium&#34;,&#34;humanReadableId&#34;:&#34;Lithium&#34;,&#34;label&#34;:&#34;Lithium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;neodymium&#34;,&#34;nodeId&#34;:&#34;neodymium&#34;,&#34;humanReadableId&#34;:&#34;Neodymium&#34;,&#34;label&#34;:&#34;Neodymium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;neodymium-iron-boron-alloy&#34;,&#34;nodeId&#34;:&#34;neodymium-iron-boron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Neodymium Iron Boron Alloy&#34;,&#34;label&#34;:&#34;Neodymium Iron Boron Alloy&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;samarium&#34;,&#34;nodeId&#34;:&#34;samarium&#34;,&#34;humanReadableId&#34;:&#34;Samarium&#34;,&#34;label&#34;:&#34;Samarium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;samarium-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;samarium-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Samarium Cobalt Alloy&#34;,&#34;label&#34;:&#34;Samarium Cobalt Alloy&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;tin&#34;,&#34;nodeId&#34;:&#34;tin&#34;,&#34;humanReadableId&#34;:&#34;Tin&#34;,&#34;label&#34;:&#34;Tin&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;pure-low-alloyed-tin&#34;,&#34;nodeId&#34;:&#34;pure-low-alloyed-tin&#34;,&#34;humanReadableId&#34;:&#34;Pure/Low Alloyed Tin&#34;,&#34;label&#34;:&#34;Pure/Low Alloyed Tin&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tin-antimony&#34;,&#34;nodeId&#34;:&#34;tin-antimony&#34;,&#34;humanReadableId&#34;:&#34;Tin Antimony&#34;,&#34;label&#34;:&#34;Tin Antimony&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tin-lead&#34;,&#34;nodeId&#34;:&#34;tin-lead&#34;,&#34;humanReadableId&#34;:&#34;Tin Lead&#34;,&#34;label&#34;:&#34;Tin Lead&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;unclassified-tin&#34;,&#34;nodeId&#34;:&#34;unclassified-tin&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Tin&#34;,&#34;label&#34;:&#34;Unclassified Tin&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;zinc&#34;,&#34;nodeId&#34;:&#34;zinc&#34;,&#34;humanReadableId&#34;:&#34;Zinc&#34;,&#34;label&#34;:&#34;Zinc&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;unalloyed-zinc&#34;,&#34;nodeId&#34;:&#34;unalloyed-zinc&#34;,&#34;humanReadableId&#34;:&#34;Unalloyed Zinc&#34;,&#34;label&#34;:&#34;Unalloyed Zinc&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;unclassified-zinc&#34;,&#34;nodeId&#34;:&#34;unclassified-zinc&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Zinc&#34;,&#34;label&#34;:&#34;Unclassified Zinc&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zinc-aluminium&#34;,&#34;nodeId&#34;:&#34;zinc-aluminium&#34;,&#34;humanReadableId&#34;:&#34;Zinc Aluminium&#34;,&#34;label&#34;:&#34;Zinc Aluminium&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;refractory-metal&#34;,&#34;nodeId&#34;:&#34;refractory-metal&#34;,&#34;humanReadableId&#34;:&#34;Refractory Metal&#34;,&#34;label&#34;:&#34;Refractory Metal&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;hafnium&#34;,&#34;nodeId&#34;:&#34;hafnium&#34;,&#34;humanReadableId&#34;:&#34;Hafnium&#34;,&#34;label&#34;:&#34;Hafnium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;molybdenum&#34;,&#34;nodeId&#34;:&#34;molybdenum&#34;,&#34;humanReadableId&#34;:&#34;Molybdenum&#34;,&#34;label&#34;:&#34;Molybdenum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;niobium&#34;,&#34;nodeId&#34;:&#34;niobium&#34;,&#34;humanReadableId&#34;:&#34;Niobium&#34;,&#34;label&#34;:&#34;Niobium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;rhenium&#34;,&#34;nodeId&#34;:&#34;rhenium&#34;,&#34;humanReadableId&#34;:&#34;Rhenium&#34;,&#34;label&#34;:&#34;Rhenium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tantalum&#34;,&#34;nodeId&#34;:&#34;tantalum&#34;,&#34;humanReadableId&#34;:&#34;Tantalum&#34;,&#34;label&#34;:&#34;Tantalum&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;tungsten&#34;,&#34;nodeId&#34;:&#34;tungsten&#34;,&#34;humanReadableId&#34;:&#34;Tungsten&#34;,&#34;label&#34;:&#34;Tungsten&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;vanadium&#34;,&#34;nodeId&#34;:&#34;vanadium&#34;,&#34;humanReadableId&#34;:&#34;Vanadium&#34;,&#34;label&#34;:&#34;Vanadium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;zirconium&#34;,&#34;nodeId&#34;:&#34;zirconium&#34;,&#34;humanReadableId&#34;:&#34;Zirconium&#34;,&#34;label&#34;:&#34;Zirconium&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;steel&#34;,&#34;nodeId&#34;:&#34;steel&#34;,&#34;humanReadableId&#34;:&#34;Steel&#34;,&#34;label&#34;:&#34;Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;alloy-steel&#34;,&#34;nodeId&#34;:&#34;alloy-steel&#34;,&#34;humanReadableId&#34;:&#34;Alloy Steel&#34;,&#34;label&#34;:&#34;Alloy Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;chromium-molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;chromium-molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Molybdenum Steel&#34;,&#34;label&#34;:&#34;Chromium Molybdenum Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;chromium-molybdenum-vanadium-steel&#34;,&#34;nodeId&#34;:&#34;chromium-molybdenum-vanadium-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Molybdenum Vanadium Steel&#34;,&#34;label&#34;:&#34;Chromium Molybdenum Vanadium Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;chromium-steel&#34;,&#34;nodeId&#34;:&#34;chromium-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Steel&#34;,&#34;label&#34;:&#34;Chromium Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;chromium-vanadium-steel&#34;,&#34;nodeId&#34;:&#34;chromium-vanadium-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Vanadium Steel&#34;,&#34;label&#34;:&#34;Chromium Vanadium Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;manganese-steel&#34;,&#34;nodeId&#34;:&#34;manganese-steel&#34;,&#34;humanReadableId&#34;:&#34;Manganese Steel&#34;,&#34;label&#34;:&#34;Manganese Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Molybdenum Steel&#34;,&#34;label&#34;:&#34;Molybdenum Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;nickel-chromium-molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Molybdenum Steel&#34;,&#34;label&#34;:&#34;Nickel Chromium Molybdenum Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;nickel-chromium-steel&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Steel&#34;,&#34;label&#34;:&#34;Nickel Chromium Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;nickel-molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;nickel-molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Molybdenum Steel&#34;,&#34;label&#34;:&#34;Nickel Molybdenum Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nickel-steel&#34;,&#34;nodeId&#34;:&#34;nickel-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Steel&#34;,&#34;label&#34;:&#34;Nickel Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;nitriding-steel&#34;,&#34;nodeId&#34;:&#34;nitriding-steel&#34;,&#34;humanReadableId&#34;:&#34;Nitriding Steel&#34;,&#34;label&#34;:&#34;Nitriding Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;silicon-manganese-steel&#34;,&#34;nodeId&#34;:&#34;silicon-manganese-steel&#34;,&#34;humanReadableId&#34;:&#34;Silicon Manganese Steel&#34;,&#34;label&#34;:&#34;Silicon Manganese Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;silicon-steel&#34;,&#34;nodeId&#34;:&#34;silicon-steel&#34;,&#34;humanReadableId&#34;:&#34;Silicon Steel&#34;,&#34;label&#34;:&#34;Silicon Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;unclassified-low-alloy-steel&#34;,&#34;nodeId&#34;:&#34;unclassified-low-alloy-steel&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Low Alloy Steel&#34;,&#34;label&#34;:&#34;Unclassified Low Alloy Steel&#34;,&#34;checked&#34;:true}]},{&#34;id&#34;:&#34;carbon-steel&#34;,&#34;nodeId&#34;:&#34;carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Carbon Steel&#34;,&#34;label&#34;:&#34;Carbon Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;high-carbon-steel&#34;,&#34;nodeId&#34;:&#34;high-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;High Carbon Steel&#34;,&#34;label&#34;:&#34;High Carbon Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;low-carbon-steel&#34;,&#34;nodeId&#34;:&#34;low-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Low Carbon Steel&#34;,&#34;label&#34;:&#34;Low Carbon Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;medium-carbon-steel&#34;,&#34;nodeId&#34;:&#34;medium-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Medium Carbon Steel&#34;,&#34;label&#34;:&#34;Medium Carbon Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;unclassified-carbon-steel&#34;,&#34;nodeId&#34;:&#34;unclassified-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Carbon Steel&#34;,&#34;label&#34;:&#34;Unclassified Carbon Steel&#34;,&#34;checked&#34;:true}]},{&#34;id&#34;:&#34;low-alloy-steel&#34;,&#34;nodeId&#34;:&#34;low-alloy-steel&#34;,&#34;humanReadableId&#34;:&#34;Low Alloy Steel&#34;,&#34;label&#34;:&#34;Low Alloy Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;low-carbon-steel&#34;,&#34;nodeId&#34;:&#34;low-carbon-steel-&#34;,&#34;humanReadableId&#34;:&#34;Low Carbon Steel&#34;,&#34;label&#34;:&#34;Low Carbon Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;maraging-steel&#34;,&#34;nodeId&#34;:&#34;maraging-steel&#34;,&#34;humanReadableId&#34;:&#34;Maraging Steel&#34;,&#34;label&#34;:&#34;Maraging Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;stainless-steel&#34;,&#34;nodeId&#34;:&#34;stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Stainless Steel&#34;,&#34;label&#34;:&#34;Stainless Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;austenitic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Austenitic Stainless Steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;duplex-stainless-steel&#34;,&#34;nodeId&#34;:&#34;duplex-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Duplex Stainless Steel&#34;,&#34;label&#34;:&#34;Duplex Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;ferritic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;ferritic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Ferritic Stainless Steel&#34;,&#34;label&#34;:&#34;Ferritic Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;martensitic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;martensitic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Martensitic Stainless Steel&#34;,&#34;label&#34;:&#34;Martensitic Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;precipitation-hardening-stainless-steel&#34;,&#34;nodeId&#34;:&#34;precipitation-hardening-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Precipitation Hardening Stainless Steel&#34;,&#34;label&#34;:&#34;Precipitation Hardening Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;superaustenitic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;superaustenitic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Superaustenitic Stainless Steel&#34;,&#34;label&#34;:&#34;Superaustenitic Stainless Steel&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;unclassified-stainless-steel&#34;,&#34;nodeId&#34;:&#34;unclassified-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Stainless Steel&#34;,&#34;label&#34;:&#34;Unclassified Stainless Steel&#34;,&#34;checked&#34;:true}]},{&#34;id&#34;:&#34;tool-and-machining-steel&#34;,&#34;nodeId&#34;:&#34;tool-and-machining-steel&#34;,&#34;humanReadableId&#34;:&#34;Tool And Machining Steel&#34;,&#34;label&#34;:&#34;Tool And Machining Steel&#34;,&#34;checked&#34;:true}]},{&#34;id&#34;:&#34;titanium&#34;,&#34;nodeId&#34;:&#34;titanium&#34;,&#34;humanReadableId&#34;:&#34;Titanium&#34;,&#34;label&#34;:&#34;Titanium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;alpha-alloy&#34;,&#34;nodeId&#34;:&#34;alpha-alloy&#34;,&#34;humanReadableId&#34;:&#34;Alpha Alloy&#34;,&#34;label&#34;:&#34;Alpha Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;alpha-beta-alloy&#34;,&#34;nodeId&#34;:&#34;alpha-beta-alloy&#34;,&#34;humanReadableId&#34;:&#34;Alpha Beta Alloy&#34;,&#34;label&#34;:&#34;Alpha Beta Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;beta-alloy&#34;,&#34;nodeId&#34;:&#34;beta-alloy&#34;,&#34;humanReadableId&#34;:&#34;Beta Alloy&#34;,&#34;label&#34;:&#34;Beta Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;low-alloy-titanium&#34;,&#34;nodeId&#34;:&#34;low-alloy-titanium&#34;,&#34;humanReadableId&#34;:&#34;Low Alloy Titanium&#34;,&#34;label&#34;:&#34;Low Alloy Titanium&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;near-alpha-alloy&#34;,&#34;nodeId&#34;:&#34;near-alpha-alloy&#34;,&#34;humanReadableId&#34;:&#34;Near Alpha Alloy&#34;,&#34;label&#34;:&#34;Near Alpha Alloy&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;pure-titanium&#34;,&#34;nodeId&#34;:&#34;pure-titanium&#34;,&#34;humanReadableId&#34;:&#34;Pure Titanium&#34;,&#34;label&#34;:&#34;Pure Titanium&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;polymer&#34;,&#34;nodeId&#34;:&#34;polymer&#34;,&#34;humanReadableId&#34;:&#34;Polymer&#34;,&#34;label&#34;:&#34;Polymer&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;elastomer&#34;,&#34;nodeId&#34;:&#34;elastomer&#34;,&#34;humanReadableId&#34;:&#34;Elastomer&#34;,&#34;label&#34;:&#34;Elastomer&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;butadiene-rubber--br-&#34;,&#34;nodeId&#34;:&#34;butadiene-rubber--br-&#34;,&#34;humanReadableId&#34;:&#34;Butadiene Rubber (BR)&#34;,&#34;label&#34;:&#34;Butadiene Rubber (BR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;chloroprene-rubber--cr-&#34;,&#34;nodeId&#34;:&#34;chloroprene-rubber--cr-&#34;,&#34;humanReadableId&#34;:&#34;Chloroprene Rubber (CR)&#34;,&#34;label&#34;:&#34;Chloroprene Rubber (CR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ethylene-propylene-diene-rubber--epdm-&#34;,&#34;nodeId&#34;:&#34;ethylene-propylene-diene-rubber--epdm-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Propylene Diene Rubber (EPDM)&#34;,&#34;label&#34;:&#34;Ethylene Propylene Diene Rubber (EPDM)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ethylene-propylene-rubber--epr-&#34;,&#34;nodeId&#34;:&#34;ethylene-propylene-rubber--epr-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Propylene Rubber (EPR)&#34;,&#34;label&#34;:&#34;Ethylene Propylene Rubber (EPR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;fluorosilicone-rubber--fvmq-&#34;,&#34;nodeId&#34;:&#34;fluorosilicone-rubber--fvmq-&#34;,&#34;humanReadableId&#34;:&#34;Fluorosilicone Rubber (FVMQ)&#34;,&#34;label&#34;:&#34;Fluorosilicone Rubber (FVMQ)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;natural-rubber--nr-&#34;,&#34;nodeId&#34;:&#34;natural-rubber--nr-&#34;,&#34;humanReadableId&#34;:&#34;Natural Rubber (NR)&#34;,&#34;label&#34;:&#34;Natural Rubber (NR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;nitrile-rubber--nbr-&#34;,&#34;nodeId&#34;:&#34;nitrile-rubber--nbr-&#34;,&#34;humanReadableId&#34;:&#34;Nitrile Rubber (NBR)&#34;,&#34;label&#34;:&#34;Nitrile Rubber (NBR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;styrene-butadiene-rubber--sbr-&#34;,&#34;nodeId&#34;:&#34;styrene-butadiene-rubber--sbr-&#34;,&#34;humanReadableId&#34;:&#34;Styrene Butadiene Rubber (SBR)&#34;,&#34;label&#34;:&#34;Styrene Butadiene Rubber (SBR)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-elastomer--tpe-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-elastomer--tpe-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Elastomer (TPE)&#34;,&#34;label&#34;:&#34;Thermoplastic Elastomer (TPE)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;elastomeric-alloy--tpv-&#34;,&#34;nodeId&#34;:&#34;elastomeric-alloy--tpv-&#34;,&#34;humanReadableId&#34;:&#34;Elastomeric Alloy (TPV)&#34;,&#34;label&#34;:&#34;Elastomeric Alloy (TPV)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;styrene-butadiene-styrene--sbs-&#34;,&#34;nodeId&#34;:&#34;styrene-butadiene-styrene--sbs-&#34;,&#34;humanReadableId&#34;:&#34;Styrene Butadiene Styrene (SBS)&#34;,&#34;label&#34;:&#34;Styrene Butadiene Styrene (SBS)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-copolyester--tpc-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-copolyester--tpc-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Copolyester (TPC)&#34;,&#34;label&#34;:&#34;Thermoplastic Copolyester (TPC)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-polyamide--tpa-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyamide--tpa-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyamide (TPA)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyamide (TPA)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-polyester-elastomer--tpee-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyester-elastomer--tpee-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyester Elastomer (TPEE)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyester Elastomer (TPEE)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-polyolefin--tpo-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyolefin--tpo-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyolefin (TPO)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyolefin (TPO)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-polyurethane--tpu-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyurethane--tpu-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyurethane (TPU)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyurethane (TPU)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;thermoplastic-styrenic-block-copolymer--tps-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-styrenic-block-copolymer--tps-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Styrenic Block Copolymer (TPS)&#34;,&#34;label&#34;:&#34;Thermoplastic Styrenic Block Copolymer (TPS)&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;thermoplastic&#34;,&#34;nodeId&#34;:&#34;thermoplastic&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic&#34;,&#34;label&#34;:&#34;Thermoplastic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;acrylic&#34;,&#34;nodeId&#34;:&#34;acrylic&#34;,&#34;humanReadableId&#34;:&#34;Acrylic&#34;,&#34;label&#34;:&#34;Acrylic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyacrylonitrile--pan-&#34;,&#34;nodeId&#34;:&#34;polyacrylonitrile--pan-&#34;,&#34;humanReadableId&#34;:&#34;Polyacrylonitrile (PAN)&#34;,&#34;label&#34;:&#34;Polyacrylonitrile (PAN)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polymethyl-methacrylate--pmma-&#34;,&#34;nodeId&#34;:&#34;polymethyl-methacrylate--pmma-&#34;,&#34;humanReadableId&#34;:&#34;Polymethyl methacrylate (PMMA)&#34;,&#34;label&#34;:&#34;Polymethyl methacrylate (PMMA)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;fluoropolymer&#34;,&#34;nodeId&#34;:&#34;fluoropolymer&#34;,&#34;humanReadableId&#34;:&#34;Fluoropolymer&#34;,&#34;label&#34;:&#34;Fluoropolymer&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ethylene-tetrafluoroethylene-copolymer--etfe-&#34;,&#34;nodeId&#34;:&#34;ethylene-tetrafluoroethylene-copolymer--etfe-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Tetrafluoroethylene Copolymer (ETFE)&#34;,&#34;label&#34;:&#34;Ethylene Tetrafluoroethylene Copolymer (ETFE)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;fluorinated-ethylene-propylene--fep-&#34;,&#34;nodeId&#34;:&#34;fluorinated-ethylene-propylene--fep-&#34;,&#34;humanReadableId&#34;:&#34;Fluorinated ethylene propylene (FEP)&#34;,&#34;label&#34;:&#34;Fluorinated ethylene propylene (FEP)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polytetrafluoroethylene--ptfe-&#34;,&#34;nodeId&#34;:&#34;polytetrafluoroethylene--ptfe-&#34;,&#34;humanReadableId&#34;:&#34;Polytetrafluoroethylene (PTFE)&#34;,&#34;label&#34;:&#34;Polytetrafluoroethylene (PTFE)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyvinylidenefluoride--pvdf-&#34;,&#34;nodeId&#34;:&#34;polyvinylidenefluoride--pvdf-&#34;,&#34;humanReadableId&#34;:&#34;Polyvinylidenefluoride (PVDF)&#34;,&#34;label&#34;:&#34;Polyvinylidenefluoride (PVDF)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;liquid-crystal-polymers--lcp-&#34;,&#34;nodeId&#34;:&#34;liquid-crystal-polymers--lcp-&#34;,&#34;humanReadableId&#34;:&#34;Liquid Crystal Polymers (LCP)&#34;,&#34;label&#34;:&#34;Liquid Crystal Polymers (LCP)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide--pa-&#34;,&#34;nodeId&#34;:&#34;polyamide--pa-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide (PA)&#34;,&#34;label&#34;:&#34;Polyamide (PA)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aramide&#34;,&#34;nodeId&#34;:&#34;aramide&#34;,&#34;humanReadableId&#34;:&#34;Aramide&#34;,&#34;label&#34;:&#34;Aramide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copolyamide-6-66--pa6-66-&#34;,&#34;nodeId&#34;:&#34;copolyamide-6-66--pa6-66-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 6/66 (PA6/66)&#34;,&#34;label&#34;:&#34;Copolyamide 6/66 (PA6/66)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;other-polyamide--pa-&#34;,&#34;nodeId&#34;:&#34;other-polyamide--pa-&#34;,&#34;humanReadableId&#34;:&#34;Other Polyamide (PA)&#34;,&#34;label&#34;:&#34;Other Polyamide (PA)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-1010--pa1010-&#34;,&#34;nodeId&#34;:&#34;polyamide-1010--pa1010-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 1010 (PA1010)&#34;,&#34;label&#34;:&#34;Polyamide 1010 (PA1010)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-1012--pa1012-&#34;,&#34;nodeId&#34;:&#34;polyamide-1012--pa1012-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 1012 (PA1012)&#34;,&#34;label&#34;:&#34;Polyamide 1012 (PA1012)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-11--pa11-&#34;,&#34;nodeId&#34;:&#34;polyamide-11--pa11-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 11 (PA11)&#34;,&#34;label&#34;:&#34;Polyamide 11 (PA11)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-12--pa12-&#34;,&#34;nodeId&#34;:&#34;polyamide-12--pa12-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 12 (PA12)&#34;,&#34;label&#34;:&#34;Polyamide 12 (PA12)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-410--pa410-&#34;,&#34;nodeId&#34;:&#34;polyamide-410--pa410-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 410 (PA410)&#34;,&#34;label&#34;:&#34;Polyamide 410 (PA410)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-46--pa46-&#34;,&#34;nodeId&#34;:&#34;polyamide-46--pa46-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 46 (PA46)&#34;,&#34;label&#34;:&#34;Polyamide 46 (PA46)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-6--pa6-&#34;,&#34;nodeId&#34;:&#34;polyamide-6--pa6-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 6 (PA6)&#34;,&#34;label&#34;:&#34;Polyamide 6 (PA6)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyamide-4t--pa4t-&#34;,&#34;nodeId&#34;:&#34;polyamide-4t--pa4t-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;label&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polyamide-6-66--pa6-66-&#34;,&#34;nodeId&#34;:&#34;polyamide-6-66--pa6-66-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 6/66 (PA6/66)&#34;,&#34;label&#34;:&#34;Polyamide 6/66 (PA6/66)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-610--pa610-&#34;,&#34;nodeId&#34;:&#34;polyamide-610--pa610-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 610 (PA610)&#34;,&#34;label&#34;:&#34;Polyamide 610 (PA610)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-612--pa612-&#34;,&#34;nodeId&#34;:&#34;polyamide-612--pa612-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 612 (PA612)&#34;,&#34;label&#34;:&#34;Polyamide 612 (PA612)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-66--pa66-&#34;,&#34;nodeId&#34;:&#34;polyamide-66--pa66-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 66 (PA66)&#34;,&#34;label&#34;:&#34;Polyamide 66 (PA66)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyphthalamide--ppa-&#34;,&#34;nodeId&#34;:&#34;polyphthalamide--ppa-&#34;,&#34;humanReadableId&#34;:&#34;Polyphthalamide (PPA)&#34;,&#34;label&#34;:&#34;Polyphthalamide (PPA)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;copolyamide-66-6i--pa66-6i-&#34;,&#34;nodeId&#34;:&#34;copolyamide-66-6i--pa66-6i-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 66/6I (PA66/6I)&#34;,&#34;label&#34;:&#34;Copolyamide 66/6I (PA66/6I)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copolyamide-6t-66--pa6t-66-&#34;,&#34;nodeId&#34;:&#34;copolyamide-6t-66--pa6t-66-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 6T/66 (PA6T/66)&#34;,&#34;label&#34;:&#34;Copolyamide 6T/66 (PA6T/66)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copolyamide-6t-6i-66--pa6t-6i-66-&#34;,&#34;nodeId&#34;:&#34;copolyamide-6t-6i-66--pa6t-6i-66-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 6T/6I/66 (PA6T/6I/66)&#34;,&#34;label&#34;:&#34;Copolyamide 6T/6I/66 (PA6T/6I/66)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;copolyamide-pa6i-6t--pa6i-6t-&#34;,&#34;nodeId&#34;:&#34;copolyamide-pa6i-6t--pa6i-6t-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide PA6I/6T (PA6I/6T)&#34;,&#34;label&#34;:&#34;Copolyamide PA6I/6T (PA6I/6T)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-4t--pa4t-&#34;,&#34;nodeId&#34;:&#34;polyamide-4t--pa4t--&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;label&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-6t--pa6t-&#34;,&#34;nodeId&#34;:&#34;polyamide-6t--pa6t-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 6T (PA6T)&#34;,&#34;label&#34;:&#34;Polyamide 6T (PA6T)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-mxd6--pamxd6-&#34;,&#34;nodeId&#34;:&#34;polyamide-mxd6--pamxd6-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide MXD6 (PAMXD6)&#34;,&#34;label&#34;:&#34;Polyamide MXD6 (PAMXD6)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyamide-pa6-6t--pa6-6t-&#34;,&#34;nodeId&#34;:&#34;polyamide-pa6-6t--pa6-6t-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide PA6/6T (PA6/6T)&#34;,&#34;label&#34;:&#34;Polyamide PA6/6T (PA6/6T)&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;polyaryletherketone--paek-&#34;,&#34;nodeId&#34;:&#34;polyaryletherketone--paek-&#34;,&#34;humanReadableId&#34;:&#34;Polyaryletherketone (PAEK)&#34;,&#34;label&#34;:&#34;Polyaryletherketone (PAEK)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyether-ketone--pek-&#34;,&#34;nodeId&#34;:&#34;polyether-ketone--pek-&#34;,&#34;humanReadableId&#34;:&#34;Polyether Ketone (PEK)&#34;,&#34;label&#34;:&#34;Polyether Ketone (PEK)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyetherether-ketone--peek-&#34;,&#34;nodeId&#34;:&#34;polyetherether-ketone--peek-&#34;,&#34;humanReadableId&#34;:&#34;Polyetherether Ketone (PEEK)&#34;,&#34;label&#34;:&#34;Polyetherether Ketone (PEEK)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyetherketoneketone--pekk-&#34;,&#34;nodeId&#34;:&#34;polyetherketoneketone--pekk-&#34;,&#34;humanReadableId&#34;:&#34;Polyetherketoneketone (PEKK)&#34;,&#34;label&#34;:&#34;Polyetherketoneketone (PEKK)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polycarbonate--pc-&#34;,&#34;nodeId&#34;:&#34;polycarbonate--pc-&#34;,&#34;humanReadableId&#34;:&#34;Polycarbonate (PC)&#34;,&#34;label&#34;:&#34;Polycarbonate (PC)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyester&#34;,&#34;nodeId&#34;:&#34;polyester&#34;,&#34;humanReadableId&#34;:&#34;Polyester&#34;,&#34;label&#34;:&#34;Polyester&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polybutylene-terephthalate--pbt-&#34;,&#34;nodeId&#34;:&#34;polybutylene-terephthalate--pbt-&#34;,&#34;humanReadableId&#34;:&#34;Polybutylene Terephthalate (PBT)&#34;,&#34;label&#34;:&#34;Polybutylene Terephthalate (PBT)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyethylene-terephthalate--pet-&#34;,&#34;nodeId&#34;:&#34;polyethylene-terephthalate--pet-&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene Terephthalate (PET)&#34;,&#34;label&#34;:&#34;Polyethylene Terephthalate (PET)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyethylene-terephthalate-glycol--petg-&#34;,&#34;nodeId&#34;:&#34;polyethylene-terephthalate-glycol--petg-&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene Terephthalate Glycol (PETG)&#34;,&#34;label&#34;:&#34;Polyethylene Terephthalate Glycol (PETG)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyglycolicide--pga-&#34;,&#34;nodeId&#34;:&#34;polyglycolicide--pga-&#34;,&#34;humanReadableId&#34;:&#34;Polyglycolicide (PGA)&#34;,&#34;label&#34;:&#34;Polyglycolicide (PGA)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polytrimethylene-terephthalate--ptt-&#34;,&#34;nodeId&#34;:&#34;polytrimethylene-terephthalate--ptt-&#34;,&#34;humanReadableId&#34;:&#34;Polytrimethylene Terephthalate (PTT)&#34;,&#34;label&#34;:&#34;Polytrimethylene Terephthalate (PTT)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polyethylene--pe-&#34;,&#34;nodeId&#34;:&#34;polyethylene--pe-&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene (PE)&#34;,&#34;label&#34;:&#34;Polyethylene (PE)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyimide--pi-&#34;,&#34;nodeId&#34;:&#34;polyimide--pi-&#34;,&#34;humanReadableId&#34;:&#34;Polyimide (PI)&#34;,&#34;label&#34;:&#34;Polyimide (PI)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyamidimide--pai-&#34;,&#34;nodeId&#34;:&#34;polyamidimide--pai-&#34;,&#34;humanReadableId&#34;:&#34;Polyamidimide (PAI)&#34;,&#34;label&#34;:&#34;Polyamidimide (PAI)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polybenzimidazole--pbi-&#34;,&#34;nodeId&#34;:&#34;polybenzimidazole--pbi-&#34;,&#34;humanReadableId&#34;:&#34;Polybenzimidazole (PBI)&#34;,&#34;label&#34;:&#34;Polybenzimidazole (PBI)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyetherimide--pei-&#34;,&#34;nodeId&#34;:&#34;polyetherimide--pei-&#34;,&#34;humanReadableId&#34;:&#34;Polyetherimide (PEI)&#34;,&#34;label&#34;:&#34;Polyetherimide (PEI)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polyketone--pk-&#34;,&#34;nodeId&#34;:&#34;polyketone--pk-&#34;,&#34;humanReadableId&#34;:&#34;Polyketone (PK)&#34;,&#34;label&#34;:&#34;Polyketone (PK)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polylactic-acid--pla-&#34;,&#34;nodeId&#34;:&#34;polylactic-acid--pla-&#34;,&#34;humanReadableId&#34;:&#34;Polylactic Acid (PLA)&#34;,&#34;label&#34;:&#34;Polylactic Acid (PLA)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polymer-blend&#34;,&#34;nodeId&#34;:&#34;polymer-blend&#34;,&#34;humanReadableId&#34;:&#34;Polymer Blend&#34;,&#34;label&#34;:&#34;Polymer Blend&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyolefin--po-&#34;,&#34;nodeId&#34;:&#34;polyolefin--po-&#34;,&#34;humanReadableId&#34;:&#34;Polyolefin (PO)&#34;,&#34;label&#34;:&#34;Polyolefin (PO)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polybutene--pb-&#34;,&#34;nodeId&#34;:&#34;polybutene--pb-&#34;,&#34;humanReadableId&#34;:&#34;Polybutene (PB)&#34;,&#34;label&#34;:&#34;Polybutene (PB)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyethylene--pe-&#34;,&#34;nodeId&#34;:&#34;polyethylene--pe--&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene (PE)&#34;,&#34;label&#34;:&#34;Polyethylene (PE)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;high-density-polyethylene--pe-hd-&#34;,&#34;nodeId&#34;:&#34;high-density-polyethylene--pe-hd-&#34;,&#34;humanReadableId&#34;:&#34;High Density Polyethylene (PE-HD)&#34;,&#34;label&#34;:&#34;High Density Polyethylene (PE-HD)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;high-molecular-weight-polyethylene--pe-hmw-&#34;,&#34;nodeId&#34;:&#34;high-molecular-weight-polyethylene--pe-hmw-&#34;,&#34;humanReadableId&#34;:&#34;High Molecular Weight Polyethylene (PE-HMW)&#34;,&#34;label&#34;:&#34;High Molecular Weight Polyethylene (PE-HMW)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;linear-low-density-polyethylene--pe-lld-&#34;,&#34;nodeId&#34;:&#34;linear-low-density-polyethylene--pe-lld-&#34;,&#34;humanReadableId&#34;:&#34;Linear Low Density Polyethylene (PE-LLD)&#34;,&#34;label&#34;:&#34;Linear Low Density Polyethylene (PE-LLD)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;low-density-polyethylene--pe-ld-&#34;,&#34;nodeId&#34;:&#34;low-density-polyethylene--pe-ld-&#34;,&#34;humanReadableId&#34;:&#34;Low Density Polyethylene (PE-LD)&#34;,&#34;label&#34;:&#34;Low Density Polyethylene (PE-LD)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;medium-density-polyethylene--pe-md-&#34;,&#34;nodeId&#34;:&#34;medium-density-polyethylene--pe-md-&#34;,&#34;humanReadableId&#34;:&#34;Medium Density Polyethylene (PE-MD)&#34;,&#34;label&#34;:&#34;Medium Density Polyethylene (PE-MD)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ultra-high-molecular-weight-polyethylene--pe-uhmw-&#34;,&#34;nodeId&#34;:&#34;ultra-high-molecular-weight-polyethylene--pe-uhmw-&#34;,&#34;humanReadableId&#34;:&#34;Ultra High Molecular Weight Polyethylene (PE-UHMW)&#34;,&#34;label&#34;:&#34;Ultra High Molecular Weight Polyethylene (PE-UHMW)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;very-low-density-polyethylene--pe-vld-&#34;,&#34;nodeId&#34;:&#34;very-low-density-polyethylene--pe-vld-&#34;,&#34;humanReadableId&#34;:&#34;Very Low Density Polyethylene (PE-VLD)&#34;,&#34;label&#34;:&#34;Very Low Density Polyethylene (PE-VLD)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polymethylpentene--pmp-&#34;,&#34;nodeId&#34;:&#34;polymethylpentene--pmp-&#34;,&#34;humanReadableId&#34;:&#34;Polymethylpentene (PMP)&#34;,&#34;label&#34;:&#34;Polymethylpentene (PMP)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polypropylene--pp-&#34;,&#34;nodeId&#34;:&#34;polypropylene--pp-&#34;,&#34;humanReadableId&#34;:&#34;Polypropylene (PP)&#34;,&#34;label&#34;:&#34;Polypropylene (PP)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polyoxymethylene--pom-&#34;,&#34;nodeId&#34;:&#34;polyoxymethylene--pom-&#34;,&#34;humanReadableId&#34;:&#34;Polyoxymethylene (POM)&#34;,&#34;label&#34;:&#34;Polyoxymethylene (POM)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyphenyl&#34;,&#34;nodeId&#34;:&#34;polyphenyl&#34;,&#34;humanReadableId&#34;:&#34;Polyphenyl&#34;,&#34;label&#34;:&#34;Polyphenyl&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyphenyl-ether--ppe-&#34;,&#34;nodeId&#34;:&#34;polyphenyl-ether--ppe-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenyl Ether (PPE)&#34;,&#34;label&#34;:&#34;Polyphenyl Ether (PPE)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyphenylene-oxide--ppo-&#34;,&#34;nodeId&#34;:&#34;polyphenylene-oxide--ppo-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenylene Oxide (PPO)&#34;,&#34;label&#34;:&#34;Polyphenylene Oxide (PPO)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyphenylene-sulfide--pps-&#34;,&#34;nodeId&#34;:&#34;polyphenylene-sulfide--pps-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenylene Sulfide (PPS)&#34;,&#34;label&#34;:&#34;Polyphenylene Sulfide (PPS)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;polysaccharide&#34;,&#34;nodeId&#34;:&#34;polysaccharide&#34;,&#34;humanReadableId&#34;:&#34;Polysaccharide&#34;,&#34;label&#34;:&#34;Polysaccharide&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polysulphones&#34;,&#34;nodeId&#34;:&#34;polysulphones&#34;,&#34;humanReadableId&#34;:&#34;Polysulphones&#34;,&#34;label&#34;:&#34;Polysulphones&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyether-sulfone--pes-&#34;,&#34;nodeId&#34;:&#34;polyether-sulfone--pes-&#34;,&#34;humanReadableId&#34;:&#34;Polyether Sulfone (PES)&#34;,&#34;label&#34;:&#34;Polyether Sulfone (PES)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyphenylsulphone--ppsu-&#34;,&#34;nodeId&#34;:&#34;polyphenylsulphone--ppsu-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenylsulphone (PPSU)&#34;,&#34;label&#34;:&#34;Polyphenylsulphone (PPSU)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polysulphone--psu-&#34;,&#34;nodeId&#34;:&#34;polysulphone--psu-&#34;,&#34;humanReadableId&#34;:&#34;Polysulphone (PSU)&#34;,&#34;label&#34;:&#34;Polysulphone (PSU)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polysulphone-general--psu-&#34;,&#34;nodeId&#34;:&#34;polysulphone-general--psu-&#34;,&#34;humanReadableId&#34;:&#34;Polysulphone General (PSU)&#34;,&#34;label&#34;:&#34;Polysulphone General (PSU)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;styrene&#34;,&#34;nodeId&#34;:&#34;styrene&#34;,&#34;humanReadableId&#34;:&#34;Styrene&#34;,&#34;label&#34;:&#34;Styrene&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;acrylonitrile-butadiene-styrene--abs-&#34;,&#34;nodeId&#34;:&#34;acrylonitrile-butadiene-styrene--abs-&#34;,&#34;humanReadableId&#34;:&#34;Acrylonitrile Butadiene Styrene (ABS)&#34;,&#34;label&#34;:&#34;Acrylonitrile Butadiene Styrene (ABS)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;acrylonitrile-styrene-acrylate--asa-&#34;,&#34;nodeId&#34;:&#34;acrylonitrile-styrene-acrylate--asa-&#34;,&#34;humanReadableId&#34;:&#34;Acrylonitrile Styrene Acrylate (ASA)&#34;,&#34;label&#34;:&#34;Acrylonitrile Styrene Acrylate (ASA)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;high-impact-polystyrene--hips-&#34;,&#34;nodeId&#34;:&#34;high-impact-polystyrene--hips-&#34;,&#34;humanReadableId&#34;:&#34;High Impact Polystyrene (HIPS)&#34;,&#34;label&#34;:&#34;High Impact Polystyrene (HIPS)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;methacrylate-butadiene-styrene--mbs-&#34;,&#34;nodeId&#34;:&#34;methacrylate-butadiene-styrene--mbs-&#34;,&#34;humanReadableId&#34;:&#34;Methacrylate Butadiene Styrene (MBS)&#34;,&#34;label&#34;:&#34;Methacrylate Butadiene Styrene (MBS)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polystyrene--ps-&#34;,&#34;nodeId&#34;:&#34;polystyrene--ps-&#34;,&#34;humanReadableId&#34;:&#34;Polystyrene (PS)&#34;,&#34;label&#34;:&#34;Polystyrene (PS)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;styrene-acrylonitrile--san-&#34;,&#34;nodeId&#34;:&#34;styrene-acrylonitrile--san-&#34;,&#34;humanReadableId&#34;:&#34;Styrene Acrylonitrile (SAN)&#34;,&#34;label&#34;:&#34;Styrene Acrylonitrile (SAN)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;vinyl&#34;,&#34;nodeId&#34;:&#34;vinyl&#34;,&#34;humanReadableId&#34;:&#34;Vinyl&#34;,&#34;label&#34;:&#34;Vinyl&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ethylene-vinyl-acetate--evac-&#34;,&#34;nodeId&#34;:&#34;ethylene-vinyl-acetate--evac-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Vinyl Acetate (EVAC)&#34;,&#34;label&#34;:&#34;Ethylene Vinyl Acetate (EVAC)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyvinyl-chloride--pvc-&#34;,&#34;nodeId&#34;:&#34;polyvinyl-chloride--pvc-&#34;,&#34;humanReadableId&#34;:&#34;Polyvinyl Chloride (PVC)&#34;,&#34;label&#34;:&#34;Polyvinyl Chloride (PVC)&#34;,&#34;disabled&#34;:true}]}]},{&#34;id&#34;:&#34;thermosetting&#34;,&#34;nodeId&#34;:&#34;thermosetting&#34;,&#34;humanReadableId&#34;:&#34;Thermosetting&#34;,&#34;label&#34;:&#34;Thermosetting&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;amino-resin&#34;,&#34;nodeId&#34;:&#34;amino-resin&#34;,&#34;humanReadableId&#34;:&#34;Amino Resin&#34;,&#34;label&#34;:&#34;Amino Resin&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;bismaleimide--bmi-&#34;,&#34;nodeId&#34;:&#34;bismaleimide--bmi-&#34;,&#34;humanReadableId&#34;:&#34;Bismaleimide (BMI)&#34;,&#34;label&#34;:&#34;Bismaleimide (BMI)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;melamine-formaldehyde--mf-&#34;,&#34;nodeId&#34;:&#34;melamine-formaldehyde--mf-&#34;,&#34;humanReadableId&#34;:&#34;Melamine formaldehyde (MF)&#34;,&#34;label&#34;:&#34;Melamine formaldehyde (MF)&#34;,&#34;disabled&#34;:true}]},{&#34;id&#34;:&#34;epoxy-resin--ep-&#34;,&#34;nodeId&#34;:&#34;epoxy-resin--ep-&#34;,&#34;humanReadableId&#34;:&#34;Epoxy Resin (EP)&#34;,&#34;label&#34;:&#34;Epoxy Resin (EP)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;phenol-formaldehyde-resin--pf-&#34;,&#34;nodeId&#34;:&#34;phenol-formaldehyde-resin--pf-&#34;,&#34;humanReadableId&#34;:&#34;Phenol Formaldehyde Resin (PF)&#34;,&#34;label&#34;:&#34;Phenol Formaldehyde Resin (PF)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;phthalonitrile--pn-&#34;,&#34;nodeId&#34;:&#34;phthalonitrile--pn-&#34;,&#34;humanReadableId&#34;:&#34;Phthalonitrile (PN)&#34;,&#34;label&#34;:&#34;Phthalonitrile (PN)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;polyester-resin--up-&#34;,&#34;nodeId&#34;:&#34;polyester-resin--up-&#34;,&#34;humanReadableId&#34;:&#34;Polyester Resin (UP)&#34;,&#34;label&#34;:&#34;Polyester Resin (UP)&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;vinyl-ester-resin--ve-&#34;,&#34;nodeId&#34;:&#34;vinyl-ester-resin--ve-&#34;,&#34;humanReadableId&#34;:&#34;Vinyl Ester Resin (VE)&#34;,&#34;label&#34;:&#34;Vinyl Ester Resin (VE)&#34;,&#34;disabled&#34;:true}]}]}],&#34;propertySections&#34;:[],&#34;suppliers&#34;:[{&#34;id&#34;:&#34;dest&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;materialsCount&#34;:93},{&#34;id&#34;:&#34;ugit&#34;,&#34;label&#34;:&#34;Ugitech&#34;,&#34;materialsCount&#34;:50},{&#34;id&#34;:&#34;sver&#34;,&#34;label&#34;:&#34;Sverdrup Steel AS&#34;,&#34;materialsCount&#34;:20},{&#34;id&#34;:&#34;salo&#34;,&#34;label&#34;:&#34;Salomon&#39;s Metalen&#34;,&#34;materialsCount&#34;:16},{&#34;id&#34;:&#34;hemp&#34;,&#34;label&#34;:&#34;Hempel Special Metals&#34;,&#34;materialsCount&#34;:4},{&#34;id&#34;:&#34;vdmm&#34;,&#34;label&#34;:&#34;VDM Metals&#34;,&#34;materialsCount&#34;:1},{&#34;id&#34;:&#34;song&#34;,&#34;label&#34;:&#34;Dongguan songshun mould steel Co., Ltd.&#34;,&#34;materialsCount&#34;:13},{&#34;id&#34;:&#34;ambi&#34;,&#34;label&#34;:&#34;Ambica Steels Limited&#34;,&#34;materialsCount&#34;:10}],&#34;supplierMaterialsOnly&#34;:false,&#34;text&#34;:&#34;&#34;,&#34;results&#34;:{&#34;materials&#34;:{&#34;data&#34;:[{&#34;id&#34;:&#34;DESTB19&#34;,&#34;label&#34;:&#34;Acidur 4529&#34;,&#34;url&#34;:&#34;/materials/destb19-acidur-4529&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;superaustenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Superaustenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS11&#34;,&#34;label&#34;:&#34;Acidur 4401 +AT &#34;,&#34;url&#34;:&#34;/materials/dests11-acidur-4401-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS12&#34;,&#34;label&#34;:&#34;Acidur 4435 +AT &#34;,&#34;url&#34;:&#34;/materials/dests12-acidur-4435-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS13&#34;,&#34;label&#34;:&#34;Acidur 4541 +AT &#34;,&#34;url&#34;:&#34;/materials/dests13-acidur-4541-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS14&#34;,&#34;label&#34;:&#34;Acidur 4571 +AT &#34;,&#34;url&#34;:&#34;/materials/dests14-acidur-4571-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS11A&#34;,&#34;label&#34;:&#34;Acidur 4404 +AT &#34;,&#34;url&#34;:&#34;/materials/dests11a-acidur-4404-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS9&#34;,&#34;label&#34;:&#34;Acidur 4301 +AT &#34;,&#34;url&#34;:&#34;/materials/dests9-acidur-4301-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS9A&#34;,&#34;label&#34;:&#34;Acidur 4307 +AT &#34;,&#34;url&#34;:&#34;/materials/dests9a-acidur-4307-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS10&#34;,&#34;label&#34;:&#34;Acidur 4305 +AT &#34;,&#34;url&#34;:&#34;/materials/dests10-acidur-4305-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;VDMM023&#34;,&#34;label&#34;:&#34;VDM® Alloy 926&#34;,&#34;url&#34;:&#34;/materials/vdmm023-vdm-alloy-926&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;superaustenitic-stainless-steel&#34;,&#34;label&#34;:&#34;Superaustenitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;VDMM&#34;,&#34;label&#34;:&#34;VDM Metals&#34;,&#34;url&#34;:&#34;/suppliers/vdmm-vdm-metals&#34;}},{&#34;id&#34;:&#34;DESTS7&#34;,&#34;label&#34;:&#34;Acidur 4418 QT900 &#34;,&#34;url&#34;:&#34;/materials/dests7-acidur-4418-qt900-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;martensitic-stainless-steel&#34;,&#34;label&#34;:&#34;Martensitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS15&#34;,&#34;label&#34;:&#34;Acidur 4462 +AT &#34;,&#34;url&#34;:&#34;/materials/dests15-acidur-4462-at-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;duplex-stainless-steel&#34;,&#34;label&#34;:&#34;Duplex Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS7A&#34;,&#34;label&#34;:&#34;Acidur 4418 QT760 &#34;,&#34;url&#34;:&#34;/materials/dests7a-acidur-4418-qt760-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;martensitic-stainless-steel&#34;,&#34;label&#34;:&#34;Martensitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;UGIT0076&#34;,&#34;label&#34;:&#34;UGIMA® 4460 Cold Finished&#34;,&#34;url&#34;:&#34;/materials/ugit0076-ugima-4460-cold-finished&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;duplex-stainless-steel&#34;,&#34;label&#34;:&#34;Duplex Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;UGIT&#34;,&#34;label&#34;:&#34;Ugitech&#34;,&#34;url&#34;:&#34;/suppliers/ugit-ugitech&#34;}},{&#34;id&#34;:&#34;UGIT0077&#34;,&#34;label&#34;:&#34;UGIMA® 4460 Cold Finished and Drawn&#34;,&#34;url&#34;:&#34;/materials/ugit0077-ugima-4460-cold-finished-and-drawn&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;duplex-stainless-steel&#34;,&#34;label&#34;:&#34;Duplex Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;UGIT&#34;,&#34;label&#34;:&#34;Ugitech&#34;,&#34;url&#34;:&#34;/suppliers/ugit-ugitech&#34;}},{&#34;id&#34;:&#34;UGIT0129&#34;,&#34;label&#34;:&#34;UGI® 4545 AIR H1025&#34;,&#34;url&#34;:&#34;/materials/ugit0129-ugi-4545-air-h1025&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;precipitation-hardening-stainless-steel&#34;,&#34;label&#34;:&#34;Precipitation Hardening Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;UGIT&#34;,&#34;label&#34;:&#34;Ugitech&#34;,&#34;url&#34;:&#34;/suppliers/ugit-ugitech&#34;}},{&#34;id&#34;:&#34;DESTS1&#34;,&#34;label&#34;:&#34;Corrodur 4021 QT800 &#34;,&#34;url&#34;:&#34;/materials/dests1-corrodur-4021-qt800-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;martensitic-stainless-steel&#34;,&#34;label&#34;:&#34;Martensitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS3&#34;,&#34;label&#34;:&#34;Corrodur 4034 Annealed &#34;,&#34;url&#34;:&#34;/materials/dests3-corrodur-4034-annealed-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;martensitic-stainless-steel&#34;,&#34;label&#34;:&#34;Martensitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS4&#34;,&#34;label&#34;:&#34;Acidur 4057 QT800 &#34;,&#34;url&#34;:&#34;/materials/dests4-acidur-4057-qt800-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;martensitic-stainless-steel&#34;,&#34;label&#34;:&#34;Martensitic Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}},{&#34;id&#34;:&#34;DESTS8&#34;,&#34;label&#34;:&#34;Acidur 4542 P800 &#34;,&#34;url&#34;:&#34;/materials/dests8-acidur-4542-p800-&#34;,&#34;category&#34;:{&#34;id&#34;:&#34;precipitation-hardening-stainless-steel&#34;,&#34;label&#34;:&#34;Precipitation Hardening Stainless Steel&#34;},&#34;supplier&#34;:{&#34;id&#34;:&#34;DEST&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;url&#34;:&#34;/suppliers/dest-deutsche-edelstahlwerke-dew-&#34;}}],&#34;materialsCount&#34;:2214,&#34;page&#34;:1}},&#34;alerts&#34;:[&#34;advanced-search-alert-compare-hint&#34;],&#34;context&#34;:{&#34;unitsSystem&#34;:&#34;metric&#34;,&#34;categories&#34;:[{&#34;id&#34;:&#34;biological-material&#34;,&#34;nodeId&#34;:&#34;biological-material&#34;,&#34;humanReadableId&#34;:&#34;Biological Material&#34;,&#34;label&#34;:&#34;Biological Material&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;wood&#34;,&#34;nodeId&#34;:&#34;wood&#34;,&#34;humanReadableId&#34;:&#34;Wood&#34;,&#34;label&#34;:&#34;Wood&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;biological-material&#34;],&#34;rootNode&#34;:&#34;biological-material&#34;}],&#34;rootNode&#34;:&#34;biological-material&#34;,&#34;childrenNr&#34;:1,&#34;checked&#34;:false},{&#34;id&#34;:&#34;ceramic&#34;,&#34;nodeId&#34;:&#34;ceramic&#34;,&#34;humanReadableId&#34;:&#34;Ceramic&#34;,&#34;label&#34;:&#34;Ceramic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;carbon&#34;,&#34;nodeId&#34;:&#34;carbon&#34;,&#34;humanReadableId&#34;:&#34;Carbon&#34;,&#34;label&#34;:&#34;Carbon&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;carbon-nanotube&#34;,&#34;nodeId&#34;:&#34;carbon-nanotube&#34;,&#34;humanReadableId&#34;:&#34;Carbon Nanotube&#34;,&#34;label&#34;:&#34;Carbon Nanotube&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;carbon&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;diamond&#34;,&#34;nodeId&#34;:&#34;diamond&#34;,&#34;humanReadableId&#34;:&#34;Diamond&#34;,&#34;label&#34;:&#34;Diamond&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;natural-diamond&#34;,&#34;nodeId&#34;:&#34;natural-diamond&#34;,&#34;humanReadableId&#34;:&#34;Natural Diamond&#34;,&#34;label&#34;:&#34;Natural Diamond&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;carbon&#34;,&#34;diamond&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;synthetic-diamond&#34;,&#34;nodeId&#34;:&#34;synthetic-diamond&#34;,&#34;humanReadableId&#34;:&#34;Synthetic Diamond&#34;,&#34;label&#34;:&#34;Synthetic Diamond&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;carbon&#34;,&#34;diamond&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;}],&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;carbon&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;,&#34;childrenNr&#34;:2},{&#34;id&#34;:&#34;graphene&#34;,&#34;nodeId&#34;:&#34;graphene&#34;,&#34;humanReadableId&#34;:&#34;Graphene&#34;,&#34;label&#34;:&#34;Graphene&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;carbon&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;graphite&#34;,&#34;nodeId&#34;:&#34;graphite&#34;,&#34;humanReadableId&#34;:&#34;Graphite&#34;,&#34;label&#34;:&#34;Graphite&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;carbon&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;}],&#34;ancestors&#34;:[&#34;ceramic&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;,&#34;childrenNr&#34;:4},{&#34;id&#34;:&#34;engineering-ceramic&#34;,&#34;nodeId&#34;:&#34;engineering-ceramic&#34;,&#34;humanReadableId&#34;:&#34;Engineering Ceramic&#34;,&#34;label&#34;:&#34;Engineering Ceramic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;non-oxide-based&#34;,&#34;nodeId&#34;:&#34;non-oxide-based&#34;,&#34;humanReadableId&#34;:&#34;Non Oxide Based&#34;,&#34;label&#34;:&#34;Non Oxide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;boride-based&#34;,&#34;nodeId&#34;:&#34;boride-based&#34;,&#34;humanReadableId&#34;:&#34;Boride Based&#34;,&#34;label&#34;:&#34;Boride Based&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;carbide-based&#34;,&#34;nodeId&#34;:&#34;carbide-based&#34;,&#34;humanReadableId&#34;:&#34;Carbide Based&#34;,&#34;label&#34;:&#34;Carbide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;boron-carbide&#34;,&#34;nodeId&#34;:&#34;boron-carbide&#34;,&#34;humanReadableId&#34;:&#34;Boron Carbide&#34;,&#34;label&#34;:&#34;Boron Carbide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;carbide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;silicon-carbide&#34;,&#34;nodeId&#34;:&#34;silicon-carbide&#34;,&#34;humanReadableId&#34;:&#34;Silicon Carbide&#34;,&#34;label&#34;:&#34;Silicon Carbide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;carbide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;tantalum-carbide&#34;,&#34;nodeId&#34;:&#34;tantalum-carbide&#34;,&#34;humanReadableId&#34;:&#34;Tantalum Carbide&#34;,&#34;label&#34;:&#34;Tantalum Carbide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;carbide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;titanium-carbide&#34;,&#34;nodeId&#34;:&#34;titanium-carbide&#34;,&#34;humanReadableId&#34;:&#34;Titanium Carbide&#34;,&#34;label&#34;:&#34;Titanium Carbide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;carbide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;tungsten-carbide&#34;,&#34;nodeId&#34;:&#34;tungsten-carbide&#34;,&#34;humanReadableId&#34;:&#34;Tungsten Carbide&#34;,&#34;label&#34;:&#34;Tungsten Carbide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;carbide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;zirconium-carbide&#34;,&#34;nodeId&#34;:&#34;zirconium-carbide&#34;,&#34;humanReadableId&#34;:&#34;Zirconium Carbide&#34;,&#34;label&#34;:&#34;Zirconium Carbide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;carbide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;}],&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;,&#34;childrenNr&#34;:6},{&#34;id&#34;:&#34;nitride-based&#34;,&#34;nodeId&#34;:&#34;nitride-based&#34;,&#34;humanReadableId&#34;:&#34;Nitride Based&#34;,&#34;label&#34;:&#34;Nitride Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-nitirde&#34;,&#34;nodeId&#34;:&#34;aluminium-nitirde&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Nitirde&#34;,&#34;label&#34;:&#34;Aluminium Nitirde&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;nitride-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;boron-nitride&#34;,&#34;nodeId&#34;:&#34;boron-nitride&#34;,&#34;humanReadableId&#34;:&#34;Boron Nitride&#34;,&#34;label&#34;:&#34;Boron Nitride&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;nitride-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;silicon-nitride&#34;,&#34;nodeId&#34;:&#34;silicon-nitride&#34;,&#34;humanReadableId&#34;:&#34;Silicon Nitride&#34;,&#34;label&#34;:&#34;Silicon Nitride&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;nitride-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;titanium-nitride&#34;,&#34;nodeId&#34;:&#34;titanium-nitride&#34;,&#34;humanReadableId&#34;:&#34;Titanium Nitride&#34;,&#34;label&#34;:&#34;Titanium Nitride&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;nitride-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;}],&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;,&#34;childrenNr&#34;:4},{&#34;id&#34;:&#34;silicate-based&#34;,&#34;nodeId&#34;:&#34;silicate-based&#34;,&#34;humanReadableId&#34;:&#34;Silicate Based&#34;,&#34;label&#34;:&#34;Silicate Based&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;sulfide-based&#34;,&#34;nodeId&#34;:&#34;sulfide-based&#34;,&#34;humanReadableId&#34;:&#34;Sulfide Based&#34;,&#34;label&#34;:&#34;Sulfide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;bismuth-sulfide&#34;,&#34;nodeId&#34;:&#34;bismuth-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Bismuth Sulfide&#34;,&#34;label&#34;:&#34;Bismuth Sulfide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;sulfide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;copper-sulfide&#34;,&#34;nodeId&#34;:&#34;copper-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Copper Sulfide&#34;,&#34;label&#34;:&#34;Copper Sulfide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;sulfide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;iron-sulfide&#34;,&#34;nodeId&#34;:&#34;iron-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Iron Sulfide&#34;,&#34;label&#34;:&#34;Iron Sulfide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;sulfide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;manganese-sulfide&#34;,&#34;nodeId&#34;:&#34;manganese-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Manganese Sulfide&#34;,&#34;label&#34;:&#34;Manganese Sulfide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;sulfide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;molybdenum-disulfide&#34;,&#34;nodeId&#34;:&#34;molybdenum-disulfide&#34;,&#34;humanReadableId&#34;:&#34;Molybdenum Disulfide&#34;,&#34;label&#34;:&#34;Molybdenum Disulfide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;sulfide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;multiphase-metal-sulfide&#34;,&#34;nodeId&#34;:&#34;multiphase-metal-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Multiphase Metal Sulfide&#34;,&#34;label&#34;:&#34;Multiphase Metal Sulfide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;sulfide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;tin-sulfide&#34;,&#34;nodeId&#34;:&#34;tin-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Tin Sulfide&#34;,&#34;label&#34;:&#34;Tin Sulfide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;sulfide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;tungsten-disulfide&#34;,&#34;nodeId&#34;:&#34;tungsten-disulfide&#34;,&#34;humanReadableId&#34;:&#34;Tungsten Disulfide&#34;,&#34;label&#34;:&#34;Tungsten Disulfide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;sulfide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;zinc-sulfide&#34;,&#34;nodeId&#34;:&#34;zinc-sulfide&#34;,&#34;humanReadableId&#34;:&#34;Zinc Sulfide&#34;,&#34;label&#34;:&#34;Zinc Sulfide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;,&#34;sulfide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;}],&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;non-oxide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;,&#34;childrenNr&#34;:9}],&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;,&#34;childrenNr&#34;:5},{&#34;id&#34;:&#34;oxide-based&#34;,&#34;nodeId&#34;:&#34;oxide-based&#34;,&#34;humanReadableId&#34;:&#34;Oxide Based&#34;,&#34;label&#34;:&#34;Oxide Based&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;advanced-ceramic-oxides&#34;,&#34;nodeId&#34;:&#34;advanced-ceramic-oxides&#34;,&#34;humanReadableId&#34;:&#34;Advanced Ceramic Oxides&#34;,&#34;label&#34;:&#34;Advanced Ceramic Oxides&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;oxide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;aluminium-oxide&#34;,&#34;nodeId&#34;:&#34;aluminium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Oxide&#34;,&#34;label&#34;:&#34;Aluminium Oxide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;oxide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;beryllium-oxide&#34;,&#34;nodeId&#34;:&#34;beryllium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Beryllium Oxide&#34;,&#34;label&#34;:&#34;Beryllium Oxide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;oxide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;ferrite&#34;,&#34;nodeId&#34;:&#34;ferrite&#34;,&#34;humanReadableId&#34;:&#34;Ferrite&#34;,&#34;label&#34;:&#34;Ferrite&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;oxide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;silicon-oxide&#34;,&#34;nodeId&#34;:&#34;silicon-oxide&#34;,&#34;humanReadableId&#34;:&#34;Silicon Oxide&#34;,&#34;label&#34;:&#34;Silicon Oxide&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-silicate&#34;,&#34;nodeId&#34;:&#34;aluminium-silicate&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Silicate&#34;,&#34;label&#34;:&#34;Aluminium Silicate&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;oxide-based&#34;,&#34;silicon-oxide&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;magnesium-silicate&#34;,&#34;nodeId&#34;:&#34;magnesium-silicate&#34;,&#34;humanReadableId&#34;:&#34;Magnesium Silicate&#34;,&#34;label&#34;:&#34;Magnesium Silicate&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;oxide-based&#34;,&#34;silicon-oxide&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;zirconium-silicate&#34;,&#34;nodeId&#34;:&#34;zirconium-silicate&#34;,&#34;humanReadableId&#34;:&#34;Zirconium Silicate&#34;,&#34;label&#34;:&#34;Zirconium Silicate&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;oxide-based&#34;,&#34;silicon-oxide&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;}],&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;oxide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;,&#34;childrenNr&#34;:3},{&#34;id&#34;:&#34;titanium-oxide&#34;,&#34;nodeId&#34;:&#34;titanium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Titanium Oxide&#34;,&#34;label&#34;:&#34;Titanium Oxide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;oxide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;zirconium-oxide&#34;,&#34;nodeId&#34;:&#34;zirconium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Zirconium Oxide&#34;,&#34;label&#34;:&#34;Zirconium Oxide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;oxide-based&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;}],&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;,&#34;childrenNr&#34;:7},{&#34;id&#34;:&#34;oxide-based-ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;oxide-based-ceramic-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;multi-oxide-ceramics&#34;,&#34;nodeId&#34;:&#34;multi-oxide-ceramics&#34;,&#34;humanReadableId&#34;:&#34;Multi-Oxide Ceramics&#34;,&#34;label&#34;:&#34;Multi-Oxide Ceramics&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;oxide-based-ceramic-matrix-composite&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;silicon-oxide&#34;,&#34;nodeId&#34;:&#34;silicon-oxide-&#34;,&#34;humanReadableId&#34;:&#34;Silicon Oxide&#34;,&#34;label&#34;:&#34;Silicon Oxide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;oxide-based-ceramic-matrix-composite&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;ytterbium-oxide&#34;,&#34;nodeId&#34;:&#34;ytterbium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Ytterbium Oxide&#34;,&#34;label&#34;:&#34;Ytterbium Oxide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;oxide-based-ceramic-matrix-composite&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;},{&#34;id&#34;:&#34;yttrium-oxide&#34;,&#34;nodeId&#34;:&#34;yttrium-oxide&#34;,&#34;humanReadableId&#34;:&#34;Yttrium Oxide&#34;,&#34;label&#34;:&#34;Yttrium Oxide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;,&#34;oxide-based-ceramic-matrix-composite&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;}],&#34;ancestors&#34;:[&#34;ceramic&#34;,&#34;engineering-ceramic&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;,&#34;childrenNr&#34;:4}],&#34;ancestors&#34;:[&#34;ceramic&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;,&#34;childrenNr&#34;:3},{&#34;id&#34;:&#34;natural-ceramic&#34;,&#34;nodeId&#34;:&#34;natural-ceramic&#34;,&#34;humanReadableId&#34;:&#34;Natural Ceramic&#34;,&#34;label&#34;:&#34;Natural Ceramic&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;ceramic&#34;],&#34;rootNode&#34;:&#34;ceramic&#34;}],&#34;rootNode&#34;:&#34;ceramic&#34;,&#34;childrenNr&#34;:3,&#34;checked&#34;:false},{&#34;id&#34;:&#34;composite&#34;,&#34;nodeId&#34;:&#34;composite&#34;,&#34;humanReadableId&#34;:&#34;Composite&#34;,&#34;label&#34;:&#34;Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;ceramic-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;carbide-based-ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;carbide-based-ceramic-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Carbide Based Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Carbide Based Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;composite&#34;,&#34;ceramic-matrix-composite&#34;],&#34;rootNode&#34;:&#34;composite&#34;},{&#34;id&#34;:&#34;oxide-based-ceramic-matrix-composite&#34;,&#34;nodeId&#34;:&#34;oxide-based-ceramic-matrix-composite-&#34;,&#34;humanReadableId&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;label&#34;:&#34;Oxide Based Ceramic Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;composite&#34;,&#34;ceramic-matrix-composite&#34;],&#34;rootNode&#34;:&#34;composite&#34;}],&#34;ancestors&#34;:[&#34;composite&#34;],&#34;rootNode&#34;:&#34;composite&#34;,&#34;childrenNr&#34;:2},{&#34;id&#34;:&#34;metal-matrix-composite&#34;,&#34;nodeId&#34;:&#34;metal-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Metal Matrix Composite&#34;,&#34;label&#34;:&#34;Metal Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-matrix-composite&#34;,&#34;nodeId&#34;:&#34;aluminium-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Matrix Composite&#34;,&#34;label&#34;:&#34;Aluminium Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;composite&#34;,&#34;metal-matrix-composite&#34;],&#34;rootNode&#34;:&#34;composite&#34;},{&#34;id&#34;:&#34;beryllium-matrix-composite&#34;,&#34;nodeId&#34;:&#34;beryllium-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Beryllium Matrix Composite&#34;,&#34;label&#34;:&#34;Beryllium Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;composite&#34;,&#34;metal-matrix-composite&#34;],&#34;rootNode&#34;:&#34;composite&#34;},{&#34;id&#34;:&#34;cobalt-matrix-composite&#34;,&#34;nodeId&#34;:&#34;cobalt-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Matrix Composite&#34;,&#34;label&#34;:&#34;Cobalt Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;composite&#34;,&#34;metal-matrix-composite&#34;],&#34;rootNode&#34;:&#34;composite&#34;},{&#34;id&#34;:&#34;cobalt-and-nickel-matrix-composite&#34;,&#34;nodeId&#34;:&#34;cobalt-and-nickel-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Cobalt and Nickel Matrix Composite&#34;,&#34;label&#34;:&#34;Cobalt and Nickel Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;composite&#34;,&#34;metal-matrix-composite&#34;],&#34;rootNode&#34;:&#34;composite&#34;},{&#34;id&#34;:&#34;iron-matrix-composite&#34;,&#34;nodeId&#34;:&#34;iron-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Iron Matrix Composite&#34;,&#34;label&#34;:&#34;Iron Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;composite&#34;,&#34;metal-matrix-composite&#34;],&#34;rootNode&#34;:&#34;composite&#34;},{&#34;id&#34;:&#34;nickel-matrix-composite&#34;,&#34;nodeId&#34;:&#34;nickel-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Nickel Matrix Composite&#34;,&#34;label&#34;:&#34;Nickel Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;composite&#34;,&#34;metal-matrix-composite&#34;],&#34;rootNode&#34;:&#34;composite&#34;}],&#34;ancestors&#34;:[&#34;composite&#34;],&#34;rootNode&#34;:&#34;composite&#34;,&#34;childrenNr&#34;:6},{&#34;id&#34;:&#34;polymer-matrix-composite&#34;,&#34;nodeId&#34;:&#34;polymer-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Polymer Matrix Composite&#34;,&#34;label&#34;:&#34;Polymer Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;thermoset-polymer-matrix-composite&#34;,&#34;nodeId&#34;:&#34;thermoset-polymer-matrix-composite&#34;,&#34;humanReadableId&#34;:&#34;Thermoset Polymer Matrix Composite&#34;,&#34;label&#34;:&#34;Thermoset Polymer Matrix Composite&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;composite&#34;,&#34;polymer-matrix-composite&#34;],&#34;rootNode&#34;:&#34;composite&#34;}],&#34;ancestors&#34;:[&#34;composite&#34;],&#34;rootNode&#34;:&#34;composite&#34;,&#34;childrenNr&#34;:1}],&#34;rootNode&#34;:&#34;composite&#34;,&#34;childrenNr&#34;:3,&#34;checked&#34;:false},{&#34;id&#34;:&#34;glass&#34;,&#34;nodeId&#34;:&#34;glass&#34;,&#34;humanReadableId&#34;:&#34;Glass&#34;,&#34;label&#34;:&#34;Glass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;glass-ceramic&#34;,&#34;nodeId&#34;:&#34;glass-ceramic&#34;,&#34;humanReadableId&#34;:&#34;Glass Ceramic&#34;,&#34;label&#34;:&#34;Glass Ceramic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;las-glass-ceramic&#34;,&#34;nodeId&#34;:&#34;las-glass-ceramic&#34;,&#34;humanReadableId&#34;:&#34;LAS Glass Ceramic&#34;,&#34;label&#34;:&#34;LAS Glass Ceramic&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;glass&#34;,&#34;glass-ceramic&#34;],&#34;rootNode&#34;:&#34;glass&#34;}],&#34;ancestors&#34;:[&#34;glass&#34;],&#34;rootNode&#34;:&#34;glass&#34;,&#34;childrenNr&#34;:1},{&#34;id&#34;:&#34;lead-glass&#34;,&#34;nodeId&#34;:&#34;lead-glass&#34;,&#34;humanReadableId&#34;:&#34;Lead Glass&#34;,&#34;label&#34;:&#34;Lead Glass&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;glass&#34;],&#34;rootNode&#34;:&#34;glass&#34;},{&#34;id&#34;:&#34;silicate-glass&#34;,&#34;nodeId&#34;:&#34;silicate-glass&#34;,&#34;humanReadableId&#34;:&#34;Silicate Glass&#34;,&#34;label&#34;:&#34;Silicate Glass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminosilicate&#34;,&#34;nodeId&#34;:&#34;aluminosilicate&#34;,&#34;humanReadableId&#34;:&#34;Aluminosilicate&#34;,&#34;label&#34;:&#34;Aluminosilicate&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;glass&#34;,&#34;silicate-glass&#34;],&#34;rootNode&#34;:&#34;glass&#34;},{&#34;id&#34;:&#34;borosilicate&#34;,&#34;nodeId&#34;:&#34;borosilicate&#34;,&#34;humanReadableId&#34;:&#34;Borosilicate&#34;,&#34;label&#34;:&#34;Borosilicate&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;glass&#34;,&#34;silicate-glass&#34;],&#34;rootNode&#34;:&#34;glass&#34;},{&#34;id&#34;:&#34;fused-quartz&#34;,&#34;nodeId&#34;:&#34;fused-quartz&#34;,&#34;humanReadableId&#34;:&#34;Fused Quartz&#34;,&#34;label&#34;:&#34;Fused Quartz&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;glass&#34;,&#34;silicate-glass&#34;],&#34;rootNode&#34;:&#34;glass&#34;},{&#34;id&#34;:&#34;soda-lime-silicate&#34;,&#34;nodeId&#34;:&#34;soda-lime-silicate&#34;,&#34;humanReadableId&#34;:&#34;Soda Lime Silicate&#34;,&#34;label&#34;:&#34;Soda Lime Silicate&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;glass&#34;,&#34;silicate-glass&#34;],&#34;rootNode&#34;:&#34;glass&#34;}],&#34;ancestors&#34;:[&#34;glass&#34;],&#34;rootNode&#34;:&#34;glass&#34;,&#34;childrenNr&#34;:4}],&#34;rootNode&#34;:&#34;glass&#34;,&#34;childrenNr&#34;:3,&#34;checked&#34;:false},{&#34;id&#34;:&#34;metal&#34;,&#34;nodeId&#34;:&#34;metal&#34;,&#34;humanReadableId&#34;:&#34;Metal&#34;,&#34;label&#34;:&#34;Metal&#34;,&#34;partiallyChecked&#34;:true,&#34;materialsCount&#34;:2214,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium&#34;,&#34;nodeId&#34;:&#34;aluminium&#34;,&#34;humanReadableId&#34;:&#34;Aluminium&#34;,&#34;label&#34;:&#34;Aluminium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-master-alloy&#34;,&#34;nodeId&#34;:&#34;aluminium-master-alloy&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Master Alloy&#34;,&#34;label&#34;:&#34;Aluminium Master Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cast-aluminium&#34;,&#34;nodeId&#34;:&#34;cast-aluminium&#34;,&#34;humanReadableId&#34;:&#34;Cast Aluminium&#34;,&#34;label&#34;:&#34;Cast Aluminium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;1xx-x&#34;,&#34;nodeId&#34;:&#34;1xx-x&#34;,&#34;humanReadableId&#34;:&#34;1xx.x&#34;,&#34;label&#34;:&#34;1xx.x&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;,&#34;cast-aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;2xx-x&#34;,&#34;nodeId&#34;:&#34;2xx-x&#34;,&#34;humanReadableId&#34;:&#34;2xx.x&#34;,&#34;label&#34;:&#34;2xx.x&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;,&#34;cast-aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;3xx-x&#34;,&#34;nodeId&#34;:&#34;3xx-x&#34;,&#34;humanReadableId&#34;:&#34;3xx.x&#34;,&#34;label&#34;:&#34;3xx.x&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;,&#34;cast-aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;4xx-x&#34;,&#34;nodeId&#34;:&#34;4xx-x&#34;,&#34;humanReadableId&#34;:&#34;4xx.x&#34;,&#34;label&#34;:&#34;4xx.x&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;,&#34;cast-aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;5xx-x&#34;,&#34;nodeId&#34;:&#34;5xx-x&#34;,&#34;humanReadableId&#34;:&#34;5xx.x&#34;,&#34;label&#34;:&#34;5xx.x&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;,&#34;cast-aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;7xx-x&#34;,&#34;nodeId&#34;:&#34;7xx-x&#34;,&#34;humanReadableId&#34;:&#34;7xx.x&#34;,&#34;label&#34;:&#34;7xx.x&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;,&#34;cast-aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;8xx-x&#34;,&#34;nodeId&#34;:&#34;8xx-x&#34;,&#34;humanReadableId&#34;:&#34;8xx.x&#34;,&#34;label&#34;:&#34;8xx.x&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;,&#34;cast-aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:7},{&#34;id&#34;:&#34;wrought-aluminium&#34;,&#34;nodeId&#34;:&#34;wrought-aluminium&#34;,&#34;humanReadableId&#34;:&#34;Wrought Aluminium&#34;,&#34;label&#34;:&#34;Wrought Aluminium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;1000-series&#34;,&#34;nodeId&#34;:&#34;1000-series&#34;,&#34;humanReadableId&#34;:&#34;1000 Series&#34;,&#34;label&#34;:&#34;1000 Series&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;,&#34;wrought-aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;2000-series&#34;,&#34;nodeId&#34;:&#34;2000-series&#34;,&#34;humanReadableId&#34;:&#34;2000 Series&#34;,&#34;label&#34;:&#34;2000 Series&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;,&#34;wrought-aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;3000-series&#34;,&#34;nodeId&#34;:&#34;3000-series&#34;,&#34;humanReadableId&#34;:&#34;3000 Series&#34;,&#34;label&#34;:&#34;3000 Series&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;,&#34;wrought-aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;4000-series&#34;,&#34;nodeId&#34;:&#34;4000-series&#34;,&#34;humanReadableId&#34;:&#34;4000 Series&#34;,&#34;label&#34;:&#34;4000 Series&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;,&#34;wrought-aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;5000-series&#34;,&#34;nodeId&#34;:&#34;5000-series&#34;,&#34;humanReadableId&#34;:&#34;5000 Series&#34;,&#34;label&#34;:&#34;5000 Series&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;,&#34;wrought-aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;6000-series&#34;,&#34;nodeId&#34;:&#34;6000-series&#34;,&#34;humanReadableId&#34;:&#34;6000 Series&#34;,&#34;label&#34;:&#34;6000 Series&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;,&#34;wrought-aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;7000-series&#34;,&#34;nodeId&#34;:&#34;7000-series&#34;,&#34;humanReadableId&#34;:&#34;7000 Series&#34;,&#34;label&#34;:&#34;7000 Series&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;,&#34;wrought-aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;8000-series&#34;,&#34;nodeId&#34;:&#34;8000-series&#34;,&#34;humanReadableId&#34;:&#34;8000 Series&#34;,&#34;label&#34;:&#34;8000 Series&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;,&#34;wrought-aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;aluminium&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:8}],&#34;ancestors&#34;:[&#34;metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:3},{&#34;id&#34;:&#34;cladbimetal&#34;,&#34;nodeId&#34;:&#34;cladbimetal&#34;,&#34;humanReadableId&#34;:&#34;Clad / Bimetal&#34;,&#34;label&#34;:&#34;Clad / Bimetal&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cobalt&#34;,&#34;nodeId&#34;:&#34;cobalt&#34;,&#34;humanReadableId&#34;:&#34;Cobalt&#34;,&#34;label&#34;:&#34;Cobalt&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cobalt-chromium&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium&#34;,&#34;label&#34;:&#34;Cobalt Chromium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;cobalt&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cobalt-chromium-molybdenum&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium-molybdenum&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium Molybdenum&#34;,&#34;label&#34;:&#34;Cobalt Chromium Molybdenum&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;cobalt&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cobalt-chromium-nickel-tungsten&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium-nickel-tungsten&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium Nickel Tungsten&#34;,&#34;label&#34;:&#34;Cobalt Chromium Nickel Tungsten&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;cobalt&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cobalt-chromium-tungsten&#34;,&#34;nodeId&#34;:&#34;cobalt-chromium-tungsten&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Chromium Tungsten&#34;,&#34;label&#34;:&#34;Cobalt Chromium Tungsten&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;cobalt&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cobalt-nickel-chromium-molybdenum&#34;,&#34;nodeId&#34;:&#34;cobalt-nickel-chromium-molybdenum&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Nickel Chromium Molybdenum&#34;,&#34;label&#34;:&#34;Cobalt Nickel Chromium Molybdenum&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;cobalt&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cobalt-superalloy&#34;,&#34;nodeId&#34;:&#34;cobalt-superalloy&#34;,&#34;humanReadableId&#34;:&#34;Cobalt Superalloy&#34;,&#34;label&#34;:&#34;Cobalt Superalloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;cobalt&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;unclassified-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;unclassified-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Cobalt Alloy&#34;,&#34;label&#34;:&#34;Unclassified Cobalt Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;cobalt&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:7},{&#34;id&#34;:&#34;copper&#34;,&#34;nodeId&#34;:&#34;copper&#34;,&#34;humanReadableId&#34;:&#34;Copper&#34;,&#34;label&#34;:&#34;Copper&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper&#34;,&#34;nodeId&#34;:&#34;cast-copper&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper&#34;,&#34;label&#34;:&#34;Cast Copper&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper-brass&#34;,&#34;nodeId&#34;:&#34;cast-copper-brass&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Brass&#34;,&#34;label&#34;:&#34;Cast Copper Brass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper-brass-yellow-brass&#34;,&#34;nodeId&#34;:&#34;cast-copper-brass-yellow-brass&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Brass Yellow Brass&#34;,&#34;label&#34;:&#34;Cast Copper Brass Yellow Brass&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;,&#34;cast-copper-brass&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cast-copper-silicon-brass&#34;,&#34;nodeId&#34;:&#34;cast-copper-silicon-brass&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Silicon Brass&#34;,&#34;label&#34;:&#34;Cast Copper Silicon Brass&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;,&#34;cast-copper-brass&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;copper-bismuth-alloy&#34;,&#34;nodeId&#34;:&#34;copper-bismuth-alloy&#34;,&#34;humanReadableId&#34;:&#34;Copper Bismuth Alloy&#34;,&#34;label&#34;:&#34;Copper Bismuth Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;,&#34;cast-copper-brass&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;red-brass&#34;,&#34;nodeId&#34;:&#34;red-brass&#34;,&#34;humanReadableId&#34;:&#34;Red Brass&#34;,&#34;label&#34;:&#34;Red Brass&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;,&#34;cast-copper-brass&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:4},{&#34;id&#34;:&#34;cast-copper-bronze&#34;,&#34;nodeId&#34;:&#34;cast-copper-bronze&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Bronze&#34;,&#34;label&#34;:&#34;Cast Copper Bronze&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;cast-copper-bronze-aluminium-bronze&#34;,&#34;nodeId&#34;:&#34;cast-copper-bronze-aluminium-bronze&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Bronze Aluminium Bronze&#34;,&#34;label&#34;:&#34;Cast Copper Bronze Aluminium Bronze&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;,&#34;cast-copper-bronze&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;leaded-tin-bronze&#34;,&#34;nodeId&#34;:&#34;leaded-tin-bronze&#34;,&#34;humanReadableId&#34;:&#34;Leaded Tin Bronze&#34;,&#34;label&#34;:&#34;Leaded Tin Bronze&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;,&#34;cast-copper-bronze&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nickel-tin-bronze&#34;,&#34;nodeId&#34;:&#34;nickel-tin-bronze&#34;,&#34;humanReadableId&#34;:&#34;Nickel Tin Bronze&#34;,&#34;label&#34;:&#34;Nickel Tin Bronze&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;,&#34;cast-copper-bronze&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;tin-bronze&#34;,&#34;nodeId&#34;:&#34;tin-bronze&#34;,&#34;humanReadableId&#34;:&#34;Tin Bronze&#34;,&#34;label&#34;:&#34;Tin Bronze&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;,&#34;cast-copper-bronze&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:4},{&#34;id&#34;:&#34;cast-copper-high-copper-alloy&#34;,&#34;nodeId&#34;:&#34;cast-copper-high-copper-alloy&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper High Copper Alloy&#34;,&#34;label&#34;:&#34;Cast Copper High Copper Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cast-copper-nickel-grade&#34;,&#34;nodeId&#34;:&#34;cast-copper-nickel-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Nickel Grade&#34;,&#34;label&#34;:&#34;Cast Copper Nickel Grade&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cast-copper-nickel-silver-grade&#34;,&#34;nodeId&#34;:&#34;cast-copper-nickel-silver-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Nickel Silver Grade&#34;,&#34;label&#34;:&#34;Cast Copper Nickel Silver Grade&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cast-copper-purelow-alloyed-copper&#34;,&#34;nodeId&#34;:&#34;cast-copper-purelow-alloyed-copper&#34;,&#34;humanReadableId&#34;:&#34;Cast Copper Pure / Low Alloyed Copper&#34;,&#34;label&#34;:&#34;Cast Copper Pure / Low Alloyed Copper&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;copper-lead-alloy&#34;,&#34;nodeId&#34;:&#34;copper-lead-alloy&#34;,&#34;humanReadableId&#34;:&#34;Copper-Lead Alloy&#34;,&#34;label&#34;:&#34;Copper-Lead Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;special-alloy&#34;,&#34;nodeId&#34;:&#34;special-alloy&#34;,&#34;humanReadableId&#34;:&#34;Special Alloy&#34;,&#34;label&#34;:&#34;Special Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;cast-copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:8},{&#34;id&#34;:&#34;welding&#34;,&#34;nodeId&#34;:&#34;welding&#34;,&#34;humanReadableId&#34;:&#34;Welding&#34;,&#34;label&#34;:&#34;Welding&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;wrought-copper&#34;,&#34;nodeId&#34;:&#34;wrought-copper&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper&#34;,&#34;label&#34;:&#34;Wrought Copper&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;unclassified-wrought-copper&#34;,&#34;nodeId&#34;:&#34;unclassified-wrought-copper&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Wrought Copper&#34;,&#34;label&#34;:&#34;Unclassified Wrought Copper&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;wrought-copper-brass&#34;,&#34;nodeId&#34;:&#34;wrought-copper-brass&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Brass&#34;,&#34;label&#34;:&#34;Wrought Copper Brass&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;leaded-brass&#34;,&#34;nodeId&#34;:&#34;leaded-brass&#34;,&#34;humanReadableId&#34;:&#34;Leaded Brass&#34;,&#34;label&#34;:&#34;Leaded Brass&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;,&#34;wrought-copper-brass&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;other-copper-zinc-alloy&#34;,&#34;nodeId&#34;:&#34;other-copper-zinc-alloy&#34;,&#34;humanReadableId&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;label&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;,&#34;wrought-copper-brass&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;tin-brass&#34;,&#34;nodeId&#34;:&#34;tin-brass&#34;,&#34;humanReadableId&#34;:&#34;Tin Brass&#34;,&#34;label&#34;:&#34;Tin Brass&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;,&#34;wrought-copper-brass&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;wrought-copper-brass-yellow-brass&#34;,&#34;nodeId&#34;:&#34;wrought-copper-brass-yellow-brass&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Brass Yellow Brass&#34;,&#34;label&#34;:&#34;Wrought Copper Brass Yellow Brass&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;,&#34;wrought-copper-brass&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;yellow-wrought-brass&#34;,&#34;nodeId&#34;:&#34;yellow-wrought-brass&#34;,&#34;humanReadableId&#34;:&#34;Yellow Wrought Brass&#34;,&#34;label&#34;:&#34;Yellow Wrought Brass&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;,&#34;wrought-copper-brass&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:5},{&#34;id&#34;:&#34;wrought-copper-bronze&#34;,&#34;nodeId&#34;:&#34;wrought-copper-bronze&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Bronze&#34;,&#34;label&#34;:&#34;Wrought Copper Bronze&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;copper-silver-zinc-alloy&#34;,&#34;nodeId&#34;:&#34;copper-silver-zinc-alloy&#34;,&#34;humanReadableId&#34;:&#34;Copper Silver Zinc Alloy&#34;,&#34;label&#34;:&#34;Copper Silver Zinc Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;,&#34;wrought-copper-bronze&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;leaded-phosphor-bronze&#34;,&#34;nodeId&#34;:&#34;leaded-phosphor-bronze&#34;,&#34;humanReadableId&#34;:&#34;Leaded Phosphor Bronze&#34;,&#34;label&#34;:&#34;Leaded Phosphor Bronze&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;,&#34;wrought-copper-bronze&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;other-copper-zinc-alloy&#34;,&#34;nodeId&#34;:&#34;other-copper-zinc-alloy-&#34;,&#34;humanReadableId&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;label&#34;:&#34;Other Copper Zinc Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;,&#34;wrought-copper-bronze&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;phosphor-bronze&#34;,&#34;nodeId&#34;:&#34;phosphor-bronze&#34;,&#34;humanReadableId&#34;:&#34;Phosphor Bronze&#34;,&#34;label&#34;:&#34;Phosphor Bronze&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;,&#34;wrought-copper-bronze&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;wrought-copper-bronze-aluminium-bronze&#34;,&#34;nodeId&#34;:&#34;wrought-copper-bronze-aluminium-bronze&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Bronze Aluminium Bronze&#34;,&#34;label&#34;:&#34;Wrought Copper Bronze Aluminium Bronze&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;,&#34;wrought-copper-bronze&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;wrought-copper-bronze-silicon-bronze&#34;,&#34;nodeId&#34;:&#34;wrought-copper-bronze-silicon-bronze&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Bronze Silicon Bronze&#34;,&#34;label&#34;:&#34;Wrought Copper Bronze Silicon Bronze&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;,&#34;wrought-copper-bronze&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:6},{&#34;id&#34;:&#34;wrought-copper-high-copper-alloy&#34;,&#34;nodeId&#34;:&#34;wrought-copper-high-copper-alloy&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper High Copper Alloy&#34;,&#34;label&#34;:&#34;Wrought Copper High Copper Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;wrought-copper-nickel-grade&#34;,&#34;nodeId&#34;:&#34;wrought-copper-nickel-grade&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Nickel Grade&#34;,&#34;label&#34;:&#34;Wrought Copper Nickel Grade&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;wrought-copper-nickel-silver-grade&#34;,&#34;nodeId&#34;:&#34;wrought-copper-nickel-silver-grade&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Nickel Silver Grade&#34;,&#34;label&#34;:&#34;Wrought Copper Nickel Silver Grade&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;wrought-copper-purelow-alloyed-copper&#34;,&#34;nodeId&#34;:&#34;wrought-copper-purelow-alloyed-copper&#34;,&#34;humanReadableId&#34;:&#34;Wrought Copper Pure / Low Alloyed Copper&#34;,&#34;label&#34;:&#34;Wrought Copper Pure / Low Alloyed Copper&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;,&#34;wrought-copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;copper&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:7}],&#34;ancestors&#34;:[&#34;metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:3},{&#34;id&#34;:&#34;iron&#34;,&#34;nodeId&#34;:&#34;iron&#34;,&#34;humanReadableId&#34;:&#34;Iron&#34;,&#34;label&#34;:&#34;Iron&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;alloy-iron&#34;,&#34;nodeId&#34;:&#34;alloy-iron&#34;,&#34;humanReadableId&#34;:&#34;Alloy Iron&#34;,&#34;label&#34;:&#34;Alloy Iron&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;iron&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cast-iron&#34;,&#34;nodeId&#34;:&#34;cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Cast Iron&#34;,&#34;label&#34;:&#34;Cast Iron&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ductile--nodular--cast-iron&#34;,&#34;nodeId&#34;:&#34;ductile--nodular--cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Ductile (Nodular) Cast Iron&#34;,&#34;label&#34;:&#34;Ductile (Nodular) Cast Iron&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;iron&#34;,&#34;cast-iron&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;grey-cast-iron&#34;,&#34;nodeId&#34;:&#34;grey-cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Grey Cast Iron&#34;,&#34;label&#34;:&#34;Grey Cast Iron&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;iron&#34;,&#34;cast-iron&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;malleable-cast-iron&#34;,&#34;nodeId&#34;:&#34;malleable-cast-iron&#34;,&#34;humanReadableId&#34;:&#34;Malleable Cast Iron&#34;,&#34;label&#34;:&#34;Malleable Cast Iron&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;iron&#34;,&#34;cast-iron&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;other-cast-iron-alloy&#34;,&#34;nodeId&#34;:&#34;other-cast-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Other Cast Iron Alloy&#34;,&#34;label&#34;:&#34;Other Cast Iron Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;iron&#34;,&#34;cast-iron&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;white-cast-iron&#34;,&#34;nodeId&#34;:&#34;white-cast-iron&#34;,&#34;humanReadableId&#34;:&#34;White Cast Iron&#34;,&#34;label&#34;:&#34;White Cast Iron&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;iron&#34;,&#34;cast-iron&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;iron&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:5},{&#34;id&#34;:&#34;ferromolybdenum&#34;,&#34;nodeId&#34;:&#34;ferromolybdenum&#34;,&#34;humanReadableId&#34;:&#34;Ferromolybdenum&#34;,&#34;label&#34;:&#34;Ferromolybdenum&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;iron&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;ferrosilicon&#34;,&#34;nodeId&#34;:&#34;ferrosilicon&#34;,&#34;humanReadableId&#34;:&#34;Ferrosilicon&#34;,&#34;label&#34;:&#34;Ferrosilicon&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;iron&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;ferrovanadium&#34;,&#34;nodeId&#34;:&#34;ferrovanadium&#34;,&#34;humanReadableId&#34;:&#34;Ferrovanadium&#34;,&#34;label&#34;:&#34;Ferrovanadium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;iron&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;iron-alloy&#34;,&#34;nodeId&#34;:&#34;iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Iron Alloy&#34;,&#34;label&#34;:&#34;Iron Alloy&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-nickel-cobalt-iron-alloy&#34;,&#34;nodeId&#34;:&#34;aluminium-nickel-cobalt-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Nickel Cobalt Iron Alloy&#34;,&#34;label&#34;:&#34;Aluminium Nickel Cobalt Iron Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;iron&#34;,&#34;iron-alloy&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;miscellaneous-iron-alloy&#34;,&#34;nodeId&#34;:&#34;miscellaneous-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Miscellaneous Iron Alloy&#34;,&#34;label&#34;:&#34;Miscellaneous Iron Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;iron&#34;,&#34;iron-alloy&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;soft-magnetic-iron&#34;,&#34;nodeId&#34;:&#34;soft-magnetic-iron&#34;,&#34;humanReadableId&#34;:&#34;Soft Magnetic Iron&#34;,&#34;label&#34;:&#34;Soft Magnetic Iron&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;iron&#34;,&#34;iron-alloy&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;iron&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:3},{&#34;id&#34;:&#34;malleable-cast-iron&#34;,&#34;nodeId&#34;:&#34;malleable-cast-iron-&#34;,&#34;humanReadableId&#34;:&#34;Malleable Cast Iron&#34;,&#34;label&#34;:&#34;Malleable Cast Iron&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;iron&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:7},{&#34;id&#34;:&#34;magnesium&#34;,&#34;nodeId&#34;:&#34;magnesium&#34;,&#34;humanReadableId&#34;:&#34;Magnesium&#34;,&#34;label&#34;:&#34;Magnesium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aluminium-grade&#34;,&#34;nodeId&#34;:&#34;aluminium-grade&#34;,&#34;humanReadableId&#34;:&#34;Aluminium Grade&#34;,&#34;label&#34;:&#34;Aluminium Grade&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;magnesium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cast-aluminium-manganese-grade&#34;,&#34;nodeId&#34;:&#34;cast-aluminium-manganese-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Aluminium Manganese Grade&#34;,&#34;label&#34;:&#34;Cast Aluminium Manganese Grade&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;magnesium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cast-rare-earth-grade&#34;,&#34;nodeId&#34;:&#34;cast-rare-earth-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast Rare Earth Grade&#34;,&#34;label&#34;:&#34;Cast Rare Earth Grade&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;magnesium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cast-wrought-aluminium-zinc-grade&#34;,&#34;nodeId&#34;:&#34;cast-wrought-aluminium-zinc-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast/Wrought Aluminium Zinc Grade&#34;,&#34;label&#34;:&#34;Cast/Wrought Aluminium Zinc Grade&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;magnesium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cast-wrought-unclassified-grade&#34;,&#34;nodeId&#34;:&#34;cast-wrought-unclassified-grade&#34;,&#34;humanReadableId&#34;:&#34;Cast/Wrought Unclassified Grade&#34;,&#34;label&#34;:&#34;Cast/Wrought Unclassified Grade&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;magnesium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;pure-magnesium&#34;,&#34;nodeId&#34;:&#34;pure-magnesium&#34;,&#34;humanReadableId&#34;:&#34;Pure Magnesium&#34;,&#34;label&#34;:&#34;Pure Magnesium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;magnesium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;rare-earth-grade&#34;,&#34;nodeId&#34;:&#34;rare-earth-grade&#34;,&#34;humanReadableId&#34;:&#34;Rare Earth Grade&#34;,&#34;label&#34;:&#34;Rare Earth Grade&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;magnesium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;wrought-zinc-grade&#34;,&#34;nodeId&#34;:&#34;wrought-zinc-grade&#34;,&#34;humanReadableId&#34;:&#34;Wrought Zinc Grade&#34;,&#34;label&#34;:&#34;Wrought Zinc Grade&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;magnesium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;yttrium-grade&#34;,&#34;nodeId&#34;:&#34;yttrium-grade&#34;,&#34;humanReadableId&#34;:&#34;Yttrium Grade&#34;,&#34;label&#34;:&#34;Yttrium Grade&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;magnesium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;zinc-grade&#34;,&#34;nodeId&#34;:&#34;zinc-grade&#34;,&#34;humanReadableId&#34;:&#34;Zinc Grade&#34;,&#34;label&#34;:&#34;Zinc Grade&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;magnesium&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:10},{&#34;id&#34;:&#34;manganese&#34;,&#34;nodeId&#34;:&#34;manganese&#34;,&#34;humanReadableId&#34;:&#34;Manganese&#34;,&#34;label&#34;:&#34;Manganese&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nickel&#34;,&#34;nodeId&#34;:&#34;nickel&#34;,&#34;humanReadableId&#34;:&#34;Nickel&#34;,&#34;label&#34;:&#34;Nickel&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;nickel-chromium-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;nickel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nickel-chromium-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Cobalt Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Cobalt Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;nickel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nickel-chromium-iron-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Iron Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Iron Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;nickel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nickel-chromium-molybdenum-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-molybdenum-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Molybdenum Alloy&#34;,&#34;label&#34;:&#34;Nickel Chromium Molybdenum Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;nickel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nickel-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Cobalt Alloy&#34;,&#34;label&#34;:&#34;Nickel Cobalt Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;nickel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nickel-copper-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-copper-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Copper Alloy&#34;,&#34;label&#34;:&#34;Nickel Copper Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;nickel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nickel-iron-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-iron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Iron Alloy&#34;,&#34;label&#34;:&#34;Nickel Iron Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;nickel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nickel-molybdenum-alloy&#34;,&#34;nodeId&#34;:&#34;nickel-molybdenum-alloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Molybdenum Alloy&#34;,&#34;label&#34;:&#34;Nickel Molybdenum Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;nickel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nickel-superalloy&#34;,&#34;nodeId&#34;:&#34;nickel-superalloy&#34;,&#34;humanReadableId&#34;:&#34;Nickel Superalloy&#34;,&#34;label&#34;:&#34;Nickel Superalloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;nickel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nickel-welding-filler&#34;,&#34;nodeId&#34;:&#34;nickel-welding-filler&#34;,&#34;humanReadableId&#34;:&#34;Nickel Welding Filler&#34;,&#34;label&#34;:&#34;Nickel Welding Filler&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;nickel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;other-nickel-alloy&#34;,&#34;nodeId&#34;:&#34;other-nickel-alloy&#34;,&#34;humanReadableId&#34;:&#34;Other Nickel Alloy&#34;,&#34;label&#34;:&#34;Other Nickel Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;nickel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;pure-low-nickel-alloy&#34;,&#34;nodeId&#34;:&#34;pure-low-nickel-alloy&#34;,&#34;humanReadableId&#34;:&#34;Pure/Low Nickel Alloy&#34;,&#34;label&#34;:&#34;Pure/Low Nickel Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;nickel&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:12},{&#34;id&#34;:&#34;noble-metal&#34;,&#34;nodeId&#34;:&#34;noble-metal&#34;,&#34;humanReadableId&#34;:&#34;Noble Metal&#34;,&#34;label&#34;:&#34;Noble Metal&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;gold&#34;,&#34;nodeId&#34;:&#34;gold&#34;,&#34;humanReadableId&#34;:&#34;Gold&#34;,&#34;label&#34;:&#34;Gold&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;noble-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;iridium&#34;,&#34;nodeId&#34;:&#34;iridium&#34;,&#34;humanReadableId&#34;:&#34;Iridium&#34;,&#34;label&#34;:&#34;Iridium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;noble-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;palladium&#34;,&#34;nodeId&#34;:&#34;palladium&#34;,&#34;humanReadableId&#34;:&#34;Palladium&#34;,&#34;label&#34;:&#34;Palladium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;noble-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;platinum&#34;,&#34;nodeId&#34;:&#34;platinum&#34;,&#34;humanReadableId&#34;:&#34;Platinum&#34;,&#34;label&#34;:&#34;Platinum&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;noble-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;rhodium&#34;,&#34;nodeId&#34;:&#34;rhodium&#34;,&#34;humanReadableId&#34;:&#34;Rhodium&#34;,&#34;label&#34;:&#34;Rhodium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;noble-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;silver&#34;,&#34;nodeId&#34;:&#34;silver&#34;,&#34;humanReadableId&#34;:&#34;Silver&#34;,&#34;label&#34;:&#34;Silver&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;noble-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:6},{&#34;id&#34;:&#34;other-metal&#34;,&#34;nodeId&#34;:&#34;other-metal&#34;,&#34;humanReadableId&#34;:&#34;Other Metal&#34;,&#34;label&#34;:&#34;Other Metal&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;beryllium&#34;,&#34;nodeId&#34;:&#34;beryllium&#34;,&#34;humanReadableId&#34;:&#34;Beryllium&#34;,&#34;label&#34;:&#34;Beryllium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;cadmium&#34;,&#34;nodeId&#34;:&#34;cadmium&#34;,&#34;humanReadableId&#34;:&#34;Cadmium&#34;,&#34;label&#34;:&#34;Cadmium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;chromium&#34;,&#34;nodeId&#34;:&#34;chromium&#34;,&#34;humanReadableId&#34;:&#34;Chromium&#34;,&#34;label&#34;:&#34;Chromium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;lead&#34;,&#34;nodeId&#34;:&#34;lead&#34;,&#34;humanReadableId&#34;:&#34;Lead&#34;,&#34;label&#34;:&#34;Lead&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;lead-antimony&#34;,&#34;nodeId&#34;:&#34;lead-antimony&#34;,&#34;humanReadableId&#34;:&#34;Lead Antimony&#34;,&#34;label&#34;:&#34;Lead Antimony&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;,&#34;lead&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;lead-tin&#34;,&#34;nodeId&#34;:&#34;lead-tin&#34;,&#34;humanReadableId&#34;:&#34;Lead Tin&#34;,&#34;label&#34;:&#34;Lead Tin&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;,&#34;lead&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;pure-low-alloyed-lead&#34;,&#34;nodeId&#34;:&#34;pure-low-alloyed-lead&#34;,&#34;humanReadableId&#34;:&#34;Pure/Low Alloyed Lead&#34;,&#34;label&#34;:&#34;Pure/Low Alloyed Lead&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;,&#34;lead&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:3},{&#34;id&#34;:&#34;lithium&#34;,&#34;nodeId&#34;:&#34;lithium&#34;,&#34;humanReadableId&#34;:&#34;Lithium&#34;,&#34;label&#34;:&#34;Lithium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;neodymium&#34;,&#34;nodeId&#34;:&#34;neodymium&#34;,&#34;humanReadableId&#34;:&#34;Neodymium&#34;,&#34;label&#34;:&#34;Neodymium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;neodymium-iron-boron-alloy&#34;,&#34;nodeId&#34;:&#34;neodymium-iron-boron-alloy&#34;,&#34;humanReadableId&#34;:&#34;Neodymium Iron Boron Alloy&#34;,&#34;label&#34;:&#34;Neodymium Iron Boron Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;,&#34;neodymium&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:1},{&#34;id&#34;:&#34;samarium&#34;,&#34;nodeId&#34;:&#34;samarium&#34;,&#34;humanReadableId&#34;:&#34;Samarium&#34;,&#34;label&#34;:&#34;Samarium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;samarium-cobalt-alloy&#34;,&#34;nodeId&#34;:&#34;samarium-cobalt-alloy&#34;,&#34;humanReadableId&#34;:&#34;Samarium Cobalt Alloy&#34;,&#34;label&#34;:&#34;Samarium Cobalt Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;,&#34;samarium&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:1},{&#34;id&#34;:&#34;tin&#34;,&#34;nodeId&#34;:&#34;tin&#34;,&#34;humanReadableId&#34;:&#34;Tin&#34;,&#34;label&#34;:&#34;Tin&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;pure-low-alloyed-tin&#34;,&#34;nodeId&#34;:&#34;pure-low-alloyed-tin&#34;,&#34;humanReadableId&#34;:&#34;Pure/Low Alloyed Tin&#34;,&#34;label&#34;:&#34;Pure/Low Alloyed Tin&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;,&#34;tin&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;tin-antimony&#34;,&#34;nodeId&#34;:&#34;tin-antimony&#34;,&#34;humanReadableId&#34;:&#34;Tin Antimony&#34;,&#34;label&#34;:&#34;Tin Antimony&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;,&#34;tin&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;tin-lead&#34;,&#34;nodeId&#34;:&#34;tin-lead&#34;,&#34;humanReadableId&#34;:&#34;Tin Lead&#34;,&#34;label&#34;:&#34;Tin Lead&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;,&#34;tin&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;unclassified-tin&#34;,&#34;nodeId&#34;:&#34;unclassified-tin&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Tin&#34;,&#34;label&#34;:&#34;Unclassified Tin&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;,&#34;tin&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:4},{&#34;id&#34;:&#34;zinc&#34;,&#34;nodeId&#34;:&#34;zinc&#34;,&#34;humanReadableId&#34;:&#34;Zinc&#34;,&#34;label&#34;:&#34;Zinc&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;unalloyed-zinc&#34;,&#34;nodeId&#34;:&#34;unalloyed-zinc&#34;,&#34;humanReadableId&#34;:&#34;Unalloyed Zinc&#34;,&#34;label&#34;:&#34;Unalloyed Zinc&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;,&#34;zinc&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;unclassified-zinc&#34;,&#34;nodeId&#34;:&#34;unclassified-zinc&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Zinc&#34;,&#34;label&#34;:&#34;Unclassified Zinc&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;,&#34;zinc&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;zinc-aluminium&#34;,&#34;nodeId&#34;:&#34;zinc-aluminium&#34;,&#34;humanReadableId&#34;:&#34;Zinc Aluminium&#34;,&#34;label&#34;:&#34;Zinc Aluminium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;,&#34;zinc&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;other-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:3}],&#34;ancestors&#34;:[&#34;metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:9},{&#34;id&#34;:&#34;refractory-metal&#34;,&#34;nodeId&#34;:&#34;refractory-metal&#34;,&#34;humanReadableId&#34;:&#34;Refractory Metal&#34;,&#34;label&#34;:&#34;Refractory Metal&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;hafnium&#34;,&#34;nodeId&#34;:&#34;hafnium&#34;,&#34;humanReadableId&#34;:&#34;Hafnium&#34;,&#34;label&#34;:&#34;Hafnium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;refractory-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;molybdenum&#34;,&#34;nodeId&#34;:&#34;molybdenum&#34;,&#34;humanReadableId&#34;:&#34;Molybdenum&#34;,&#34;label&#34;:&#34;Molybdenum&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;refractory-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;niobium&#34;,&#34;nodeId&#34;:&#34;niobium&#34;,&#34;humanReadableId&#34;:&#34;Niobium&#34;,&#34;label&#34;:&#34;Niobium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;refractory-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;rhenium&#34;,&#34;nodeId&#34;:&#34;rhenium&#34;,&#34;humanReadableId&#34;:&#34;Rhenium&#34;,&#34;label&#34;:&#34;Rhenium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;refractory-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;tantalum&#34;,&#34;nodeId&#34;:&#34;tantalum&#34;,&#34;humanReadableId&#34;:&#34;Tantalum&#34;,&#34;label&#34;:&#34;Tantalum&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;refractory-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;tungsten&#34;,&#34;nodeId&#34;:&#34;tungsten&#34;,&#34;humanReadableId&#34;:&#34;Tungsten&#34;,&#34;label&#34;:&#34;Tungsten&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;refractory-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;vanadium&#34;,&#34;nodeId&#34;:&#34;vanadium&#34;,&#34;humanReadableId&#34;:&#34;Vanadium&#34;,&#34;label&#34;:&#34;Vanadium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;refractory-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;zirconium&#34;,&#34;nodeId&#34;:&#34;zirconium&#34;,&#34;humanReadableId&#34;:&#34;Zirconium&#34;,&#34;label&#34;:&#34;Zirconium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;refractory-metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:8},{&#34;id&#34;:&#34;steel&#34;,&#34;nodeId&#34;:&#34;steel&#34;,&#34;humanReadableId&#34;:&#34;Steel&#34;,&#34;label&#34;:&#34;Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;alloy-steel&#34;,&#34;nodeId&#34;:&#34;alloy-steel&#34;,&#34;humanReadableId&#34;:&#34;Alloy Steel&#34;,&#34;label&#34;:&#34;Alloy Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;chromium-molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;chromium-molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Molybdenum Steel&#34;,&#34;label&#34;:&#34;Chromium Molybdenum Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;alloy-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;chromium-molybdenum-vanadium-steel&#34;,&#34;nodeId&#34;:&#34;chromium-molybdenum-vanadium-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Molybdenum Vanadium Steel&#34;,&#34;label&#34;:&#34;Chromium Molybdenum Vanadium Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;alloy-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;chromium-steel&#34;,&#34;nodeId&#34;:&#34;chromium-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Steel&#34;,&#34;label&#34;:&#34;Chromium Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;alloy-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;chromium-vanadium-steel&#34;,&#34;nodeId&#34;:&#34;chromium-vanadium-steel&#34;,&#34;humanReadableId&#34;:&#34;Chromium Vanadium Steel&#34;,&#34;label&#34;:&#34;Chromium Vanadium Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;alloy-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;manganese-steel&#34;,&#34;nodeId&#34;:&#34;manganese-steel&#34;,&#34;humanReadableId&#34;:&#34;Manganese Steel&#34;,&#34;label&#34;:&#34;Manganese Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;alloy-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Molybdenum Steel&#34;,&#34;label&#34;:&#34;Molybdenum Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;alloy-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nickel-chromium-molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Molybdenum Steel&#34;,&#34;label&#34;:&#34;Nickel Chromium Molybdenum Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;alloy-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nickel-chromium-steel&#34;,&#34;nodeId&#34;:&#34;nickel-chromium-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Chromium Steel&#34;,&#34;label&#34;:&#34;Nickel Chromium Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;alloy-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nickel-molybdenum-steel&#34;,&#34;nodeId&#34;:&#34;nickel-molybdenum-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Molybdenum Steel&#34;,&#34;label&#34;:&#34;Nickel Molybdenum Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;alloy-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nickel-steel&#34;,&#34;nodeId&#34;:&#34;nickel-steel&#34;,&#34;humanReadableId&#34;:&#34;Nickel Steel&#34;,&#34;label&#34;:&#34;Nickel Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;alloy-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;nitriding-steel&#34;,&#34;nodeId&#34;:&#34;nitriding-steel&#34;,&#34;humanReadableId&#34;:&#34;Nitriding Steel&#34;,&#34;label&#34;:&#34;Nitriding Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;alloy-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;silicon-manganese-steel&#34;,&#34;nodeId&#34;:&#34;silicon-manganese-steel&#34;,&#34;humanReadableId&#34;:&#34;Silicon Manganese Steel&#34;,&#34;label&#34;:&#34;Silicon Manganese Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;alloy-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;silicon-steel&#34;,&#34;nodeId&#34;:&#34;silicon-steel&#34;,&#34;humanReadableId&#34;:&#34;Silicon Steel&#34;,&#34;label&#34;:&#34;Silicon Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;alloy-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;unclassified-low-alloy-steel&#34;,&#34;nodeId&#34;:&#34;unclassified-low-alloy-steel&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Low Alloy Steel&#34;,&#34;label&#34;:&#34;Unclassified Low Alloy Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;alloy-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:14},{&#34;id&#34;:&#34;carbon-steel&#34;,&#34;nodeId&#34;:&#34;carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Carbon Steel&#34;,&#34;label&#34;:&#34;Carbon Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;high-carbon-steel&#34;,&#34;nodeId&#34;:&#34;high-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;High Carbon Steel&#34;,&#34;label&#34;:&#34;High Carbon Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;carbon-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;low-carbon-steel&#34;,&#34;nodeId&#34;:&#34;low-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Low Carbon Steel&#34;,&#34;label&#34;:&#34;Low Carbon Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;carbon-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;medium-carbon-steel&#34;,&#34;nodeId&#34;:&#34;medium-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Medium Carbon Steel&#34;,&#34;label&#34;:&#34;Medium Carbon Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;carbon-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;unclassified-carbon-steel&#34;,&#34;nodeId&#34;:&#34;unclassified-carbon-steel&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Carbon Steel&#34;,&#34;label&#34;:&#34;Unclassified Carbon Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;carbon-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:4},{&#34;id&#34;:&#34;low-alloy-steel&#34;,&#34;nodeId&#34;:&#34;low-alloy-steel&#34;,&#34;humanReadableId&#34;:&#34;Low Alloy Steel&#34;,&#34;label&#34;:&#34;Low Alloy Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;low-carbon-steel&#34;,&#34;nodeId&#34;:&#34;low-carbon-steel-&#34;,&#34;humanReadableId&#34;:&#34;Low Carbon Steel&#34;,&#34;label&#34;:&#34;Low Carbon Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;low-alloy-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:1},{&#34;id&#34;:&#34;maraging-steel&#34;,&#34;nodeId&#34;:&#34;maraging-steel&#34;,&#34;humanReadableId&#34;:&#34;Maraging Steel&#34;,&#34;label&#34;:&#34;Maraging Steel&#34;,&#34;checked&#34;:true,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;stainless-steel&#34;,&#34;nodeId&#34;:&#34;stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Stainless Steel&#34;,&#34;label&#34;:&#34;Stainless Steel&#34;,&#34;checked&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;austenitic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;austenitic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Austenitic Stainless Steel&#34;,&#34;label&#34;:&#34;Austenitic Stainless Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;stainless-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;duplex-stainless-steel&#34;,&#34;nodeId&#34;:&#34;duplex-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Duplex Stainless Steel&#34;,&#34;label&#34;:&#34;Duplex Stainless Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;stainless-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;ferritic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;ferritic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Ferritic Stainless Steel&#34;,&#34;label&#34;:&#34;Ferritic Stainless Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;stainless-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;martensitic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;martensitic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Martensitic Stainless Steel&#34;,&#34;label&#34;:&#34;Martensitic Stainless Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;stainless-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;precipitation-hardening-stainless-steel&#34;,&#34;nodeId&#34;:&#34;precipitation-hardening-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Precipitation Hardening Stainless Steel&#34;,&#34;label&#34;:&#34;Precipitation Hardening Stainless Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;stainless-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;superaustenitic-stainless-steel&#34;,&#34;nodeId&#34;:&#34;superaustenitic-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Superaustenitic Stainless Steel&#34;,&#34;label&#34;:&#34;Superaustenitic Stainless Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;stainless-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;unclassified-stainless-steel&#34;,&#34;nodeId&#34;:&#34;unclassified-stainless-steel&#34;,&#34;humanReadableId&#34;:&#34;Unclassified Stainless Steel&#34;,&#34;label&#34;:&#34;Unclassified Stainless Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;,&#34;stainless-steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:7},{&#34;id&#34;:&#34;tool-and-machining-steel&#34;,&#34;nodeId&#34;:&#34;tool-and-machining-steel&#34;,&#34;humanReadableId&#34;:&#34;Tool And Machining Steel&#34;,&#34;label&#34;:&#34;Tool And Machining Steel&#34;,&#34;checked&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;steel&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:6},{&#34;id&#34;:&#34;titanium&#34;,&#34;nodeId&#34;:&#34;titanium&#34;,&#34;humanReadableId&#34;:&#34;Titanium&#34;,&#34;label&#34;:&#34;Titanium&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;alpha-alloy&#34;,&#34;nodeId&#34;:&#34;alpha-alloy&#34;,&#34;humanReadableId&#34;:&#34;Alpha Alloy&#34;,&#34;label&#34;:&#34;Alpha Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;titanium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;alpha-beta-alloy&#34;,&#34;nodeId&#34;:&#34;alpha-beta-alloy&#34;,&#34;humanReadableId&#34;:&#34;Alpha Beta Alloy&#34;,&#34;label&#34;:&#34;Alpha Beta Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;titanium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;beta-alloy&#34;,&#34;nodeId&#34;:&#34;beta-alloy&#34;,&#34;humanReadableId&#34;:&#34;Beta Alloy&#34;,&#34;label&#34;:&#34;Beta Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;titanium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;low-alloy-titanium&#34;,&#34;nodeId&#34;:&#34;low-alloy-titanium&#34;,&#34;humanReadableId&#34;:&#34;Low Alloy Titanium&#34;,&#34;label&#34;:&#34;Low Alloy Titanium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;titanium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;near-alpha-alloy&#34;,&#34;nodeId&#34;:&#34;near-alpha-alloy&#34;,&#34;humanReadableId&#34;:&#34;Near Alpha Alloy&#34;,&#34;label&#34;:&#34;Near Alpha Alloy&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;titanium&#34;],&#34;rootNode&#34;:&#34;metal&#34;},{&#34;id&#34;:&#34;pure-titanium&#34;,&#34;nodeId&#34;:&#34;pure-titanium&#34;,&#34;humanReadableId&#34;:&#34;Pure Titanium&#34;,&#34;label&#34;:&#34;Pure Titanium&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;metal&#34;,&#34;titanium&#34;],&#34;rootNode&#34;:&#34;metal&#34;}],&#34;ancestors&#34;:[&#34;metal&#34;],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:6}],&#34;rootNode&#34;:&#34;metal&#34;,&#34;childrenNr&#34;:13,&#34;checked&#34;:false},{&#34;id&#34;:&#34;polymer&#34;,&#34;nodeId&#34;:&#34;polymer&#34;,&#34;humanReadableId&#34;:&#34;Polymer&#34;,&#34;label&#34;:&#34;Polymer&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;elastomer&#34;,&#34;nodeId&#34;:&#34;elastomer&#34;,&#34;humanReadableId&#34;:&#34;Elastomer&#34;,&#34;label&#34;:&#34;Elastomer&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;butadiene-rubber--br-&#34;,&#34;nodeId&#34;:&#34;butadiene-rubber--br-&#34;,&#34;humanReadableId&#34;:&#34;Butadiene Rubber (BR)&#34;,&#34;label&#34;:&#34;Butadiene Rubber (BR)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;chloroprene-rubber--cr-&#34;,&#34;nodeId&#34;:&#34;chloroprene-rubber--cr-&#34;,&#34;humanReadableId&#34;:&#34;Chloroprene Rubber (CR)&#34;,&#34;label&#34;:&#34;Chloroprene Rubber (CR)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;ethylene-propylene-diene-rubber--epdm-&#34;,&#34;nodeId&#34;:&#34;ethylene-propylene-diene-rubber--epdm-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Propylene Diene Rubber (EPDM)&#34;,&#34;label&#34;:&#34;Ethylene Propylene Diene Rubber (EPDM)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;ethylene-propylene-rubber--epr-&#34;,&#34;nodeId&#34;:&#34;ethylene-propylene-rubber--epr-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Propylene Rubber (EPR)&#34;,&#34;label&#34;:&#34;Ethylene Propylene Rubber (EPR)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;fluorosilicone-rubber--fvmq-&#34;,&#34;nodeId&#34;:&#34;fluorosilicone-rubber--fvmq-&#34;,&#34;humanReadableId&#34;:&#34;Fluorosilicone Rubber (FVMQ)&#34;,&#34;label&#34;:&#34;Fluorosilicone Rubber (FVMQ)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;natural-rubber--nr-&#34;,&#34;nodeId&#34;:&#34;natural-rubber--nr-&#34;,&#34;humanReadableId&#34;:&#34;Natural Rubber (NR)&#34;,&#34;label&#34;:&#34;Natural Rubber (NR)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;nitrile-rubber--nbr-&#34;,&#34;nodeId&#34;:&#34;nitrile-rubber--nbr-&#34;,&#34;humanReadableId&#34;:&#34;Nitrile Rubber (NBR)&#34;,&#34;label&#34;:&#34;Nitrile Rubber (NBR)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;styrene-butadiene-rubber--sbr-&#34;,&#34;nodeId&#34;:&#34;styrene-butadiene-rubber--sbr-&#34;,&#34;humanReadableId&#34;:&#34;Styrene Butadiene Rubber (SBR)&#34;,&#34;label&#34;:&#34;Styrene Butadiene Rubber (SBR)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;thermoplastic-elastomer--tpe-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-elastomer--tpe-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Elastomer (TPE)&#34;,&#34;label&#34;:&#34;Thermoplastic Elastomer (TPE)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;elastomeric-alloy--tpv-&#34;,&#34;nodeId&#34;:&#34;elastomeric-alloy--tpv-&#34;,&#34;humanReadableId&#34;:&#34;Elastomeric Alloy (TPV)&#34;,&#34;label&#34;:&#34;Elastomeric Alloy (TPV)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;,&#34;thermoplastic-elastomer--tpe-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;styrene-butadiene-styrene--sbs-&#34;,&#34;nodeId&#34;:&#34;styrene-butadiene-styrene--sbs-&#34;,&#34;humanReadableId&#34;:&#34;Styrene Butadiene Styrene (SBS)&#34;,&#34;label&#34;:&#34;Styrene Butadiene Styrene (SBS)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;,&#34;thermoplastic-elastomer--tpe-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;thermoplastic-copolyester--tpc-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-copolyester--tpc-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Copolyester (TPC)&#34;,&#34;label&#34;:&#34;Thermoplastic Copolyester (TPC)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;,&#34;thermoplastic-elastomer--tpe-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;thermoplastic-polyamide--tpa-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyamide--tpa-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyamide (TPA)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyamide (TPA)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;,&#34;thermoplastic-elastomer--tpe-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;thermoplastic-polyester-elastomer--tpee-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyester-elastomer--tpee-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyester Elastomer (TPEE)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyester Elastomer (TPEE)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;,&#34;thermoplastic-elastomer--tpe-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;thermoplastic-polyolefin--tpo-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyolefin--tpo-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyolefin (TPO)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyolefin (TPO)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;,&#34;thermoplastic-elastomer--tpe-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;thermoplastic-polyurethane--tpu-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-polyurethane--tpu-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Polyurethane (TPU)&#34;,&#34;label&#34;:&#34;Thermoplastic Polyurethane (TPU)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;,&#34;thermoplastic-elastomer--tpe-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;thermoplastic-styrenic-block-copolymer--tps-&#34;,&#34;nodeId&#34;:&#34;thermoplastic-styrenic-block-copolymer--tps-&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic Styrenic Block Copolymer (TPS)&#34;,&#34;label&#34;:&#34;Thermoplastic Styrenic Block Copolymer (TPS)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;,&#34;thermoplastic-elastomer--tpe-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;elastomer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:8}],&#34;ancestors&#34;:[&#34;polymer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:9},{&#34;id&#34;:&#34;thermoplastic&#34;,&#34;nodeId&#34;:&#34;thermoplastic&#34;,&#34;humanReadableId&#34;:&#34;Thermoplastic&#34;,&#34;label&#34;:&#34;Thermoplastic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;acrylic&#34;,&#34;nodeId&#34;:&#34;acrylic&#34;,&#34;humanReadableId&#34;:&#34;Acrylic&#34;,&#34;label&#34;:&#34;Acrylic&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyacrylonitrile--pan-&#34;,&#34;nodeId&#34;:&#34;polyacrylonitrile--pan-&#34;,&#34;humanReadableId&#34;:&#34;Polyacrylonitrile (PAN)&#34;,&#34;label&#34;:&#34;Polyacrylonitrile (PAN)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;acrylic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polymethyl-methacrylate--pmma-&#34;,&#34;nodeId&#34;:&#34;polymethyl-methacrylate--pmma-&#34;,&#34;humanReadableId&#34;:&#34;Polymethyl methacrylate (PMMA)&#34;,&#34;label&#34;:&#34;Polymethyl methacrylate (PMMA)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;acrylic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:2},{&#34;id&#34;:&#34;fluoropolymer&#34;,&#34;nodeId&#34;:&#34;fluoropolymer&#34;,&#34;humanReadableId&#34;:&#34;Fluoropolymer&#34;,&#34;label&#34;:&#34;Fluoropolymer&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ethylene-tetrafluoroethylene-copolymer--etfe-&#34;,&#34;nodeId&#34;:&#34;ethylene-tetrafluoroethylene-copolymer--etfe-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Tetrafluoroethylene Copolymer (ETFE)&#34;,&#34;label&#34;:&#34;Ethylene Tetrafluoroethylene Copolymer (ETFE)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;fluoropolymer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;fluorinated-ethylene-propylene--fep-&#34;,&#34;nodeId&#34;:&#34;fluorinated-ethylene-propylene--fep-&#34;,&#34;humanReadableId&#34;:&#34;Fluorinated ethylene propylene (FEP)&#34;,&#34;label&#34;:&#34;Fluorinated ethylene propylene (FEP)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;fluoropolymer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polytetrafluoroethylene--ptfe-&#34;,&#34;nodeId&#34;:&#34;polytetrafluoroethylene--ptfe-&#34;,&#34;humanReadableId&#34;:&#34;Polytetrafluoroethylene (PTFE)&#34;,&#34;label&#34;:&#34;Polytetrafluoroethylene (PTFE)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;fluoropolymer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyvinylidenefluoride--pvdf-&#34;,&#34;nodeId&#34;:&#34;polyvinylidenefluoride--pvdf-&#34;,&#34;humanReadableId&#34;:&#34;Polyvinylidenefluoride (PVDF)&#34;,&#34;label&#34;:&#34;Polyvinylidenefluoride (PVDF)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;fluoropolymer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:4},{&#34;id&#34;:&#34;liquid-crystal-polymers--lcp-&#34;,&#34;nodeId&#34;:&#34;liquid-crystal-polymers--lcp-&#34;,&#34;humanReadableId&#34;:&#34;Liquid Crystal Polymers (LCP)&#34;,&#34;label&#34;:&#34;Liquid Crystal Polymers (LCP)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyamide--pa-&#34;,&#34;nodeId&#34;:&#34;polyamide--pa-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide (PA)&#34;,&#34;label&#34;:&#34;Polyamide (PA)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;aramide&#34;,&#34;nodeId&#34;:&#34;aramide&#34;,&#34;humanReadableId&#34;:&#34;Aramide&#34;,&#34;label&#34;:&#34;Aramide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;copolyamide-6-66--pa6-66-&#34;,&#34;nodeId&#34;:&#34;copolyamide-6-66--pa6-66-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 6/66 (PA6/66)&#34;,&#34;label&#34;:&#34;Copolyamide 6/66 (PA6/66)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;other-polyamide--pa-&#34;,&#34;nodeId&#34;:&#34;other-polyamide--pa-&#34;,&#34;humanReadableId&#34;:&#34;Other Polyamide (PA)&#34;,&#34;label&#34;:&#34;Other Polyamide (PA)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyamide-1010--pa1010-&#34;,&#34;nodeId&#34;:&#34;polyamide-1010--pa1010-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 1010 (PA1010)&#34;,&#34;label&#34;:&#34;Polyamide 1010 (PA1010)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyamide-1012--pa1012-&#34;,&#34;nodeId&#34;:&#34;polyamide-1012--pa1012-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 1012 (PA1012)&#34;,&#34;label&#34;:&#34;Polyamide 1012 (PA1012)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyamide-11--pa11-&#34;,&#34;nodeId&#34;:&#34;polyamide-11--pa11-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 11 (PA11)&#34;,&#34;label&#34;:&#34;Polyamide 11 (PA11)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyamide-12--pa12-&#34;,&#34;nodeId&#34;:&#34;polyamide-12--pa12-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 12 (PA12)&#34;,&#34;label&#34;:&#34;Polyamide 12 (PA12)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyamide-410--pa410-&#34;,&#34;nodeId&#34;:&#34;polyamide-410--pa410-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 410 (PA410)&#34;,&#34;label&#34;:&#34;Polyamide 410 (PA410)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyamide-46--pa46-&#34;,&#34;nodeId&#34;:&#34;polyamide-46--pa46-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 46 (PA46)&#34;,&#34;label&#34;:&#34;Polyamide 46 (PA46)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyamide-6--pa6-&#34;,&#34;nodeId&#34;:&#34;polyamide-6--pa6-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 6 (PA6)&#34;,&#34;label&#34;:&#34;Polyamide 6 (PA6)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyamide-4t--pa4t-&#34;,&#34;nodeId&#34;:&#34;polyamide-4t--pa4t-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;label&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;,&#34;polyamide-6--pa6-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:1},{&#34;id&#34;:&#34;polyamide-6-66--pa6-66-&#34;,&#34;nodeId&#34;:&#34;polyamide-6-66--pa6-66-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 6/66 (PA6/66)&#34;,&#34;label&#34;:&#34;Polyamide 6/66 (PA6/66)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyamide-610--pa610-&#34;,&#34;nodeId&#34;:&#34;polyamide-610--pa610-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 610 (PA610)&#34;,&#34;label&#34;:&#34;Polyamide 610 (PA610)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyamide-612--pa612-&#34;,&#34;nodeId&#34;:&#34;polyamide-612--pa612-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 612 (PA612)&#34;,&#34;label&#34;:&#34;Polyamide 612 (PA612)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyamide-66--pa66-&#34;,&#34;nodeId&#34;:&#34;polyamide-66--pa66-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 66 (PA66)&#34;,&#34;label&#34;:&#34;Polyamide 66 (PA66)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyphthalamide--ppa-&#34;,&#34;nodeId&#34;:&#34;polyphthalamide--ppa-&#34;,&#34;humanReadableId&#34;:&#34;Polyphthalamide (PPA)&#34;,&#34;label&#34;:&#34;Polyphthalamide (PPA)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;copolyamide-66-6i--pa66-6i-&#34;,&#34;nodeId&#34;:&#34;copolyamide-66-6i--pa66-6i-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 66/6I (PA66/6I)&#34;,&#34;label&#34;:&#34;Copolyamide 66/6I (PA66/6I)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;,&#34;polyphthalamide--ppa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;copolyamide-6t-66--pa6t-66-&#34;,&#34;nodeId&#34;:&#34;copolyamide-6t-66--pa6t-66-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 6T/66 (PA6T/66)&#34;,&#34;label&#34;:&#34;Copolyamide 6T/66 (PA6T/66)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;,&#34;polyphthalamide--ppa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;copolyamide-6t-6i-66--pa6t-6i-66-&#34;,&#34;nodeId&#34;:&#34;copolyamide-6t-6i-66--pa6t-6i-66-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide 6T/6I/66 (PA6T/6I/66)&#34;,&#34;label&#34;:&#34;Copolyamide 6T/6I/66 (PA6T/6I/66)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;,&#34;polyphthalamide--ppa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;copolyamide-pa6i-6t--pa6i-6t-&#34;,&#34;nodeId&#34;:&#34;copolyamide-pa6i-6t--pa6i-6t-&#34;,&#34;humanReadableId&#34;:&#34;Copolyamide PA6I/6T (PA6I/6T)&#34;,&#34;label&#34;:&#34;Copolyamide PA6I/6T (PA6I/6T)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;,&#34;polyphthalamide--ppa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyamide-4t--pa4t-&#34;,&#34;nodeId&#34;:&#34;polyamide-4t--pa4t--&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;label&#34;:&#34;Polyamide 4T (PA4T)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;,&#34;polyphthalamide--ppa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyamide-6t--pa6t-&#34;,&#34;nodeId&#34;:&#34;polyamide-6t--pa6t-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide 6T (PA6T)&#34;,&#34;label&#34;:&#34;Polyamide 6T (PA6T)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;,&#34;polyphthalamide--ppa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyamide-mxd6--pamxd6-&#34;,&#34;nodeId&#34;:&#34;polyamide-mxd6--pamxd6-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide MXD6 (PAMXD6)&#34;,&#34;label&#34;:&#34;Polyamide MXD6 (PAMXD6)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;,&#34;polyphthalamide--ppa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyamide-pa6-6t--pa6-6t-&#34;,&#34;nodeId&#34;:&#34;polyamide-pa6-6t--pa6-6t-&#34;,&#34;humanReadableId&#34;:&#34;Polyamide PA6/6T (PA6/6T)&#34;,&#34;label&#34;:&#34;Polyamide PA6/6T (PA6/6T)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;,&#34;polyphthalamide--ppa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyamide--pa-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:8}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:15},{&#34;id&#34;:&#34;polyaryletherketone--paek-&#34;,&#34;nodeId&#34;:&#34;polyaryletherketone--paek-&#34;,&#34;humanReadableId&#34;:&#34;Polyaryletherketone (PAEK)&#34;,&#34;label&#34;:&#34;Polyaryletherketone (PAEK)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyether-ketone--pek-&#34;,&#34;nodeId&#34;:&#34;polyether-ketone--pek-&#34;,&#34;humanReadableId&#34;:&#34;Polyether Ketone (PEK)&#34;,&#34;label&#34;:&#34;Polyether Ketone (PEK)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyaryletherketone--paek-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyetherether-ketone--peek-&#34;,&#34;nodeId&#34;:&#34;polyetherether-ketone--peek-&#34;,&#34;humanReadableId&#34;:&#34;Polyetherether Ketone (PEEK)&#34;,&#34;label&#34;:&#34;Polyetherether Ketone (PEEK)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyaryletherketone--paek-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyetherketoneketone--pekk-&#34;,&#34;nodeId&#34;:&#34;polyetherketoneketone--pekk-&#34;,&#34;humanReadableId&#34;:&#34;Polyetherketoneketone (PEKK)&#34;,&#34;label&#34;:&#34;Polyetherketoneketone (PEKK)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyaryletherketone--paek-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:3},{&#34;id&#34;:&#34;polycarbonate--pc-&#34;,&#34;nodeId&#34;:&#34;polycarbonate--pc-&#34;,&#34;humanReadableId&#34;:&#34;Polycarbonate (PC)&#34;,&#34;label&#34;:&#34;Polycarbonate (PC)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyester&#34;,&#34;nodeId&#34;:&#34;polyester&#34;,&#34;humanReadableId&#34;:&#34;Polyester&#34;,&#34;label&#34;:&#34;Polyester&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polybutylene-terephthalate--pbt-&#34;,&#34;nodeId&#34;:&#34;polybutylene-terephthalate--pbt-&#34;,&#34;humanReadableId&#34;:&#34;Polybutylene Terephthalate (PBT)&#34;,&#34;label&#34;:&#34;Polybutylene Terephthalate (PBT)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyester&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyethylene-terephthalate--pet-&#34;,&#34;nodeId&#34;:&#34;polyethylene-terephthalate--pet-&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene Terephthalate (PET)&#34;,&#34;label&#34;:&#34;Polyethylene Terephthalate (PET)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyester&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyethylene-terephthalate-glycol--petg-&#34;,&#34;nodeId&#34;:&#34;polyethylene-terephthalate-glycol--petg-&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene Terephthalate Glycol (PETG)&#34;,&#34;label&#34;:&#34;Polyethylene Terephthalate Glycol (PETG)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyester&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyglycolicide--pga-&#34;,&#34;nodeId&#34;:&#34;polyglycolicide--pga-&#34;,&#34;humanReadableId&#34;:&#34;Polyglycolicide (PGA)&#34;,&#34;label&#34;:&#34;Polyglycolicide (PGA)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyester&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polytrimethylene-terephthalate--ptt-&#34;,&#34;nodeId&#34;:&#34;polytrimethylene-terephthalate--ptt-&#34;,&#34;humanReadableId&#34;:&#34;Polytrimethylene Terephthalate (PTT)&#34;,&#34;label&#34;:&#34;Polytrimethylene Terephthalate (PTT)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyester&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:5},{&#34;id&#34;:&#34;polyethylene--pe-&#34;,&#34;nodeId&#34;:&#34;polyethylene--pe-&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene (PE)&#34;,&#34;label&#34;:&#34;Polyethylene (PE)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyimide--pi-&#34;,&#34;nodeId&#34;:&#34;polyimide--pi-&#34;,&#34;humanReadableId&#34;:&#34;Polyimide (PI)&#34;,&#34;label&#34;:&#34;Polyimide (PI)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyamidimide--pai-&#34;,&#34;nodeId&#34;:&#34;polyamidimide--pai-&#34;,&#34;humanReadableId&#34;:&#34;Polyamidimide (PAI)&#34;,&#34;label&#34;:&#34;Polyamidimide (PAI)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyimide--pi-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polybenzimidazole--pbi-&#34;,&#34;nodeId&#34;:&#34;polybenzimidazole--pbi-&#34;,&#34;humanReadableId&#34;:&#34;Polybenzimidazole (PBI)&#34;,&#34;label&#34;:&#34;Polybenzimidazole (PBI)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyimide--pi-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyetherimide--pei-&#34;,&#34;nodeId&#34;:&#34;polyetherimide--pei-&#34;,&#34;humanReadableId&#34;:&#34;Polyetherimide (PEI)&#34;,&#34;label&#34;:&#34;Polyetherimide (PEI)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyimide--pi-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:3},{&#34;id&#34;:&#34;polyketone--pk-&#34;,&#34;nodeId&#34;:&#34;polyketone--pk-&#34;,&#34;humanReadableId&#34;:&#34;Polyketone (PK)&#34;,&#34;label&#34;:&#34;Polyketone (PK)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polylactic-acid--pla-&#34;,&#34;nodeId&#34;:&#34;polylactic-acid--pla-&#34;,&#34;humanReadableId&#34;:&#34;Polylactic Acid (PLA)&#34;,&#34;label&#34;:&#34;Polylactic Acid (PLA)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polymer-blend&#34;,&#34;nodeId&#34;:&#34;polymer-blend&#34;,&#34;humanReadableId&#34;:&#34;Polymer Blend&#34;,&#34;label&#34;:&#34;Polymer Blend&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyolefin--po-&#34;,&#34;nodeId&#34;:&#34;polyolefin--po-&#34;,&#34;humanReadableId&#34;:&#34;Polyolefin (PO)&#34;,&#34;label&#34;:&#34;Polyolefin (PO)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polybutene--pb-&#34;,&#34;nodeId&#34;:&#34;polybutene--pb-&#34;,&#34;humanReadableId&#34;:&#34;Polybutene (PB)&#34;,&#34;label&#34;:&#34;Polybutene (PB)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyolefin--po-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyethylene--pe-&#34;,&#34;nodeId&#34;:&#34;polyethylene--pe--&#34;,&#34;humanReadableId&#34;:&#34;Polyethylene (PE)&#34;,&#34;label&#34;:&#34;Polyethylene (PE)&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;high-density-polyethylene--pe-hd-&#34;,&#34;nodeId&#34;:&#34;high-density-polyethylene--pe-hd-&#34;,&#34;humanReadableId&#34;:&#34;High Density Polyethylene (PE-HD)&#34;,&#34;label&#34;:&#34;High Density Polyethylene (PE-HD)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyolefin--po-&#34;,&#34;polyethylene--pe--&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;high-molecular-weight-polyethylene--pe-hmw-&#34;,&#34;nodeId&#34;:&#34;high-molecular-weight-polyethylene--pe-hmw-&#34;,&#34;humanReadableId&#34;:&#34;High Molecular Weight Polyethylene (PE-HMW)&#34;,&#34;label&#34;:&#34;High Molecular Weight Polyethylene (PE-HMW)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyolefin--po-&#34;,&#34;polyethylene--pe--&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;linear-low-density-polyethylene--pe-lld-&#34;,&#34;nodeId&#34;:&#34;linear-low-density-polyethylene--pe-lld-&#34;,&#34;humanReadableId&#34;:&#34;Linear Low Density Polyethylene (PE-LLD)&#34;,&#34;label&#34;:&#34;Linear Low Density Polyethylene (PE-LLD)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyolefin--po-&#34;,&#34;polyethylene--pe--&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;low-density-polyethylene--pe-ld-&#34;,&#34;nodeId&#34;:&#34;low-density-polyethylene--pe-ld-&#34;,&#34;humanReadableId&#34;:&#34;Low Density Polyethylene (PE-LD)&#34;,&#34;label&#34;:&#34;Low Density Polyethylene (PE-LD)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyolefin--po-&#34;,&#34;polyethylene--pe--&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;medium-density-polyethylene--pe-md-&#34;,&#34;nodeId&#34;:&#34;medium-density-polyethylene--pe-md-&#34;,&#34;humanReadableId&#34;:&#34;Medium Density Polyethylene (PE-MD)&#34;,&#34;label&#34;:&#34;Medium Density Polyethylene (PE-MD)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyolefin--po-&#34;,&#34;polyethylene--pe--&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;ultra-high-molecular-weight-polyethylene--pe-uhmw-&#34;,&#34;nodeId&#34;:&#34;ultra-high-molecular-weight-polyethylene--pe-uhmw-&#34;,&#34;humanReadableId&#34;:&#34;Ultra High Molecular Weight Polyethylene (PE-UHMW)&#34;,&#34;label&#34;:&#34;Ultra High Molecular Weight Polyethylene (PE-UHMW)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyolefin--po-&#34;,&#34;polyethylene--pe--&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;very-low-density-polyethylene--pe-vld-&#34;,&#34;nodeId&#34;:&#34;very-low-density-polyethylene--pe-vld-&#34;,&#34;humanReadableId&#34;:&#34;Very Low Density Polyethylene (PE-VLD)&#34;,&#34;label&#34;:&#34;Very Low Density Polyethylene (PE-VLD)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyolefin--po-&#34;,&#34;polyethylene--pe--&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyolefin--po-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:7},{&#34;id&#34;:&#34;polymethylpentene--pmp-&#34;,&#34;nodeId&#34;:&#34;polymethylpentene--pmp-&#34;,&#34;humanReadableId&#34;:&#34;Polymethylpentene (PMP)&#34;,&#34;label&#34;:&#34;Polymethylpentene (PMP)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyolefin--po-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polypropylene--pp-&#34;,&#34;nodeId&#34;:&#34;polypropylene--pp-&#34;,&#34;humanReadableId&#34;:&#34;Polypropylene (PP)&#34;,&#34;label&#34;:&#34;Polypropylene (PP)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyolefin--po-&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:4},{&#34;id&#34;:&#34;polyoxymethylene--pom-&#34;,&#34;nodeId&#34;:&#34;polyoxymethylene--pom-&#34;,&#34;humanReadableId&#34;:&#34;Polyoxymethylene (POM)&#34;,&#34;label&#34;:&#34;Polyoxymethylene (POM)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyphenyl&#34;,&#34;nodeId&#34;:&#34;polyphenyl&#34;,&#34;humanReadableId&#34;:&#34;Polyphenyl&#34;,&#34;label&#34;:&#34;Polyphenyl&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyphenyl-ether--ppe-&#34;,&#34;nodeId&#34;:&#34;polyphenyl-ether--ppe-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenyl Ether (PPE)&#34;,&#34;label&#34;:&#34;Polyphenyl Ether (PPE)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyphenyl&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyphenylene-oxide--ppo-&#34;,&#34;nodeId&#34;:&#34;polyphenylene-oxide--ppo-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenylene Oxide (PPO)&#34;,&#34;label&#34;:&#34;Polyphenylene Oxide (PPO)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyphenyl&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyphenylene-sulfide--pps-&#34;,&#34;nodeId&#34;:&#34;polyphenylene-sulfide--pps-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenylene Sulfide (PPS)&#34;,&#34;label&#34;:&#34;Polyphenylene Sulfide (PPS)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polyphenyl&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:3},{&#34;id&#34;:&#34;polysaccharide&#34;,&#34;nodeId&#34;:&#34;polysaccharide&#34;,&#34;humanReadableId&#34;:&#34;Polysaccharide&#34;,&#34;label&#34;:&#34;Polysaccharide&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polysulphones&#34;,&#34;nodeId&#34;:&#34;polysulphones&#34;,&#34;humanReadableId&#34;:&#34;Polysulphones&#34;,&#34;label&#34;:&#34;Polysulphones&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;polyether-sulfone--pes-&#34;,&#34;nodeId&#34;:&#34;polyether-sulfone--pes-&#34;,&#34;humanReadableId&#34;:&#34;Polyether Sulfone (PES)&#34;,&#34;label&#34;:&#34;Polyether Sulfone (PES)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polysulphones&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyphenylsulphone--ppsu-&#34;,&#34;nodeId&#34;:&#34;polyphenylsulphone--ppsu-&#34;,&#34;humanReadableId&#34;:&#34;Polyphenylsulphone (PPSU)&#34;,&#34;label&#34;:&#34;Polyphenylsulphone (PPSU)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polysulphones&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polysulphone--psu-&#34;,&#34;nodeId&#34;:&#34;polysulphone--psu-&#34;,&#34;humanReadableId&#34;:&#34;Polysulphone (PSU)&#34;,&#34;label&#34;:&#34;Polysulphone (PSU)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polysulphones&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polysulphone-general--psu-&#34;,&#34;nodeId&#34;:&#34;polysulphone-general--psu-&#34;,&#34;humanReadableId&#34;:&#34;Polysulphone General (PSU)&#34;,&#34;label&#34;:&#34;Polysulphone General (PSU)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;polysulphones&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:4},{&#34;id&#34;:&#34;styrene&#34;,&#34;nodeId&#34;:&#34;styrene&#34;,&#34;humanReadableId&#34;:&#34;Styrene&#34;,&#34;label&#34;:&#34;Styrene&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;acrylonitrile-butadiene-styrene--abs-&#34;,&#34;nodeId&#34;:&#34;acrylonitrile-butadiene-styrene--abs-&#34;,&#34;humanReadableId&#34;:&#34;Acrylonitrile Butadiene Styrene (ABS)&#34;,&#34;label&#34;:&#34;Acrylonitrile Butadiene Styrene (ABS)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;styrene&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;acrylonitrile-styrene-acrylate--asa-&#34;,&#34;nodeId&#34;:&#34;acrylonitrile-styrene-acrylate--asa-&#34;,&#34;humanReadableId&#34;:&#34;Acrylonitrile Styrene Acrylate (ASA)&#34;,&#34;label&#34;:&#34;Acrylonitrile Styrene Acrylate (ASA)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;styrene&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;high-impact-polystyrene--hips-&#34;,&#34;nodeId&#34;:&#34;high-impact-polystyrene--hips-&#34;,&#34;humanReadableId&#34;:&#34;High Impact Polystyrene (HIPS)&#34;,&#34;label&#34;:&#34;High Impact Polystyrene (HIPS)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;styrene&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;methacrylate-butadiene-styrene--mbs-&#34;,&#34;nodeId&#34;:&#34;methacrylate-butadiene-styrene--mbs-&#34;,&#34;humanReadableId&#34;:&#34;Methacrylate Butadiene Styrene (MBS)&#34;,&#34;label&#34;:&#34;Methacrylate Butadiene Styrene (MBS)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;styrene&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polystyrene--ps-&#34;,&#34;nodeId&#34;:&#34;polystyrene--ps-&#34;,&#34;humanReadableId&#34;:&#34;Polystyrene (PS)&#34;,&#34;label&#34;:&#34;Polystyrene (PS)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;styrene&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;styrene-acrylonitrile--san-&#34;,&#34;nodeId&#34;:&#34;styrene-acrylonitrile--san-&#34;,&#34;humanReadableId&#34;:&#34;Styrene Acrylonitrile (SAN)&#34;,&#34;label&#34;:&#34;Styrene Acrylonitrile (SAN)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;styrene&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:6},{&#34;id&#34;:&#34;vinyl&#34;,&#34;nodeId&#34;:&#34;vinyl&#34;,&#34;humanReadableId&#34;:&#34;Vinyl&#34;,&#34;label&#34;:&#34;Vinyl&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;ethylene-vinyl-acetate--evac-&#34;,&#34;nodeId&#34;:&#34;ethylene-vinyl-acetate--evac-&#34;,&#34;humanReadableId&#34;:&#34;Ethylene Vinyl Acetate (EVAC)&#34;,&#34;label&#34;:&#34;Ethylene Vinyl Acetate (EVAC)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;vinyl&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyvinyl-chloride--pvc-&#34;,&#34;nodeId&#34;:&#34;polyvinyl-chloride--pvc-&#34;,&#34;humanReadableId&#34;:&#34;Polyvinyl Chloride (PVC)&#34;,&#34;label&#34;:&#34;Polyvinyl Chloride (PVC)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;,&#34;vinyl&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermoplastic&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:2}],&#34;ancestors&#34;:[&#34;polymer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:19},{&#34;id&#34;:&#34;thermosetting&#34;,&#34;nodeId&#34;:&#34;thermosetting&#34;,&#34;humanReadableId&#34;:&#34;Thermosetting&#34;,&#34;label&#34;:&#34;Thermosetting&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;amino-resin&#34;,&#34;nodeId&#34;:&#34;amino-resin&#34;,&#34;humanReadableId&#34;:&#34;Amino Resin&#34;,&#34;label&#34;:&#34;Amino Resin&#34;,&#34;disabled&#34;:true,&#34;children&#34;:[{&#34;id&#34;:&#34;bismaleimide--bmi-&#34;,&#34;nodeId&#34;:&#34;bismaleimide--bmi-&#34;,&#34;humanReadableId&#34;:&#34;Bismaleimide (BMI)&#34;,&#34;label&#34;:&#34;Bismaleimide (BMI)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermosetting&#34;,&#34;amino-resin&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;melamine-formaldehyde--mf-&#34;,&#34;nodeId&#34;:&#34;melamine-formaldehyde--mf-&#34;,&#34;humanReadableId&#34;:&#34;Melamine formaldehyde (MF)&#34;,&#34;label&#34;:&#34;Melamine formaldehyde (MF)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermosetting&#34;,&#34;amino-resin&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermosetting&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:2},{&#34;id&#34;:&#34;epoxy-resin--ep-&#34;,&#34;nodeId&#34;:&#34;epoxy-resin--ep-&#34;,&#34;humanReadableId&#34;:&#34;Epoxy Resin (EP)&#34;,&#34;label&#34;:&#34;Epoxy Resin (EP)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermosetting&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;phenol-formaldehyde-resin--pf-&#34;,&#34;nodeId&#34;:&#34;phenol-formaldehyde-resin--pf-&#34;,&#34;humanReadableId&#34;:&#34;Phenol Formaldehyde Resin (PF)&#34;,&#34;label&#34;:&#34;Phenol Formaldehyde Resin (PF)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermosetting&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;phthalonitrile--pn-&#34;,&#34;nodeId&#34;:&#34;phthalonitrile--pn-&#34;,&#34;humanReadableId&#34;:&#34;Phthalonitrile (PN)&#34;,&#34;label&#34;:&#34;Phthalonitrile (PN)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermosetting&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;polyester-resin--up-&#34;,&#34;nodeId&#34;:&#34;polyester-resin--up-&#34;,&#34;humanReadableId&#34;:&#34;Polyester Resin (UP)&#34;,&#34;label&#34;:&#34;Polyester Resin (UP)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermosetting&#34;],&#34;rootNode&#34;:&#34;polymer&#34;},{&#34;id&#34;:&#34;vinyl-ester-resin--ve-&#34;,&#34;nodeId&#34;:&#34;vinyl-ester-resin--ve-&#34;,&#34;humanReadableId&#34;:&#34;Vinyl Ester Resin (VE)&#34;,&#34;label&#34;:&#34;Vinyl Ester Resin (VE)&#34;,&#34;disabled&#34;:true,&#34;ancestors&#34;:[&#34;polymer&#34;,&#34;thermosetting&#34;],&#34;rootNode&#34;:&#34;polymer&#34;}],&#34;ancestors&#34;:[&#34;polymer&#34;],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:6}],&#34;rootNode&#34;:&#34;polymer&#34;,&#34;childrenNr&#34;:3,&#34;checked&#34;:false}],&#34;categorySpecificFilter&#34;:{&#34;name&#34;:&#34;metal&#34;,&#34;disabled&#34;:false,&#34;forms&#34;:[{&#34;id&#34;:&#34;bar&#34;,&#34;label&#34;:&#34;Bar&#34;,&#34;checked&#34;:true},{&#34;id&#34;:&#34;billet&#34;,&#34;label&#34;:&#34;Billet&#34;},{&#34;id&#34;:&#34;casting&#34;,&#34;label&#34;:&#34;Casting&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;coil&#34;,&#34;label&#34;:&#34;Coil&#34;},{&#34;id&#34;:&#34;disc&#34;,&#34;label&#34;:&#34;Disc&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;flat&#34;,&#34;label&#34;:&#34;Flat&#34;},{&#34;id&#34;:&#34;flat-bar&#34;,&#34;label&#34;:&#34;Flat Bar&#34;},{&#34;id&#34;:&#34;foil&#34;,&#34;label&#34;:&#34;Foil&#34;},{&#34;id&#34;:&#34;forging&#34;,&#34;label&#34;:&#34;Forging&#34;},{&#34;id&#34;:&#34;full-section&#34;,&#34;label&#34;:&#34;Full Section&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;half-round-bar&#34;,&#34;label&#34;:&#34;Half Round Bar&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;hexagonal-bar&#34;,&#34;label&#34;:&#34;Hexagonal Bar&#34;},{&#34;id&#34;:&#34;hexagonal-bright-bar&#34;,&#34;label&#34;:&#34;Hexagonal Bright Bar&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;hexagonal-rod&#34;,&#34;label&#34;:&#34;Hexagonal Rod&#34;},{&#34;id&#34;:&#34;hexagonal-wire&#34;,&#34;label&#34;:&#34;Hexagonal Wire&#34;},{&#34;id&#34;:&#34;hollow-bar&#34;,&#34;label&#34;:&#34;Hollow Bar&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;ingot&#34;,&#34;label&#34;:&#34;Ingot&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;pipe&#34;,&#34;label&#34;:&#34;Pipe&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;plate&#34;,&#34;label&#34;:&#34;Plate&#34;},{&#34;id&#34;:&#34;powder&#34;,&#34;label&#34;:&#34;Powder&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;profile&#34;,&#34;label&#34;:&#34;Profile&#34;},{&#34;id&#34;:&#34;profile-wire&#34;,&#34;label&#34;:&#34;Profile Wire&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;rod&#34;,&#34;label&#34;:&#34;Rod&#34;},{&#34;id&#34;:&#34;round-bar&#34;,&#34;label&#34;:&#34;Round Bar&#34;},{&#34;id&#34;:&#34;round-bright-bar&#34;,&#34;label&#34;:&#34;Round Bright Bar&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;round-rod&#34;,&#34;label&#34;:&#34;Round Rod&#34;},{&#34;id&#34;:&#34;round-wire&#34;,&#34;label&#34;:&#34;Round Wire&#34;},{&#34;id&#34;:&#34;seamless-tube&#34;,&#34;label&#34;:&#34;Seamless Tube&#34;},{&#34;id&#34;:&#34;sheet&#34;,&#34;label&#34;:&#34;Sheet&#34;},{&#34;id&#34;:&#34;spring&#34;,&#34;label&#34;:&#34;Spring&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;squar-bar&#34;,&#34;label&#34;:&#34;Squar Bar&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;square-bar&#34;,&#34;label&#34;:&#34;Square Bar&#34;},{&#34;id&#34;:&#34;strip&#34;,&#34;label&#34;:&#34;Strip&#34;},{&#34;id&#34;:&#34;tube&#34;,&#34;label&#34;:&#34;Tube&#34;},{&#34;id&#34;:&#34;welded-tube&#34;,&#34;label&#34;:&#34;Welded Tube&#34;,&#34;disabled&#34;:true},{&#34;id&#34;:&#34;wire&#34;,&#34;label&#34;:&#34;Wire&#34;}],&#34;fillers&#34;:[],&#34;modifications&#34;:[],&#34;processing&#34;:[],&#34;certifications&#34;:[],&#34;primaryPhase&#34;:[],&#34;secondaryPhase&#34;:[]},&#34;tags&#34;:[{&#34;id&#34;:&#34;form&#34;,&#34;value&#34;:&#34;bar&#34;,&#34;label&#34;:&#34;Bar&#34;}],&#34;suppliers&#34;:[{&#34;id&#34;:&#34;dest&#34;,&#34;label&#34;:&#34;Deutsche Edelstahlwerke (DEW)&#34;,&#34;materialsCount&#34;:93},{&#34;id&#34;:&#34;ugit&#34;,&#34;label&#34;:&#34;Ugitech&#34;,&#34;materialsCount&#34;:50},{&#34;id&#34;:&#34;sver&#34;,&#34;label&#34;:&#34;Sverdrup Steel AS&#34;,&#34;materialsCount&#34;:20},{&#34;id&#34;:&#34;salo&#34;,&#34;label&#34;:&#34;Salomon&#39;s Metalen&#34;,&#34;materialsCount&#34;:16},{&#34;id&#34;:&#34;hemp&#34;,&#34;label&#34;:&#34;Hempel Special Metals&#34;,&#34;materialsCount&#34;:4},{&#34;id&#34;:&#34;vdmm&#34;,&#34;label&#34;:&#34;VDM Metals&#34;,&#34;materialsCount&#34;:1},{&#34;id&#34;:&#34;song&#34;,&#34;label&#34;:&#34;Dongguan songshun mould steel Co., Ltd.&#34;,&#34;materialsCount&#34;:13},{&#34;id&#34;:&#34;ambi&#34;,&#34;label&#34;:&#34;Ambica Steels Limited&#34;,&#34;materialsCount&#34;:10}]},&#34;collapsed&#34;:{&#34;categories&#34;:[]},&#34;specification&#34;:{&#34;queryParams&#34;:&#34;categories=steel u0026tags=form:bar&#34;,&#34;clauses&#34;:[{&#34;type&#34;:&#34;tags&#34;,&#34;id&#34;:&#34;form&#34;,&#34;value&#34;:&#34;bar&#34;,&#34;label&#34;:&#34;Bar&#34;}]},&#34;tags&#34;:[{&#34;id&#34;:&#34;form&#34;,&#34;value&#34;:&#34;bar&#34;,&#34;label&#34;:&#34;Bar&#34;}],&#34;view&#34;:&#34;result-list&#34;,&#34;sidebarCollapsed&#34;:false,&#34;unitsSystem&#34;:&#34;metric&#34;,&#34;polymerFilter&#34;:{&#34;disabled&#34;:true}},&#34;supplierSearch&#34;:{&#34;specification&#34;:{&#34;grade&#34;:{&#34;value&#34;:&#34;&#34;,&#34;touched&#34;:false},&#34;form&#34;:{&#34;value&#34;:&#34;&#34;,&#34;touched&#34;:false},&#34;country&#34;:{&#34;value&#34;:[]},&#34;certification&#34;:{&#34;value&#34;:[]}},&#34;grades&#34;:[],&#34;forms&#34;:[],&#34;countries&#34;:[],&#34;certifications&#34;:[],&#34;results&#34;:{&#34;companies&#34;:{&#34;data&#34;:[],&#34;companiesCount&#34;:20,&#34;equivalentsCount&#34;:20,&#34;page&#34;:1}},&#34;view&#34;:&#34;result-list&#34;,&#34;map&#34;:{&#34;selectedLocation&#34;:{&#34;id&#34;:&#34;Location 1&#34;,&#34;companyCode&#34;:&#34;Supplier A&#34;},&#34;locations&#34;:[{&#34;companyCode&#34;:&#34;Supplier A&#34;,&#34;id&#34;:&#34;Location 1&#34;,&#34;position&#34;:{&#34;lat&#34;:41.3954,&#34;lng&#34;:20.162}},{&#34;companyCode&#34;:&#34;Supplier A&#34;,&#34;id&#34;:&#34;Location 2&#34;,&#34;position&#34;:{&#34;lat&#34;:41.3917,&#34;lng&#34;:25.1649}},{&#34;companyCode&#34;:&#34;Supplier A&#34;,&#34;id&#34;:&#34;Location 3&#34;,&#34;isEquivalent&#34;:true,&#34;position&#34;:{&#34;lat&#34;:49.3773,&#34;lng&#34;:28.1585}},{&#34;companyCode&#34;:&#34;Supplier A&#34;,&#34;id&#34;:&#34;Location 4&#34;,&#34;position&#34;:{&#34;lat&#34;:45.3797,&#34;lng&#34;:12.1682}},{&#34;companyCode&#34;:&#34;Supplier A&#34;,&#34;id&#34;:&#34;Location 5&#34;,&#34;isEquivalent&#34;:true,&#34;position&#34;:{&#34;lat&#34;:38.3773,&#34;lng&#34;:37.1915}}]}},&#34;categoriesTree&#34;:{&#34;list&#34;:[],&#34;selected&#34;:{},&#34;recommended&#34;:{}},&#34;messages&#34;:{&#34;conversationsList&#34;:[],&#34;currentConversation&#34;:null,&#34;selectedConversationId&#34;:&#34;&#34;},&#34;messagesAdmin&#34;:{&#34;adminConversationsList&#34;:[],&#34;adminCurrentConversation&#34;:&#34;&#34;,&#34;adminCurrentRecommendedSuppliers&#34;:[],&#34;adminCurrentLinkedSuppliers&#34;:[],&#34;selectedAdminConversationId&#34;:&#34;&#34;,&#34;filterType&#34;:&#34;code&#34;,&#34;filterValue&#34;:&#34;&#34;,&#34;resolution&#34;:&#34;&#34;,&#34;sort&#34;:&#34;desc&#34;,&#34;sortingField&#34;:&#34;createdDate&#34;,&#34;size&#34;:10,&#34;page&#34;:0,&#34;conversationsCount&#34;:0,&#34;pagesCount&#34;:0,&#34;suppliers&#34;:[]},&#34;suppliersFilter&#34;:{&#34;suppliersTree&#34;:null,&#34;selectedSuppliers&#34;:null},&#34;undo&#34;:{},&#34;propertiesTree&#34;:{&#34;list&#34;:[],&#34;selected&#34;:{}},&#34;retargeting&#34;:{&#34;title&#34;:&#34;&#34;,&#34;data&#34;:[],&#34;selectedUsersIds&#34;:[],&#34;singleUserId&#34;:&#34;&#34;},&#34;formData&#34;:{&#34;materialId&#34;:&#34;&#34;,&#34;companyCodes&#34;:[],&#34;categories&#34;:[],&#34;formName&#34;:&#34;&#34;,&#34;verifiedDistributors&#34;:[]},&#34;supplierDashboard&#34;:{&#34;currentDashboardView&#34;:&#34;&#34;,&#34;currentDashboardMenuSubItem&#34;:null,&#34;dashboardInfo&#34;:{}},&#34;applicationsFilter&#34;:{&#34;applications&#34;:[],&#34;selectedApplications&#34;:[]},&#34;unseen&#34;:{&#34;unseenConversationsCount&#34;:0},&#34;ashbyChart&#34;:{&#34;data&#34;:{},&#34;zoomedViewData&#34;:{&#34;supplierMaterials&#34;:[],&#34;context&#34;:{}},&#34;clickedClusters&#34;:[],&#34;suppliers&#34;:[]},&#34;campaigns&#34;:{&#34;categoryCampaigns&#34;:[],&#34;defaultCampaigns&#34;:[{&#34;name&#34;:&#34;Default Ad&#34;,&#34;category&#34;:&#34;matmatch&#34;,&#34;supplierId&#34;:&#34;Default&#34;,&#34;slots&#34;:[&#34;Top&#34;],&#34;targetUrl&#34;:&#34;https://go.matmatch.com/advertise&#34;,&#34;targetWindow&#34;:&#34;_blank&#34;,&#34;banners&#34;:[{&#34;size&#34;:&#34;728x90&#34;,&#34;imageId&#34;:&#34;d792d789-c5c3-4a70-808b-3ec5ff2d9d33&#34;}]}]},&#34;searchBar&#34;:{&#34;show&#34;:true},&#34;advancedSearchPlotMaterials&#34;:{&#34;ashbyChartSettings&#34;:{&#34;propertyX&#34;:&#34;density&#34;,&#34;propertyY&#34;:&#34;elastic-modulus&#34;}}}},&#34;page&#34;:&#34;/advanced-search&#34;,&#34;query&#34;:{&#34;categories&#34;:&#34;steel&#34;,&#34;tags&#34;:&#34;form:bar&#34;},&#34;buildId&#34;:&#34;d4287122&#34;,&#34;runtimeConfig&#34;:{&#34;NODE_ENV&#34;:&#34;production&#34;,&#34;MATMATCH_CONFIG_ENV&#34;:&#34;production&#34;,&#34;SENTRY_DSN&#34;:&#34;https://adb8811c666c47d48ea65639f264583b@sentry.io/189857&#34;,&#34;RECAPTCHA_KEY&#34;:&#34;6LcKSOAUAAAAALB76MApsk-XoTTzEBY2-oqMwwLm&#34;,&#34;GA_ENABLED&#34;:true,&#34;GA_ENABLE_LOG_TO_CONSOLE&#34;:false,&#34;LEADFEEDER_ENABLED&#34;:true,&#34;LEADFEEDER_TRACKING_ID&#34;:&#34;Yn8J1xYRVZwgW0Rk&#34;,&#34;HUBSPOT_ENABLED&#34;:true,&#34;HUBSPOT_TRACKING_ID&#34;:&#34;4597184&#34;,&#34;HUBSPOT_SUBSCRIPTION_ID&#34;:&#34;7207954&#34;,&#34;HUBSPOT_NEWSLETTER_FORM_ID&#34;:&#34;406d64d3-90e0-4174-902c-5fb4e72743ee&#34;,&#34;HUBSPOT_CONTACT_FORM_ID&#34;:&#34;1d836df6-1a29-42af-b067-822ad3021c1f&#34;,&#34;HUBSPOT_SUSTAINABILITY_FORM_ID&#34;:&#34;ac183d3d-8966-4086-b781-2d843b345377&#34;,&#34;HUBSPOT_REQUEST_BOARD_FORM_ID&#34;:&#34;0726b812-0d7c-4b9a-848b-ee6797c92db0&#34;,&#34;HUBSPOT_CONTACT_FORM_ID_FIELD_NAMES&#34;:{&#34;supplyMaterialsFieldName&#34;:&#34;is_materials_supplier__c&#34;},&#34;HUBSPOT_REQUEST_MATERIAL_DATA_FORM_ID&#34;:&#34;bce2daac-e6e7-41cb-ba4c-b4e27c7fec37&#34;,&#34;HUBSPOT_REQUEST_BOOK_A_DEMO&#34;:&#34;ed5d8d19-d961-48cf-b58c-f192500e6eb7&#34;,&#34;HUBSPOT_REQUEST_BOOK_A_DEMO_FORM_LINK&#34;:&#34;https://share.hsforms.com/17V2NGdlhSM-1jPGSUA5utw2qj7k&#34;,&#34;HUBSPOT_REQUEST_BOOK_A_DEMO_FIELD_NAMES&#34;:{&#34;supplierTypesFieldName&#34;:&#34;plsuppliertype__c&#34;},&#34;HUBSPOT_REQUEST_BOOK_A_MEETING&#34;:&#34;b4b7750c-75f8-4741-8fe6-daec03c1454b&#34;,&#34;HUBSPOT_GET_IT_NOW&#34;:&#34;818cf677-3f93-4f86-83dc-43996c9c8b2d&#34;,&#34;ADBUTLER_ENABLED&#34;:true,&#34;ADBUTLER_ACCOUNT_ID&#34;:181075,&#34;ADBUTLER_ADVANCED_SEARCH_ZONE_ID&#34;:470439,&#34;ADBUTLER_MATERIAL_PAGE_ZONE_ID&#34;:470587,&#34;ADBUTLER_CONTENT_HUB_ZONE_ID&#34;:473203,&#34;GA_TRACKING_ID&#34;:&#34;UA-85033665-5&#34;,&#34;GA_OPTIMIZE_ID&#34;:&#34;GTM-KQK3NFF&#34;,&#34;GTM_ID&#34;:&#34;GTM-PV6RPFJ&#34;},&#34;isFallback&#34;:false,&#34;customServer&#34;:true,&#34;gip&#34;:true,&#34;appGip&#34;:true,&#34;scriptLoader&#34;:[]}&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; . . Using the ‘find_all’ function of soup we can find all these blocks by specifying the details of the block, i.e. &lt;div class=”job_seen_beacon&gt; . The length of jobs_soup should be the number of job panels on the page, and each should be for a specific job. The output for the first is shown below (different search criteria). . jobs_soup=soup.find_all(name=&quot;div&quot;, attrs={&quot;class&quot;:&quot;job_seen_beacon&quot;}) jobs_soup[0] . IndexError Traceback (most recent call last) &lt;ipython-input-52-0a7a09773cec&gt; in &lt;module&gt; 2 jobs_soup=soup.find_all(name=&#34;div&#34;, attrs={&#34;class&#34;:&#34;job_seen_beacon&#34;}) 3 -&gt; 4 jobs_soup[0] IndexError: list index out of range . . We now need to pick out the details of the job from these blocks. To do this we go back to Chrome. . . Clicking on one of the job titles displays the job title is given as: . &lt;span title=&quot;Data Analyst&quot;&gt;Data Analyst&lt;/span&gt; . There are a few ways we can extract this. What we want is a “span” with a feature called “title”. One way is to scroll through all “div” and find one with a title, using the except to help if it doesn’t have a title. . div=jobs_soup[0] for ab in div.find_all(name=&quot;span&quot;): try: aJob=ab[&#39;title&#39;] except: pass aJob . &#39;Electricians Mate / Electrical Improver&#39; . Each category we want to extract is slightly different so requires a slightly different approach. Although, the same procedure of using the developer tools in chrome and then modifying how the soup is searched is used. . For the company name it is within &lt;span class=”companyName”&gt;&lt;a&gt;Company X… . So can be accessed from the string within the span with class= companyName . . aaa=div.find_all(name=&quot;span&quot;, attrs={&quot;class&quot;:&quot;companyName&quot;}) aaa[0].string . &#39;Electrical Avenue&#39; . Function to scrape . This can be done for other details we might want from the other job details as below in a single function . def extract_title(soup): #initialse jobs = [] company=[] pay=[] descr=[] #&quot;job_seen_beacon&quot; is the div for each job panel # would be better to use &lt;a&gt; tag with for div in soup.find_all(name=&quot;div&quot;, attrs={&quot;class&quot;:&quot;job_seen_beacon&quot;}): #for the company name is in span tag with class=companyName aComp=&quot;-&quot; for a in div.find_all(name=&quot;span&quot;, attrs={&quot;class&quot;:&quot;companyName&quot;}): try: aComp=a.string except: print(&#39;exception comp&#39;) pass company.append(a.string) aJob=&#39;-&#39; for ab in div.find_all(name=&quot;span&quot;): try: aJob=ab[&#39;title&#39;] except: #Exception pass jobs.append(aJob) aPay=&quot;0&quot; for abc in div.find_all(name=&quot;span&quot;, attrs={&quot;class&quot;:&quot;salary-snippet&quot;}): try: aPay=abc.string except: print(&#39;exception pay&#39;) pass pay.append(aPay) aDescr=&#39;&#39; abc = div.find_all(name=&#39;div&#39;,attrs={&quot;class&quot;:&quot;job-snippet&quot;}) for abcd in abc[0].find_all(name=&#39;li&#39;): try: aDescr=aDescr+abcd.getText()+&#39;-&#39; except: print(&#39;exception decr&#39;) pass descr.append(aDescr) sa=soup.find_all(name=&#39;a&#39;,attrs={&quot;target&quot;:&quot;_blank&quot;}) urlss=[] strURLstart=&#39;https://www.indeed.co.uk&#39; for aSect in sa: li=[] try: aCheck=aSect[&#39;id&#39;] li.append(aCheck) urlss.append(strURLstart+aSect[&#39;href&#39;]) except: pass return jobs, company, pay, descr, urlss . But there may be more than the first page, so creating a function that can just take: . Job details | Location | Maximum number of returned results. | We get the following: . def extract_outer(jobtype,location,max_results): import requests import bs4 from bs4 import BeautifulSoup import pandas as pd import numpy as np import copy as copy import time #Split job into two string with plus - i.e. &quot;road sweeper&quot;-&gt;&quot;road + sweeper&quot; jobtype=jobtype.replace(&#39; &#39;,&#39; + &#39;) #initialise values df=pd.DataFrame(columns=[&#39;Company&#39;,&#39;Job Title&#39;,&#39;Pay&#39;,&#39;Details&#39;,&#39;URL&#39;]) #Scroll through pages i.e. 0-9 in page1 --10-19 in page2 (in theory!) i=0 for start in range(0, max_results, 10):#Add 10 on till a max #initialise values num = (len(df) + 1) jobs_, company_, pay_, descr_, urlss_ = [], [] , [], [], [] num=str(start) #add a pause time.sleep(1) #get URL URL=&quot;https://uk.indeed.com/jobs?q=&quot;+jobtype+&quot;&amp;l=&quot;+location+&quot;&amp;start=&quot;+num#conducting a request of the stated URL above: page = requests.get(URL)#specifying a desired format of “page” using the html parser - this allows python to read the various components of the page, rather than treating it as one long string. soup = BeautifulSoup(page.text, &quot;html.parser&quot;)#printing soup in a more structured tree format that makes for easier reading #call the inner function jobs_, company_, pay_, descr_, urlss_=extract_title(soup) # append the lists if i==0: ## on 1st go assign df values df[&#39;Company&#39;]=company_ df[&#39;Job Title&#39;]=jobs_ df[&#39;Pay&#39;]=pay_ df[&#39;Details&#39;]=descr_ df[&#39;URL&#39;]=urlss_ else: ## on next ones concat df with a new df df_=pd.DataFrame(columns=[&#39;Company&#39;,&#39;Job Title&#39;,&#39;Pay&#39;,&#39;Details&#39;,&#39;URL&#39;]) df_[&#39;Company&#39;]=company_ df_[&#39;Job Title&#39;]=jobs_ df_[&#39;Pay&#39;]=pay_ df_[&#39;Details&#39;]=descr_ df_[&#39;URL&#39;]=urlss_ df=pd.concat( [df,df_ ] ) del df_ i=i+1 df=df.reset_index(drop=True)#reset index- drop stops index becoming a column return df . Which can be called to return a pandas DataFrame with: . Company | Job Title | Pay | Job Details | URL for more details | The function is called like this: . jobtitle=&#39;data analyst&#39; maxRes=50 locat=&quot;Swansea%2C+Swansea&quot; fname=&quot;indeed_&quot;+jobtitle+&#39;_&#39;+locat+&#39;_maxRes=&#39;+str(maxRes)+&#39;.csv&#39; df=extract_outer(jobtitle,locat,maxRes) df.head(10) . Company Job Title Pay Details URL . 0 CAIS | Data / BI Analyst &amp; Developer | 0 | This role will be instrumental in developing a... | https://www.indeed.co.uk/company/CAIS/jobs/Dat... | . 1 Jisc | Scholarly Communications Data Analyst | 0 | The Data analyst will be responsible for colle... | https://www.indeed.co.uk/pagead/clk?mo=r&amp;ad=-6... | . 2 Digital Health and Care Wales | Support and Business Analyst | 0 | Until recently this type of information was he... | https://www.indeed.co.uk/rc/clk?jk=c95fc84ef57... | . 3 ERS Administration Services | Senior Risk Analyst | 0 | Are you an experienced Risk Analyst looking fo... | https://www.indeed.co.uk/rc/clk?jk=c239d92f7fa... | . 4 IQUW | Senior Risk Analyst | 0 | Are you an experienced Risk Analyst looking fo... | https://www.indeed.co.uk/rc/clk?jk=fd313f82db9... | . 5 Momentum Security Recruitment | Business Analyst | 0 | Collection and analysis of data to support man... | https://www.indeed.co.uk/company/Momentum-Secu... | . 6 Public Health Wales NHS Trust | Principal Information Analyst / Finance Delive... | 0 | The ideal candidate will be enthusiastic about... | https://www.indeed.co.uk/rc/clk?jk=2cbca7681eb... | . 7 IQUW Group | Senior Risk Analyst | 0 | As a key member of the Risk Management Team, t... | https://www.indeed.co.uk/company/IQUW-Group/jo... | . 8 Momentum Security Recruitment | Business Test Analyst | 0 | Understanding of data creation and manipulatio... | https://www.indeed.co.uk/company/Momentum-Secu... | . 9 Public Health Wales NHS Trust | Senior Business Analyst - Finance Delivery Unit | 0 | You will work within the Analytics Centre of E... | https://www.indeed.co.uk/rc/clk?jk=d354ad34b6a... | . Looking inside the individual pages . So far the data frame just has details available on the main search page. The information is limited (see details tab below). . More details can be found on the individual pages . df.iloc[0].Details . &#39;This role will be instrumental in developing a new infrastructure of data development and insights.-As part of this we are introducing new tools, technology and…-&#39; . For each job the same webscraping procedure can be used to get information from the job page. . Below is how to get the full description . URL=df.URL[0] page = requests.get(URL)#specifying a desired format of “page” using the html parser - this allows python to read the various components of the page, rather than treating it as one long string. soup = BeautifulSoup(page.text, &quot;html.parser&quot;)#printing soup in a more structured tree format that makes for easier reading asoup=soup.find(name=&quot;div&quot;, attrs={&quot;id&quot;:&quot;jobDescriptionText&quot;}) asoup2=asoup.text asoup2 . &#39;An opportunity has arisen for an enthusiastic and self-motivated individual to join our newly formed Data and Evaluation Department. Adferiad are embarking on a new Data, Insight and CRM Delivery Plan to maximise our data as an asset, create an insight driven culture and modernise our ways of working. As part of this we are introducing new tools, technology and processes to continually improve our data and CRM capabilities; and empower a digital-first approachThis is a new and exciting role and is based in our busy Office in Llansamlet, Swansea; however, as Adferiad provide services across all counties in Wales, some travel may be required. Working within a team of Data and IT colleagues, this role is an exciting opportunity for those interested in a career within the analytic field. This role will be instrumental in developing a new infrastructure of data development and insights.Reference ID: H69Job Type: PermanentSalary: £29,226.00 per yearBenefits:On-site parkingSchedule:Monday to Friday&#39; . Details of this could then be extracted to look for key words, salary etc. Using Natural Language Processing. . Indeed overview . At this stage one might think “I can do this in my web browser“. Which is obviously true. . But this data can now be processed further to find other things. Maybe we want to compare pay in different regions, look for where there are more jobs of a certain type, interrogate the jobs details for specific information. . Example using selenium . . This uses the same methodology as above but instead uses Selenium which controls a web browser. . This means links can be clicked, or other boxes can be okayed (e.g. accept cookie box). . Since this was done it appears the website has slightly changed as the code does not work. . import requests import bs4 from bs4 import BeautifulSoup import pandas as pd from selenium.webdriver.common.keys import Keys from selenium import webdriver import time import os . Get web driver for chrome from https://chromedriver.chromium.org/downloads . Then use it to open the website. . URL = URLweb browser = webdriver.Chrome(browser_loc) browser.get(URL) . Chrome is now controlled from this notebook . . elem2=browser.find_element_by_tag_name(&#39;button&#39;) browser.execute_script(&quot;arguments[0].click();&quot;, elem2) . The functions . 1. innerPage . this scrolls through each search page . and calls OneSearchPage . 2. OneSearchPage . One of the search pages . For each link calls gothrough_A_Link . 3. gothrough_A_Link . This looks on a materials page . This then calls getTableData function to extract table data . 4. getTableData . getTableData . def innerPage(browser): import time f=0 ii=0 #first time through dfAll=OneSearchPage(browser) foutname=&#39;steel_bar_&#39;+str(ii) dfAll.to_csv(foutname) print(&#39;ii &#39;,ii) while f==0: if ii&lt;200: #find Next page button and click it elemNext=browser.find_elements_by_xpath(&quot;//button[contains(@data-test-item,&#39;next-page&#39;)]&quot;) try: elemNext[0].click()#this should fail if last page except: f=1 print(&#39;failed&#39;,elemNext[0].text) break time.sleep(1) #next timeS through dfAll=OneSearchPage(browser) ii=ii+1 foutname=&#39;steel_bar_&#39;+str(ii) dfAll.to_csv(foutname) print(&#39;ii &#39;,ii) else: break return dfAll . def OneSearchPage(browser,*dfnew): #find each element with &lt;a&gt; and contain materials elem2=browser.find_elements_by_xpath(&quot;//a[contains(@href,&#39;/materials/&#39;)]&quot;) if &#39;df&#39; in locals(): del df if &#39;df_&#39; in locals(): del df_ i=0 for eel in elem2: if i&lt;200: print(eel.text) time.sleep(1) if len(dfnew)&gt;0:##if we give dfnew as input df_=gothrough_A_Link(eel,browser) if i==0: dfOne=dfnew[0].append(df_) else: dfOne=dfOne.append(df_) else:#if don&#39;t give input dfnew if i==0:#on 1st call create dfOne dfOne=gothrough_A_Link(eel,browser) else:#on 2nd call append df_=gothrough_A_Link(eel,browser) dfOne=dfOne.append(df_) i=i+1 time.sleep(1) print(&#39;i &#39;,i) else: break return dfOne . def gothrough_A_Link(pageElement,browser): import time from selenium.webdriver.common.keys import Keys #give like gothrough_A_Link(elem2[ii],browser) time.sleep(.6) # print(pageElement) #open element- but in new tab try: pageElement.click()#send_keys(Keys.RETURN) except: time.sleep(0.9) time.sleep(0.9) #switch to new window #get current window p = browser.current_window_handle #get windows chwd=browser.window_handles for w in chwd: #switch focus to child window if(w!=p): browser.switch_to.window(w) break time.sleep(0.9) #get current url url_current=browser.current_url #get table details df=getTableData(url_current) #close new window time.sleep(0.9) browser.close() browser.switch_to.window(browser.window_handles[0]) return df ############################################################################################ ############################################################################################ . def getTableData(URL): import requests import bs4 from bs4 import BeautifulSoup import pandas as pd res = requests.get(URL) soup = BeautifulSoup(res.content,&#39;lxml&#39;) # get alloy name titla=soup.find(&#39;h1&#39;).text # print(titla) #get alloy description descripta=soup.find(&#39;div&#39;,{&#39;class&#39;:&#39;common__SubSectionWrapper-sc-3st4qy-0 lbsGSv&#39;}).getText() descripta=descripta.replace(&#39;Description&#39;,&#39;Description: &#39;) descripta=descripta.split(&#39;More technical information&#39;)[0]#sometimes occurs #get table table = soup.find_all(&#39;table&#39;) tdAll=[] nomsAll=[] accepted_strings={&#39;Density&#39;,&#39;Elastic modulus&#39;,&#39;Elongation&#39;,&#39;Tensile strength&#39;,&#39;Yield strength&#39;} for ta in table: # print(&#39;- n&#39;,ta.text[0:30]) tatr=ta.find_all(&#39;tr&#39;) textdegC=&quot;°C&quot; for trr in tatr: # print(trr.text[0:30]) tatrtd=trr.find_all(&#39;td&#39;) try: textaStartRow=tatrtd[0].text if textaStartRow==&quot;Density&quot;: nomsAll.append(textaStartRow) if &#39;g/cm&#39; in tatrtd[1].p.text: tdAll.append(tatrtd[1].p.text) elif &#39;g/cm&#39; in tatrtd[2].p.text: tdAll.append(tatrtd[2].p.text) elif textaStartRow==&quot;Elastic modulus&quot;: nomsAll.append(textaStartRow) if &quot;textdegC&quot; in tatrtd[1].text:#if has deg C tdAll.append(tatrtd[2].p.text) elif not tatrtd[1].text: tdAll.append(tatrtd[2].p.text) else: tdAll.append(tatrtd[1].p.text) elif textaStartRow==&quot;Elongation&quot;: nomsAll.append(textaStartRow) if &quot;textdegC&quot; in tatrtd[1].text:#if has deg C tdAll.append(tatrtd[2].p.text) elif not tatrtd[1].text: tdAll.append(tatrtd[2].p.text) else: tdAll.append(tatrtd[1].p.text) elif textaStartRow==&quot;Charpy impact energy, V-notch&quot;: nomsAll.append(textaStartRow) if &quot;textdegC&quot; in tatrtd[1].text:#if has deg C tdAll.append(tatrtd[2].p.text) elif not tatrtd[1].text: tdAll.append(tatrtd[2].p.text) else: tdAll.append(tatrtd[1].p.text) elif textaStartRow==&quot;Tensile strength&quot;: nomsAll.append(textaStartRow) if &quot;textdegC&quot; in tatrtd[1].text:#if has deg C tdAll.append(tatrtd[2].p.text) elif not tatrtd[1].text: tdAll.append(tatrtd[2].p.text) else: tdAll.append(tatrtd[1].p.text) elif textaStartRow==&quot;Yield strength&quot;: nomsAll.append(textaStartRow) if &quot;textdegC&quot; in tatrtd[1].text:#if has deg C tdAll.append(tatrtd[2].p.text) elif not tatrtd[1].text: tdAll.append(tatrtd[2].p.text) else: tdAll.append(tatrtd[1].p.text) except: pass #Chemical composition tableComp=soup.find(&#39;p&#39;,text=&#39;Chemical properties&#39;)#know it is below a paragraph with title Chemical Properties try: taatta=tableComp.next_sibling trComp=taatta.find_all(&#39;tr&#39;) compPC=[] compID=[] for trr in trComp: try: tdd=trr.find_all(&#39;td&#39;) nomsAll.append(tdd[0].text) tdAll.append(tdd[1].p.text) except: pass except: pass #if we want to dff=pd.DataFrame(tdAll).transpose() print(nomsAll,tdAll) dff.columns=nomsAll dff[&#39;Description&#39;]=descripta dff.insert(0, &#39;Alloy&#39;, titla) return dff . dfOUT=innerPage(browser) #and do some cleaning of data df = cleanDFdatFunc(dfOUT) . Look at the data . df.head() . Alloy Description Elastic modulus Elongation Charpy impact energy, V-notch Tensile strength Yield strength Carbon Chromium Copper ... Zirconium Cobalt Tungsten Antimony Arsenic Bismuth Calcium Lead Tin Iron . 0 VDM® Alloy 926 | Description: 1.4529 (X1NiCrMoCuN25-20-7) is an... | 193.0 | 0.0 | 0 | 650.0 | 0.0 | 0.020 | 20.5 | 1.00 | ... | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 45.240 | . 1 1.4507 / X2CrNiMoCuN25-6-3 | Description: The material 1.4507 is a duplex s... | 200.0 | 0.0 | 0 | 800.0 | 0.0 | 0.030 | 25.0 | 1.75 | ... | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 59.715 | . 2 1.4529 / X1NiCrMoCuN25-20-7 | Description: The material 1.4529 is an austeni... | 195.0 | 0.0 | 0 | 750.0 | 0.0 | 0.020 | 20.0 | 1.00 | ... | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 45.740 | . 3 1.4521 / X2CrMoTi18-2 | Description: The material 1.4521 is a ferritic... | 220.0 | 0.0 | 0 | 550.0 | 0.0 | 0.025 | 18.5 | 0.00 | ... | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 76.440 | . 4 DIN 17103 Grade TStE 285 normalized or normali... | Description: The fine grained steel TStE 285 i... | 217.0 | 24.0 | 0 | 420.0 | 255.0 | 0.160 | 0.3 | 0.20 | ... | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 97.485 | . 5 rows × 32 columns . import matplotlib.pyplot as plt coluse=&#39;Tensile strength&#39; coluse2=&#39;Elongation&#39; df_=df[df[coluse]&gt;0] df_=df_[df_[coluse2]&gt;0] plt.scatter(x=df_[coluse2],y=df_[coluse]) plt.xlabel(coluse2 +&#39;%&#39;) plt.ylabel(coluse +&#39; MPa&#39;) plt.grid(&#39;on&#39;) . Do some Quick Machine Learning . X=composition to predict Y=Elongation or Yield strength or Tensile strength | Used RandomForestRegressor from scikit learn https://scikit-learn.org/stable/ 30% test 70% to train | | Results from test data when trained on train data MAE: 2.7% | Tensile strength MAE: 74 Mpa | Yield strength MAE: 84 MPa | | . .",
            "url": "https://thomashsimm.com/web%20scraping/python/beautifulsoup/selenium/jupyter/2021/11/18/WebScraping.html",
            "relUrl": "/web%20scraping/python/beautifulsoup/selenium/jupyter/2021/11/18/WebScraping.html",
            "date": " • Nov 18, 2021"
        }
        
    
  
    
        ,"post6": {
            "title": "Deep Learning and Art Neural Style Transfer",
            "content": ". Introduction . Use two images a content image and style image to create a new image of the content image in the style of the style image. . Source used, Deep Learning Specialization Week 4 https://www.coursera.org/lecture/convolutional-neural-networks/what-is-neural-style-transfer-SA5H8 From original NST paper published by the Visual Geometry Group at University of Oxford in 2014 . Code . Some imports . import os import sys import scipy.io import scipy.misc import matplotlib.pyplot as plt from matplotlib.pyplot import imshow from PIL import Image import numpy as np import tensorflow as tf from tensorflow.python.framework.ops import EagerTensor import pprint %matplotlib inline from google.colab import drive drive.mount(&#39;/content/drive&#39;) . Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(&#34;/content/drive&#34;, force_remount=True). . Set the style image . style_image = np.array(Image.open(&quot;/content/drive/MyDrive/Colab Notebooks/Tiles.jpg&quot;)) imshow(style_image) . . And the content image . content_image = np.array(Image.open(&quot;/content/drive/MyDrive/Colab Notebooks/boat.jpg&quot;)) print(np.shape(content_image)) imshow(content_image) . . Resize the images . img_size = 1100 # get image as array, then resize content_image = Image.fromarray(content_image) content_image =np.array(content_image.resize((img_size, img_size))) # create content image as tf tensor content_image = tf.constant(np.reshape(content_image, ((1,) + content_image.shape))) . style_image = Image.fromarray(style_image) style_image = np.array(style_image.resize((img_size, img_size))) style_image = tf.constant(np.reshape(style_image, ((1,) + style_image.shape))) . Load parameters from the VGG model. A pretrained model for image classification . https://www.robots.ox.ac.uk/~vgg/research/very_deep/ . https://gist.github.com/ksimonyan/3785162f95cd2d5fee77#file-readme-md . tf.random.set_seed(272) pp = pprint.PrettyPrinter(indent=4) vgg = tf.keras.applications.VGG19(include_top=False, input_shape=(img_size, img_size, 3), weights=&#39;/content/drive/MyDrive/Colab Notebooks/vgg19_weights_tf_dim_ordering_tf_kernels_notop.h5&#39;) vgg.trainable = False pp.pprint(vgg) . &lt;keras.engine.functional.Functional object at 0x7f84e154af90&gt; . Now choose layers to represent the style of the image and assign style costs: Lower number more basic features . STYLE_LAYERS = [ (&#39;block1_conv1&#39;, .2), (&#39;block2_conv1&#39;, .2), (&#39;block3_conv1&#39;, .2), (&#39;block4_conv1&#39;, .2), (&#39;block5_conv1&#39;, .2)] . Compute the &quot;content cost&quot; using TensorFlow. . def compute_content_cost(content_output, generated_output): &quot;&quot;&quot; Computes the content cost Arguments: a_C -- tensor of dimension (1, n_H, n_W, n_C), hidden layer activations representing content of the image C a_G -- tensor of dimension (1, n_H, n_W, n_C), hidden layer activations representing content of the image G Returns: J_content -- scalar that you compute using equation 1 above. &quot;&quot;&quot; a_C = content_output[-1] a_G = generated_output[-1] # Retrieve dimensions from a_G m, n_H, n_W, n_C = a_G.get_shape().as_list() # Reshape a_C and a_G a_C_unrolled = tf.reshape(a_C, shape=[m, n_H * n_W, n_C]) a_G_unrolled = tf.reshape(a_G, shape=[m, n_H * n_W, n_C]) # compute the cost with tensorflow J_content = (1/(4*n_H*n_W*n_C) )*tf.reduce_sum(tf.square( tf.subtract(a_C_unrolled, a_G_unrolled ) )) return J_content . the gram matrix of A is 𝐺𝐴=𝐴𝐴𝑇. . def gram_matrix(A): &quot;&quot;&quot; Argument: A -- matrix of shape (n_C, n_H*n_W) Returns: GA -- Gram matrix of A, of shape (n_C, n_C) &quot;&quot;&quot; GA = tf.linalg.matmul( A, A, transpose_b=True) return GA . Compute the style cost for a single layer. . def compute_layer_style_cost(a_S, a_G): &quot;&quot;&quot; Arguments: a_S -- tensor of dimension (1, n_H, n_W, n_C), hidden layer activations representing style of the image S a_G -- tensor of dimension (1, n_H, n_W, n_C), hidden layer activations representing style of the image G Returns: J_style_layer -- tensor representing a scalar value, style cost defined above by equation (2) &quot;&quot;&quot; # Retrieve dimensions from a_G m, n_H, n_W, n_C = a_G.get_shape().as_list() # Reshape the images from (n_H * n_W, n_C) to have them of shape (n_C, n_H * n_W) a_S = tf.transpose(a_S) a_S=tf.reshape(a_S, shape=[n_C, n_H * n_W]) a_G = tf.transpose(a_G)#, shape=[n_C, n_H * n_W]) a_G=tf.reshape(a_G, shape=[n_C, n_H * n_W]) print(np.shape(a_S)) # Computing gram_matrices for both images S and G GS = gram_matrix(a_S) GG = gram_matrix(a_G) # Computing the loss (≈1 line) J_style_layer = J_content = (1/(4*(n_H*n_W)**2*n_C**2) )*tf.reduce_sum(tf.square( tf.subtract(GS, GG ) )) return J_style_layer . Compute style cost function, Calls individual layers cost funcxtion and applies a weight based on variable STYLE_LAYERS . def compute_style_cost(style_image_output, generated_image_output, STYLE_LAYERS=STYLE_LAYERS): &quot;&quot;&quot; Computes the overall style cost from several chosen layers Arguments: style_image_output -- our tensorflow model generated_image_output -- STYLE_LAYERS -- A python list containing: - the names of the layers we would like to extract style from - a coefficient for each of them Returns: J_style -- tensor representing a scalar value, style cost defined above by equation (2) &quot;&quot;&quot; # initialize the overall style cost J_style = 0 # Set a_S to be the hidden layer activation from the layer we have selected. # The last element of the array contains the content layer image, which must not to be used. a_S = style_image_output[:-1] # Set a_G to be the output of the choosen hidden layers. # The last element of the array contains the content layer image, which must not to be used. a_G = generated_image_output[:-1] for i, weight in zip(range(len(a_S)), STYLE_LAYERS): # Compute style_cost for the current layer J_style_layer = compute_layer_style_cost(a_S[i], a_G[i]) # Add weight * J_style_layer of this layer to overall style cost J_style += weight[1] * J_style_layer return J_style . A total cost function including both style and content costs . @tf.function() def total_cost(J_content, J_style, alpha = 10, beta = 40): &quot;&quot;&quot; Computes the total cost function Arguments: J_content -- content cost coded above J_style -- style cost coded above alpha -- hyperparameter weighting the importance of the content cost beta -- hyperparameter weighting the importance of the style cost Returns: J -- total cost as defined by the formula above. &quot;&quot;&quot; J = alpha*J_content +beta*J_style return J . . 5.3 Randomly Initialize the Image to be Generated . Now, you get to initialize the &quot;generated&quot; image as a noisy image created from the content_image. . The generated image is slightly correlated with the content image. | By initializing the pixels of the generated image to be mostly noise but slightly correlated with the content image, this will help the content of the &quot;generated&quot; image more rapidly match the content of the &quot;content&quot; image. | . generated_image = tf.Variable(tf.image.convert_image_dtype(content_image, tf.float32)) # noise = tf.random.uniform(tf.shape(generated_image), 0, 0.5) # generated_image = tf.add(generated_image, noise) generated_image = tf.clip_by_value(generated_image, clip_value_min=0.0, clip_value_max=1.0) . define a function which loads the VGG19 model and returns a list of the outputs for the middle layers. . def get_layer_outputs(vgg, layer_names): &quot;&quot;&quot; Creates a vgg model that returns a list of intermediate output values.&quot;&quot;&quot; outputs = [vgg.get_layer(layer[0]).output for layer in layer_names] model = tf.keras.Model([vgg.input], outputs) return model . Now, define the content layer and build the model. . content_layer = [(&#39;block5_conv4&#39;, 1)] vgg_model_outputs = get_layer_outputs(vgg, STYLE_LAYERS + content_layer) . Save the outputs for the content and style layers in separate variables. . content_target = vgg_model_outputs(content_image) # Content encoder style_targets = vgg_model_outputs(style_image) # Style enconder . # Set a_C to be the hidden layer activation from the layer we have selected preprocessed_content = tf.Variable(tf.image.convert_image_dtype(content_image, tf.float32)) a_C = vgg_model_outputs(preprocessed_content) # Set a_G to be the hidden layer activation from same layer. Here, a_G references model[&#39;conv4_2&#39;] # and isn&#39;t evaluated yet. Later in the code, we&#39;ll assign the image G as the model input. a_G = vgg_model_outputs(generated_image) # Compute the content cost J_content = compute_content_cost(a_C, a_G) print(J_content) . tf.Tensor(0.0, shape=(), dtype=float32) . sets a_S to be the tensor giving the hidden layer activation for STYLE_LAYERS. . preprocessed_style = tf.Variable(tf.image.convert_image_dtype(style_image, tf.float32)) a_S = vgg_model_outputs(preprocessed_style) # Compute the style cost J_style = compute_style_cost(a_S, a_G) print(J_style) . (64, 1210000) (128, 302500) (256, 75625) (512, 18769) (512, 4624) tf.Tensor(2067.7974, shape=(), dtype=float32) . Utils that you will need to display the images generated by the style transfer model. . def clip_0_1(image): &quot;&quot;&quot; Truncate all the pixels in the tensor to be between 0 and 1 Arguments: image -- Tensor J_style -- style cost coded above Returns: Tensor &quot;&quot;&quot; return tf.clip_by_value(image, clip_value_min=0.0, clip_value_max=1.0) def tensor_to_image(tensor): &quot;&quot;&quot; Converts the given tensor into a PIL image Arguments: tensor -- Tensor Returns: Image: A PIL image &quot;&quot;&quot; tensor = tensor * 255 tensor = np.array(tensor, dtype=np.uint8) if np.ndim(tensor) &gt; 3: assert tensor.shape[0] == 1 tensor = tensor[0] return Image.fromarray(tensor) . Train a step . learning rate lower slower . optimizer = tf.keras.optimizers.Adam(learning_rate=0.03) @tf.function() def train_step(generated_image): with tf.GradientTape() as tape: # In this function you must use the precomputed encoded images a_S and a_C # Compute a_G as the vgg_model_outputs for the current generated image a_G = vgg_model_outputs(generated_image) # Compute the style cost J_style = compute_style_cost(a_S, a_G) # Compute the content cost J_content = compute_content_cost(a_C, a_G) # Compute the total cost J = total_cost(J_content, J_style, alpha = 10, beta = 40) grad = tape.gradient(J, generated_image) optimizer.apply_gradients([(grad, generated_image)]) generated_image.assign(clip_0_1(generated_image)) return J . Train the Model . # Uncoment to reset the style transfer process. You will need to compile the train_step function again generated_image = tf.Variable(tf.image.convert_image_dtype(content_image, tf.float32)) epochs = 5001 for i in range(epochs): train_step(generated_image) if i % 100 == 0: print(f&quot;Epoch {i} &quot;) if i % 100 == 0: image = tensor_to_image(generated_image) imshow(image) image.save(f&quot;image_{i}.jpg&quot;) . Some Examples . . .",
            "url": "https://thomashsimm.com/tensorflow/deep%20learning/jupyter/2021/11/17/StyleTransfer.html",
            "relUrl": "/tensorflow/deep%20learning/jupyter/2021/11/17/StyleTransfer.html",
            "date": " • Nov 17, 2021"
        }
        
    
  
    
        ,"post7": {
            "title": "How Does a Bike-Share Navigate Speedy Success",
            "content": ". Introduction . Some quick analysis on Cycle bike-share data from Chicago . Welcome to the Cyclistic bike-share analysis case study! In this case study, you will perform many real-world tasks of a junior data analyst. You will work for a fictional company, Cyclistic, and meet different characters and team members. In order to answer the key business questions, you will follow the steps of the data analysis process: ask, prepare, process, analyze, share, and act. Along the way, the Case Study Roadmap tables — including guiding questions and key tasks — will help you stay on the right path. By the end of this lesson, you will have a portfolio-ready case study. Download the packet and reference the details of this case study anytime. Then, when you begin your job hunt, your case study will be a tangible way to demonstrate your knowledge and skills to potential employers. . Some imports . import pandas as pd from bs4 import BeautifulSoup import numpy as np import requests # from datetime import datetime, timezone import os import geopandas as gpd #get the current working directory owd=os.getcwd() . A function to extract web zip files and save to /dat folder . We&#39;ll just look at Q1 for 2020 data . The data for 2020 is split into Q1 and the rest is for each month. So we need to download and convert each to a data frame and then combine them together . def extractStuff(url): import requests, zipfile, io import os owd=os.getcwd() r = requests.get(url) z = zipfile.ZipFile(io.BytesIO(r.content)) z.extractall(owd+&quot;/dat/&quot;) URL=&quot;https://divvy-tripdata.s3.amazonaws.com/&quot; noma =[[&#39;202004-divvy-tripdata&#39;], [&#39;202005-divvy-tripdata&#39;], [&#39;202006-divvy-tripdata&#39;], [&#39;202007-divvy-tripdata&#39;], [&#39;202008-divvy-tripdata&#39;], [&#39;202009-divvy-tripdata&#39;], [&#39;202010-divvy-tripdata&#39;], [&#39;202011-divvy-tripdata&#39;], [&#39;202012-divvy-tripdata&#39;]] . for nom in noma: extractStuff(URL+ nom[0]+&quot;.zip&quot;) . Load files, put in pandas data frame and have a look . Lets load each csv and combine them . for i,nom in enumerate(noma): if i&gt;0: df=pd.read_csv(owd+&quot;/dat/&quot;+nom[0]+&#39;.csv&#39;) dfAll=pd.concat([df,dfAll]) print(&#39;1 &#39;,nom[0]) else: dfAll=pd.read_csv(owd+&quot;/dat/&quot;+nom[0]+&#39;.csv&#39;) print(&#39;2&#39;,nom[0]) . 2 202004-divvy-tripdata 1 202005-divvy-tripdata 1 202006-divvy-tripdata 1 202007-divvy-tripdata 1 202008-divvy-tripdata 1 202009-divvy-tripdata 1 202010-divvy-tripdata 1 202011-divvy-tripdata 1 202012-divvy-tripdata . How many NaN stations? . print(&#39;The percentage start stations NaN = {}&#39;.format(100*np.shape(dfAll[dfAll[&#39;start_station_id&#39;].isna()])[0] / np.shape(dfAll)[0]) )#95 282 3 114 796 print(&#39;The percentage end stations NaN = {}&#39;.format(100*np.shape(dfAll[dfAll[&#39;end_station_id&#39;].isna()])[0] / np.shape(dfAll)[0]) )#95 282 3 114 796 bothNa=dfAll[dfAll[&#39;start_station_id&#39;].isna() | dfAll[&#39;end_station_id&#39;].isna()] print(&#39;The percentage start stations NaN = {}&#39;.format(100*np.shape(bothNa)[0] / np.shape(dfAll)[0]) )#95 282 3 114 796 . The percentage start stations NaN = 3.059012532441932 The percentage end stations NaN = 3.5745840177013197 The percentage start stations NaN = 4.889597906251324 . import copy dfUse=copy.copy(dfAll[dfAll[&#39;start_station_id&#39;].notnull() &amp; dfAll[&#39;end_station_id&#39;].notnull()]) dfUse.describe(include=&#39;all&#39;) . ride_id rideable_type started_at ended_at start_station_name start_station_id end_station_name end_station_id start_lat start_lng end_lat end_lng member_casual . count 2962495 | 2962495 | 2962495 | 2962495 | 2962495 | 2962495.0 | 2962495 | 2962495.0 | 2.962495e+06 | 2.962495e+06 | 2.962495e+06 | 2.962495e+06 | 2962495 | . unique 2962287 | 3 | 2568216 | 2556286 | 689 | 1301.0 | 690 | 1304.0 | NaN | NaN | NaN | NaN | 2 | . top 0A2B0949201A9D0C | docked_bike | 2020-09-07 15:19:26 | 2020-10-14 07:23:00 | Streeter Dr &amp; Grand Ave | 35.0 | Streeter Dr &amp; Grand Ave | 35.0 | NaN | NaN | NaN | NaN | member | . freq 2 | 2535257 | 12 | 13 | 32629 | 32192.0 | 34905 | 34467.0 | NaN | NaN | NaN | NaN | 1710201 | . mean NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 4.190534e+01 | -8.764452e+01 | 4.190559e+01 | -8.764481e+01 | NaN | . std NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 4.157203e-02 | 2.446731e-02 | 4.169299e-02 | 2.460637e-02 | NaN | . min NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 4.164850e+01 | -8.777470e+01 | 4.164850e+01 | -8.777470e+01 | NaN | . 25% NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 4.188316e+01 | -8.765840e+01 | 4.188338e+01 | -8.765862e+01 | NaN | . 50% NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 4.190096e+01 | -8.764117e+01 | 4.190096e+01 | -8.764182e+01 | NaN | . 75% NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 4.193120e+01 | -8.762773e+01 | 4.193125e+01 | -8.762775e+01 | NaN | . max NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | 4.206490e+01 | -8.752823e+01 | 4.206501e+01 | -8.752823e+01 | NaN | . Now we need to convert the dates from object (i.e. string) to date format . next add a new column as time for hire in hours . dfUse.loc[:,&#39;started_at&#39;]=pd.to_datetime(dfUse[&#39;started_at&#39;],infer_datetime_format=True) dfUse.loc[:,&#39;ended_at&#39;]=pd.to_datetime(dfUse[&#39;ended_at&#39;],infer_datetime_format=True) delta=dfUse.iloc[:,3]-dfUse.iloc[:,2] dd=delta.dt.total_seconds()/(60*60) dfUse.insert(2,&quot;hire_time_h&quot;,dd) dfUse.head() . ride_id rideable_type hire_time_h started_at ended_at start_station_name start_station_id end_station_name end_station_id start_lat start_lng end_lat end_lng member_casual . 0 70B6A9A437D4C30D | classic_bike | 0.176944 | 2020-12-27 12:44:29 | 2020-12-27 12:55:06 | Aberdeen St &amp; Jackson Blvd | 13157 | Desplaines St &amp; Kinzie St | TA1306000003 | 41.877726 | -87.654787 | 41.888716 | -87.644448 | member | . 39 15F369FDAED4E8E3 | electric_bike | 0.130556 | 2020-12-18 13:53:56 | 2020-12-18 14:01:46 | Larrabee St &amp; Armitage Ave | TA1309000006 | Wells St &amp; Walton St | TA1306000011 | 41.918112 | -87.643799 | 41.900129 | -87.634448 | member | . 50 0CFD61DFE00E6043 | electric_bike | 0.030000 | 2020-12-28 17:10:25 | 2020-12-28 17:12:13 | Kingsbury St &amp; Kinzie St | KA1503000043 | Desplaines St &amp; Kinzie St | TA1306000003 | 41.889193 | -87.638576 | 41.889099 | -87.642479 | member | . 87 244CB936487039B7 | docked_bike | 1.013056 | 2020-12-10 13:36:16 | 2020-12-10 14:37:03 | Clark St &amp; Leland Ave | TA1309000014 | Clark St &amp; Leland Ave | TA1309000014 | 41.967096 | -87.667429 | 41.967096 | -87.667429 | casual | . 88 B7AD5038F79637F9 | classic_bike | 0.101111 | 2020-12-20 13:09:04 | 2020-12-20 13:15:08 | Dearborn St &amp; Monroe St | TA1305000006 | Kingsbury St &amp; Kinzie St | KA1503000043 | 41.881320 | -87.629521 | 41.889177 | -87.638506 | member | . Maybe we want the day of the week? . The day of the week with Monday=0, Sunday=6. . dfUse.insert(3,&#39;day_week&#39;,dfUse.loc[:,&#39;started_at&#39;].dt.dayofweek) dfUse.head() . ride_id rideable_type hire_time_h day_week started_at ended_at start_station_name start_station_id end_station_name end_station_id start_lat start_lng end_lat end_lng member_casual . 0 70B6A9A437D4C30D | classic_bike | 0.176944 | 6 | 2020-12-27 12:44:29 | 2020-12-27 12:55:06 | Aberdeen St &amp; Jackson Blvd | 13157 | Desplaines St &amp; Kinzie St | TA1306000003 | 41.877726 | -87.654787 | 41.888716 | -87.644448 | member | . 39 15F369FDAED4E8E3 | electric_bike | 0.130556 | 4 | 2020-12-18 13:53:56 | 2020-12-18 14:01:46 | Larrabee St &amp; Armitage Ave | TA1309000006 | Wells St &amp; Walton St | TA1306000011 | 41.918112 | -87.643799 | 41.900129 | -87.634448 | member | . 50 0CFD61DFE00E6043 | electric_bike | 0.030000 | 0 | 2020-12-28 17:10:25 | 2020-12-28 17:12:13 | Kingsbury St &amp; Kinzie St | KA1503000043 | Desplaines St &amp; Kinzie St | TA1306000003 | 41.889193 | -87.638576 | 41.889099 | -87.642479 | member | . 87 244CB936487039B7 | docked_bike | 1.013056 | 3 | 2020-12-10 13:36:16 | 2020-12-10 14:37:03 | Clark St &amp; Leland Ave | TA1309000014 | Clark St &amp; Leland Ave | TA1309000014 | 41.967096 | -87.667429 | 41.967096 | -87.667429 | casual | . 88 B7AD5038F79637F9 | classic_bike | 0.101111 | 6 | 2020-12-20 13:09:04 | 2020-12-20 13:15:08 | Dearborn St &amp; Monroe St | TA1305000006 | Kingsbury St &amp; Kinzie St | KA1503000043 | 41.881320 | -87.629521 | 41.889177 | -87.638506 | member | . Lets also get the time on its own . dfUse.insert(4,&#39;time_day&#39;,dfUse.loc[:,&#39;started_at&#39;].dt.hour + dfUse.loc[:,&#39;started_at&#39;].dt.minute/60) dfUse.head() . ride_id rideable_type hire_time_h day_week time_day started_at ended_at start_station_name start_station_id end_station_name end_station_id start_lat distance start_lng end_lat end_lng member_casual . 0 70B6A9A437D4C30D | classic_bike | 0.176944 | 6 | 12.733333 | 2020-12-27 12:44:29 | 2020-12-27 12:55:06 | Aberdeen St &amp; Jackson Blvd | 13157 | Desplaines St &amp; Kinzie St | TA1306000003 | 41.877726 | 1.491984 | -87.654787 | 41.888716 | -87.644448 | member | . 39 15F369FDAED4E8E3 | electric_bike | 0.130556 | 4 | 13.883333 | 2020-12-18 13:53:56 | 2020-12-18 14:01:46 | Larrabee St &amp; Armitage Ave | TA1309000006 | Wells St &amp; Walton St | TA1306000011 | 41.918112 | 2.144117 | -87.643799 | 41.900129 | -87.634448 | member | . 50 0CFD61DFE00E6043 | electric_bike | 0.030000 | 0 | 17.166667 | 2020-12-28 17:10:25 | 2020-12-28 17:12:13 | Kingsbury St &amp; Kinzie St | KA1503000043 | Desplaines St &amp; Kinzie St | TA1306000003 | 41.889193 | 0.323238 | -87.638576 | 41.889099 | -87.642479 | member | . 87 244CB936487039B7 | docked_bike | 1.013056 | 3 | 13.600000 | 2020-12-10 13:36:16 | 2020-12-10 14:37:03 | Clark St &amp; Leland Ave | TA1309000014 | Clark St &amp; Leland Ave | TA1309000014 | 41.967096 | 0.000000 | -87.667429 | 41.967096 | -87.667429 | casual | . 88 B7AD5038F79637F9 | classic_bike | 0.101111 | 6 | 13.150000 | 2020-12-20 13:09:04 | 2020-12-20 13:15:08 | Dearborn St &amp; Monroe St | TA1305000006 | Kingsbury St &amp; Kinzie St | KA1503000043 | 41.881320 | 1.147392 | -87.629521 | 41.889177 | -87.638506 | member | . And the distance travelled . def distanceLatLong(lat1,lon1,lat2,lon2): import numpy as np def deg2rad(deg): return deg * np.pi/180 R = 6371; # Radius of the earth in km dLat = deg2rad(lat2-lat1) # deg2rad below dLon = deg2rad(lon2-lon1) a = np.sin(dLat/2) * np.sin(dLat/2) + np.cos(deg2rad(lat1)) * np.cos(deg2rad(lat2)) * np.sin(dLon/2) * np.sin(dLon/2) c = 2 * np.arctan2(np.sqrt(a), np.sqrt(1-a)) d = R * c ## Distance in km return d . d=distanceLatLong(dfUse[&quot;start_lat&quot;].values,dfUse[&quot;start_lng&quot;].values,dfUse[&quot;end_lat&quot;].values,dfUse[&quot;end_lng&quot;].values) dfUse.insert(11,&#39;distance&#39;,d) dfUse.describe() . hire_time_h day_week start_lat distance start_lng end_lat end_lng . count 2.962495e+06 | 2.962495e+06 | 2.962495e+06 | 2.962495e+06 | 2.962495e+06 | 2.962495e+06 | 2.962495e+06 | . mean 4.291666e-01 | 3.262215e+00 | 4.190534e+01 | 2.240406e+00 | -8.764452e+01 | 4.190559e+01 | -8.764481e+01 | . std 6.640800e+00 | 1.973614e+00 | 4.157203e-02 | 2.029178e+00 | 2.446731e-02 | 4.169299e-02 | 2.460637e-02 | . min -4.841661e+02 | 0.000000e+00 | 4.164850e+01 | 0.000000e+00 | -8.777470e+01 | 4.164850e+01 | -8.777470e+01 | . 25% 1.377778e-01 | 2.000000e+00 | 4.188316e+01 | 8.598642e-01 | -8.765840e+01 | 4.188338e+01 | -8.765862e+01 | . 50% 2.525000e-01 | 3.000000e+00 | 4.190096e+01 | 1.713410e+00 | -8.764117e+01 | 4.190096e+01 | -8.764182e+01 | . 75% 4.577778e-01 | 5.000000e+00 | 4.193120e+01 | 3.098683e+00 | -8.762773e+01 | 4.193125e+01 | -8.762775e+01 | . max 9.786672e+02 | 6.000000e+00 | 4.206490e+01 | 4.837080e+01 | -8.752823e+01 | 4.206501e+01 | -8.752823e+01 | . Some issues arose above . hire_time_h max and min values | . Looks like the error is there from the start, so lets delete them . do the same for long times . dfUse=dfUse[dfUse.hire_time_h&gt;=0] dfUse=dfUse[dfUse.hire_time_h&lt;24] . Lets drop some columns for space . dfUse.drop(columns=[&quot;ride_id&quot;, &quot;started_at&quot;,&quot;ended_at&quot;,&quot;start_station_name&quot;,&quot;end_station_name&quot;],inplace=True) #,&quot;start_station_id&quot;,&quot;end_station_id&quot;] . save . dfUse.to_csv(&#39;/data/df_2020.csv&#39;) df=copy.copy(dfUse) . df = pd.read_csv(&#39;/data/df_2020.csv&#39;) df . C: Users 44781 anaconda3 lib site-packages IPython core interactiveshell.py:3165: DtypeWarning: Columns (5,6) have mixed types.Specify dtype option on import or set low_memory=False. has_raised = await self.run_ast_nodes(code_ast.body, cell_name, . Unnamed: 0 rideable_type hire_time_h day_week time_day start_station_id end_station_id start_lat distance start_lng end_lat end_lng member_casual . 0 0 | classic_bike | 0.176944 | 6 | 12.733333 | 13157 | TA1306000003 | 41.877726 | 1.491984 | -87.654787 | 41.888716 | -87.644448 | member | . 1 39 | electric_bike | 0.130556 | 4 | 13.883333 | TA1309000006 | TA1306000011 | 41.918112 | 2.144117 | -87.643799 | 41.900129 | -87.634448 | member | . 2 50 | electric_bike | 0.030000 | 0 | 17.166667 | KA1503000043 | TA1306000003 | 41.889193 | 0.323238 | -87.638576 | 41.889099 | -87.642479 | member | . 3 87 | docked_bike | 1.013056 | 3 | 13.600000 | TA1309000014 | TA1309000014 | 41.967096 | 0.000000 | -87.667429 | 41.967096 | -87.667429 | casual | . 4 88 | classic_bike | 0.101111 | 6 | 13.150000 | TA1305000006 | KA1503000043 | 41.881320 | 1.147392 | -87.629521 | 41.889177 | -87.638506 | member | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 2949984 84771 | docked_bike | 0.215278 | 3 | 16.166667 | 140.0 | 140.0 | 41.899000 | 0.000000 | -87.629900 | 41.899000 | -87.629900 | member | . 2949985 84772 | docked_bike | 0.319167 | 3 | 17.933333 | 322.0 | 351.0 | 41.799600 | 1.056377 | -87.594700 | 41.803000 | -87.606600 | casual | . 2949986 84773 | docked_bike | 1.886111 | 4 | 19.950000 | 236.0 | 182.0 | 41.907600 | 0.604983 | -87.638600 | 41.903200 | -87.634300 | casual | . 2949987 84774 | docked_bike | 0.708611 | 3 | 17.983333 | 310.0 | 310.0 | 41.920100 | 0.000000 | -87.677900 | 41.920100 | -87.677900 | casual | . 2949988 84775 | docked_bike | 0.100000 | 5 | 1.516667 | 138.0 | 138.0 | 41.904600 | 0.000000 | -87.640600 | 41.904600 | -87.640600 | casual | . 2949989 rows × 13 columns . Put frequency location onto a map . import folium from folium import plugins from folium.plugins import HeatMap lat=df[&#39;start_lat&#39;].values lon=df[&#39;start_lng&#39;].values latlon = [lat, lon] maps = folium.Map(location=[lat[0],lon[0]], zoom_start = 11) latlon=np.transpose(latlon) # Plot it on the map HeatMap(latlon).add_to(maps) # Display the map maps . . Bit of a mess, grouping by region may be better . Plot some choroplots . open and modify the geojson file- seems to make life easier later . import geopandas as gpd fname=&#39;Chicago.geojson&#39; chicago = gpd.read_file(fname) # neighborhoods aren&#39;t unique so lets use the index and call it ID chicago.reset_index(inplace=True) chicago.rename(columns={&#39;index&#39;:&#39;ID&#39;},inplace=True) chicago.drop(columns=[&#39;sec_neigh&#39;,&#39;shape_area&#39;,&#39;shape_len&#39;],inplace=True) chicago.to_file(&quot;Chi_.json&quot;, driver=&quot;GeoJSON&quot;) chicago.head() . ID pri_neigh geometry . 0 0 | Grand Boulevard | MULTIPOLYGON (((-87.60671 41.81681, -87.60670 ... | . 1 1 | Printers Row | MULTIPOLYGON (((-87.62761 41.87437, -87.62760 ... | . 2 2 | United Center | MULTIPOLYGON (((-87.66707 41.88885, -87.66707 ... | . 3 3 | Sheffield &amp; DePaul | MULTIPOLYGON (((-87.65833 41.92166, -87.65835 ... | . 4 4 | Humboldt Park | MULTIPOLYGON (((-87.74060 41.88782, -87.74060 ... | . Now we want to convert each station to a region within the json file . First let&#39;s create a variable for each station, with location and station_id . dfStat=df.groupby(by=[&#39;start_station_id&#39;]).mean() dfStat=dfStat.drop(columns=[&#39;Unnamed: 0&#39;,&#39;hire_time_h&#39;,&#39;day_week&#39;,&#39;time_day&#39;,&#39;distance&#39;,&#39;end_lat&#39;,&#39;end_lng&#39;]) dfStat.reset_index(inplace=True) dfStat . start_station_id start_lat start_lng . 0 2.0 | 41.876505 | -87.620535 | . 1 3.0 | 41.867228 | -87.615357 | . 2 4.0 | 41.856268 | -87.613345 | . 3 5.0 | 41.874050 | -87.627709 | . 4 6.0 | 41.886974 | -87.612813 | . ... ... | ... | ... | . 1877 TA1309000066 | 41.969101 | -87.674234 | . 1878 TA1309000067 | 41.803034 | -87.606613 | . 1879 WL-008 | 41.867122 | -87.641071 | . 1880 WL-011 | 41.880395 | -87.642727 | . 1881 WL-012 | 41.883364 | -87.641203 | . 1882 rows × 3 columns . Now for each station we want a JSON-area code . This is slightly convoluted . scroll through each station | for each station find if it&#39;s inside a Chigao_JSON region | if not we assign if a value 1000 | for those with no region find the nearest station that has a JSON-region (done in tab after this) | . whatChoro = json ID whatwhat = station ID . from shapely.geometry import shape, Point whatChoro=[] whatwhat=[] # check each polygon to see if it contains the point i=0 # scroll through each station for istat in range(np.shape(dfStat)[0]): i=0 #create a point for the station point=Point(dfStat.loc[istat,&#39;start_lng&#39;],dfStat.loc[istat,&#39;start_lat&#39;]) #scroll through each geometery for feature in chicago.ID: polygon = shape(chicago.loc[i,&#39;geometry&#39;]) if polygon.contains(point): #this gives the json region ID whatChoro.append(chicago.loc[i,&#39;ID&#39;]) #this give the station id whatwhat.append(dfStat.loc[istat,&#39;start_station_id&#39;]) break #if we don&#39;t get a match!! if feature==chicago[&#39;ID&#39;].iloc[-1]: import copy # find distances lat2/lng2 this location # lat1/lng1 all locations lat1_=copy.copy(dfStat[&#39;start_lat&#39;]) lon1_=copy.copy(dfStat[&#39;start_lng&#39;]) lat2_=dfStat.loc[istat,&#39;start_lat&#39;] lon2_=dfStat.loc[istat,&#39;start_lng&#39;] #this gives the json region ID whatChoro.append(1000) #this give the station id whatwhat.append(dfStat.loc[istat,&#39;start_station_id&#39;]) i=i+1 . This does the cleaning up if they don&#39;t have a json id . This will handle when we don&#39;t get a match&gt; a reuse of the distance function with slight mods . def distanceLatLong_v2(lat1_,lon1_,lat2_,lon2_): import numpy as np import math def deg2rad(deg): return deg * np.pi/180 def inner(lat1,lon1,lat2,lon2): R = 6371; # Radius of the earth in km dLat = deg2rad(lat2-lat1) # deg2rad below dLon = deg2rad(lon2-lon1) a = np.sin(dLat/2) * np.sin(dLat/2) + np.cos(deg2rad(lat1)) * np.cos(deg2rad(lat2)) * np.sin(dLon/2) * np.sin(dLon/2) c = 2 * math.atan2(np.sqrt(a), np.sqrt(1-a)) d = R * c ## Distance in km if d==0: d=1000 return d if np.shape(lat1_)[0]&gt;1: d=[] for i in range(np.shape(lat1_)[0]): d.append(inner(lat1_[i],lon1_[i],lat2_,lon2_)) else: d=inner(lat1_,lon1_,lat2_,lon2_) return d . this scrolls through ones we didn&#39;t match and finds nearest JSON-id we did match . for i in range(np.shape(dfStat)[0]): if whatChoro[i]==1000: #find distances lat2/lng2 this location # lat1/lng1 all locations lat1_=copy.copy(dfStat[&#39;start_lat&#39;]) lon1_=copy.copy(dfStat[&#39;start_lng&#39;]) lat2_=dfStat.loc[i,&#39;start_lat&#39;] lon2_=dfStat.loc[i,&#39;start_lng&#39;] ind=[idx for idx, element in enumerate(whatChoro) if element==1000] lat1_[ind]=0 lon1_[ind]=0 d=distanceLatLong_v2(lat1_,lon1_,lat2_,lon2_) indamin=d.index(min(d)) # whatwhat[i]=whatwhat[indamin] whatChoro[i]=whatChoro[indamin] print(i,indamin,whatChoro[i],whatChoro[indamin],min(d)) . 554 474 48 48 3.218616605981318 555 474 48 48 1.5436541433245226 556 474 48 48 0.7244340745224377 557 554 48 48 1.618989106320433 558 557 48 48 0.9589393666816851 559 558 48 48 1.703490590200107 560 559 48 48 1.0394756465095663 561 554 48 48 0.5321339843549502 562 561 48 48 0.8611490298165934 563 561 48 48 0.4535879672825213 570 554 48 48 0.7620712283526319 603 562 48 48 0.7657516801324228 604 1355 55 55 0.9398603094768803 605 559 48 48 1.3757808765327746 1441 554 48 48 0.0009191040374285816 1442 1441 48 48 0.003706303019684898 1443 555 48 48 0.006456249041029345 1444 556 48 48 4.9908562509422157e-05 1445 1444 48 48 0.002230404415936471 1446 557 48 48 0.0012372240336437155 1447 1446 48 48 0.003412919018808641 1450 558 48 48 0.005285184511373336 1451 1450 48 48 0.011408782497315317 1452 559 48 48 0.027327480291422585 1453 560 48 48 0.0012042612006966005 1454 561 48 48 0.0010429138707679156 1455 562 48 48 0.0017205826064828574 1456 1455 48 48 0.0034819520850311483 1457 563 48 48 0.0025804458419044335 1458 563 48 48 0.009202498604403178 1470 570 48 48 0.004764480272445732 1513 603 48 48 0.0008354495738933785 1514 603 48 48 0.0011940325501674988 1515 604 55 55 0.006060872681823562 1516 1515 55 55 0.012603279140811706 1517 605 48 48 0.009833621616663023 1582 555 48 48 0.0011726503764087032 1583 559 48 48 0.0038048094986119284 1584 1453 48 48 0.0005568291527966493 1585 561 48 48 0.0005786222457187065 1586 1447 48 48 0.5069880704727254 1587 605 48 48 0.0032438412454957833 . Now we can insert a new column in df with the json ID . chicID=[] for stat in df[&#39;start_station_id&#39;]: # chicID.append(stat) ind=[idx for idx, element in enumerate(whatwhat) if element==stat] try: chicID.append(whatChoro[ind[0]]) except: continue . df.insert(0,&#39;ID&#39;,chicID) df.head() . ID Unnamed: 0 rideable_type hire_time_h day_week time_day start_station_id end_station_id start_lat distance start_lng end_lat end_lng member_casual . 0 40 | 0 | classic_bike | 0.176944 | 6 | 12.733333 | 13157 | TA1306000003 | 41.877726 | 1.491984 | -87.654787 | 41.888716 | -87.644448 | member | . 1 92 | 39 | electric_bike | 0.130556 | 4 | 13.883333 | TA1309000006 | TA1306000011 | 41.918112 | 2.144117 | -87.643799 | 41.900129 | -87.634448 | member | . 2 97 | 50 | electric_bike | 0.030000 | 0 | 17.166667 | KA1503000043 | TA1306000003 | 41.889193 | 0.323238 | -87.638576 | 41.889099 | -87.642479 | member | . 3 56 | 87 | docked_bike | 1.013056 | 3 | 13.600000 | TA1309000014 | TA1309000014 | 41.967096 | 0.000000 | -87.667429 | 41.967096 | -87.667429 | casual | . 4 26 | 88 | classic_bike | 0.101111 | 6 | 13.150000 | TA1305000006 | KA1503000043 | 41.881320 | 1.147392 | -87.629521 | 41.889177 | -87.638506 | member | . And represent each JSON region by how many times they&#39;re used . We&#39;ll take the count and divide it by the total- and because of the distribution we&#39;ll also take the log- basically hires are highly focussed on a few regions with many having low % . dfG=df.groupby(&#39;ID&#39;).count() dfG.reset_index(inplace=True) dfG=dfG[[&#39;ID&#39;,&#39;rideable_type&#39;]] dfG.rename(columns={&#39;rideable_type&#39;:&#39;Frequency&#39;}) dfG.rideable_type=np.log(dfG.rideable_type/sum(dfG.rideable_type)) dfG.head() . ID rideable_type . 0 0 | -5.835124 | . 1 1 | -5.124845 | . 2 2 | -6.001956 | . 3 3 | -3.718336 | . 4 4 | -4.965188 | . df.to_csv(&#39;/data/dfChoro_2020.csv&#39;) . df = pd.read_csv(&#39;/data/dfChoro_2020.csv&#39;) . C: Users 44781 anaconda3 lib site-packages IPython core interactiveshell.py:3165: DtypeWarning: Columns (7,8) have mixed types.Specify dtype option on import or set low_memory=False. has_raised = await self.run_ast_nodes(code_ast.body, cell_name, . Now the plotting . We first read in the json file, add the df with our frequency values to it then we can plot the data . Lets put this in a function to look at differences . def bigChoro(dfIN,colname,choi): import folium LEGNOM=colname if choi==&#39;count&#39;: dfG=dfIN.groupby(&#39;ID&#39;).count() dfG[colname]=dfG[colname]/(100*274/7) myscale = (dfG[colname].quantile((0,0.25,0.5,0.75,0.9,0.95,.97,1))).tolist() # np.linspace(dfG[colname].min(),dfG[colname].max(),10) LEGNOM=&#39;Number of journeys 100s per week&#39; elif choi==&#39;mean&#39;: dfG=dfIN.groupby(&#39;ID&#39;).mean() myscale = np.linspace(dfG[colname].min(),dfG[colname].max(),10) elif choi==&#39;sum&#39;: dfG=dfIN.groupby(&#39;ID&#39;).sum() myscale = np.linspace(dfG[colname].min(),dfG[colname].max(),10) elif choi==&#39;dayofweek&#39;: dfIN=dfIN[[&#39;ID&#39;,colname]] dfG=dfIN.groupby([&#39;ID&#39;]).agg(lambda x:x.value_counts().index[0]) dfG[dfG[colname]&gt;4]=5-dfG[dfG[colname]&gt;4] myscale = np.array([-2.,0.,1.,2.,3.,4.]) LEGNOM=&#39;Day of week (-2 to -1 weekend, 0-4 Monday to Friday)&#39; elif choi==&#39;mode&#39;: dfIN=dfIN[[&#39;ID&#39;,colname]] dfIN[colname].astype(&#39;int32&#39;) dfG=dfIN.groupby([&#39;ID&#39;]).agg(lambda x:x.value_counts().index[0]) myscale = np.linspace(dfG[colname].min(),dfG[colname].max(),10) dfG.reset_index(inplace=True) dfG=dfG[[&#39;ID&#39;,colname]] nil=gpd.read_file(&quot;Chi_.json&quot;) nil=nil[[&#39;ID&#39;,&#39;geometry&#39;]] # merge data frames nilpop=nil.merge(dfG,on=&quot;ID&quot;) #initial map m = folium.Map(location=[41.884,-87.6247], zoom_start=10, control_scale=True,tiles=&quot;Stamen Toner&quot;)#,tiles = t_list[1]) folium.TileLayer(&#39;CartoDB positron&#39;,name=&quot;Light Map&quot;,control=False).add_to(m) # (dfG[&#39;rideable_type&#39;].quantile((0,.02,0.1,.25,0.5,0.75,0.9,0.95,0.98,1))).tolist() choropleth =folium.Choropleth( geo_data=&quot;Chi_.json&quot;, data=nilpop, threshold_scale=myscale, columns=[&#39;ID&#39;,colname], name=&#39;choropleth&#39;, fill_color=&#39;BuPu&#39;,#PuBuGn YlGn PuBuGn YlGnBu RdYlBu key_on= &quot;feature.properties.ID&quot;, fill_opacity=0.7, line_opacity=0.2, nan_fill_color=&#39;gray&#39;, legend_name=LEGNOM, nan_fill_opacity =.5, ).add_to(m) folium.LayerControl().add_to(m) choropleth.geojson.add_child( folium.features.GeoJsonTooltip([&#39;pri_neigh&#39;],labels=False) ) return m . dfIN.columns . Index([&#39;ID&#39;, &#39;Unnamed: 0&#39;, &#39;rideable_type&#39;, &#39;hire_time_h&#39;, &#39;day_week&#39;, &#39;time_day&#39;, &#39;start_station_id&#39;, &#39;end_station_id&#39;, &#39;start_lat&#39;, &#39;distance&#39;, &#39;start_lng&#39;, &#39;end_lat&#39;, &#39;end_lng&#39;, &#39;member_casual&#39;], dtype=&#39;object&#39;) . colname=&#39;distance&#39;#end_station_id dfIN= df[df.member_casual==&#39;member&#39;] m=bigChoro(dfIN,colname,&#39;mean&#39;) m . . colname=&#39;day_week&#39;#end_station_id dfIN= df[df.member_casual==&#39;member&#39;] m=bigChoro(dfIN,colname,&#39;dayofweek&#39;) m . . colname=&#39;time_day&#39;#end_station_id dfIN= df[df.member_casual==&#39;member&#39;] m=bigChoro(dfIN,colname,&#39;mode&#39;) m . . colname=&#39;time_day&#39;#end_station_id dfIN= df[df.member_casual==&#39;member&#39;] m=bigChoro(dfIN,colname,&#39;count&#39;) m . . colname=&#39;time_day&#39;#end_station_id dfIN= df[df.member_casual==&#39;casual&#39;] m=bigChoro(dfIN,colname,&#39;count&#39;) m . . np.linspace(-2,4,7) np.array([-2.,0.,1.,2.,3.,4.]) . array([-2., 0., 1., 2., 3., 4.]) . import seaborn as sns import matplotlib as mpl import matplotlib.pyplot as plt . sns.set_theme(style=&quot;ticks&quot;) f, ax = plt.subplots(figsize=(7, 5)) sns.despine(f) # Draw a nested boxplot to show bills by day and time sns.histplot(df,hue=&quot;member_casual&quot;, x=&quot;time_day&quot;, multiple=&quot;stack&quot;, palette=&quot;dark:b_r&quot;, edgecolor=&quot;.3&quot;, linewidth=.5,) sns.despine(offset=10, trim=True) . from matplotlib.ticker import PercentFormatter df_=df[df.hire_time_h&lt;5] df_=df_[df_.hire_time_h&gt;0] sns.set_theme(style=&quot;ticks&quot;) binwidth = 5 f, ax1 = plt.subplots(figsize=(10, 7)) sns.despine(f) df2_=df_[df_.member_casual==&#39;member&#39;] # Draw a nested boxplot to show bills by day and time sns.histplot(df2_, x=&quot;hire_time_h&quot;, multiple=&quot;stack&quot;, palette=&quot;light:m_r&quot;, edgecolor=&quot;.3&quot;, linewidth=.5, stat=&#39;probability&#39;, log_scale=True, ax=ax1, label=&#39;member&#39;) ax2=ax1.twinx() df2_=df_[df_.member_casual==&#39;casual&#39;] # Draw a nested boxplot to show bills by day and time sns.histplot(df2_, x=&quot;hire_time_h&quot;, element=&quot;step&quot;,fill=False, color=&#39;red&#39;, linewidth=.8, stat=&#39;probability&#39;, log_scale=True, ax=ax2, label=&#39;casual&#39;) ax1.legend(loc=&#39;upper left&#39;) ax2.legend(loc=&#39;upper right&#39;) sns.despine(offset=10, trim=True) # ax.legend(&#39;Member&#39;,&#39;Casual&#39;) . sns.set_theme(style=&quot;ticks&quot;) f, ax = plt.subplots(figsize=(10, 8)) sns.despine(f) df_=df[ df[&quot;distance&quot;]&gt;0.1 ] df_= df_[df_[&quot;distance&quot;]&lt;20] df_=df_[df_.member_casual==&#39;member&#39;] # Draw a nested boxplot to show bills by day and time sns.histplot(data=df_, x=&quot;distance&quot;, edgecolor=&quot;.3&quot;, linewidth=.5, stat=&#39;probability&#39;, label=&#39;member&#39;) sns.despine(offset=10, trim=True) df_=df[df[&quot;distance&quot;]&gt;0.1] df_= df_[df_[&quot;distance&quot;]&lt;20] df_=df_[df_.member_casual==&#39;casual&#39;] sns.histplot(data=df_, x=&quot;distance&quot;, linewidth=.8, color=&#39;r&#39;, stat=&#39;probability&#39;, label=&#39;casual&#39;, fill=False, element=&#39;step&#39;) ax.legend(loc=&#39;upper right&#39;) . &lt;matplotlib.legend.Legend at 0x2f212cc0be0&gt; . sns.set_theme(style=&quot;whitegrid&quot;) # Draw a nested boxplot to show bills by day and time ax=sns.histplot(df,hue=&quot;member_casual&quot;, x=&quot;day_week&quot;,palette=&quot;dark:b_r&quot;, multiple=&quot;dodge&quot;, bins=[0 ,1 ,2 ,3, 4, 5, 6,7], shrink=.9 ) sns.despine(offset=20, trim=True) aa=np.array([0,1,2,3,4,5,6])+.5 ax.set_xticks(aa) ax.set_xlim([0, 7.5]) lab=[&#39;Monday&#39;,&#39;Tuesday&#39;,&#39;Wednesday&#39;,&#39;Thursday&#39;,&#39;Friday&#39;,&#39;Saturday&#39;,&#39;Sunday&#39;] ax.set_xticklabels(lab,rotation=&#39;vertical&#39;) ax.set_xlabel(&#39;Day of the week&#39;) . Text(0.5, 0, &#39;Day of the week&#39;) . So after a quick look at the data (*maybe some plots need mods) some clear trends: . Casuals use bikes more on weekends, members more on weekdays | Members tend to use bikes in commuting times 7-9 am and 4-7 pm. Whereas casuals more spread but focussed later | Casuals tend to use the bikes for longer and travel further from initial location | .",
            "url": "https://thomashsimm.com/2021/11/16/ChicagoBikes.html",
            "relUrl": "/2021/11/16/ChicagoBikes.html",
            "date": " • Nov 16, 2021"
        }
        
    
  
    
        ,"post8": {
            "title": "Python Imbedding Web",
            "content": "Ipywidgets . https://ipywidgets.readthedocs.io/en/latest/ . ipywidgets, also known as jupyter-widgets or simply widgets, are interactive HTML widgets for Jupyter notebooks and the IPython kernel.&lt;/p&gt; Notebooks come alive when interactive widgets are used. Users gain control of their data and can visualize changes in the data. . Learning becomes an immersive, fun experience. Researchers can easily see how changing inputs to a model impact the results. &lt;/blockquote &gt; . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; Import . import ipywidgets as widgets . A slider . widgets.IntSlider() . Change the details of the slider . widgets.IntSlider( value=7, min=0, max=10, step=1, description=&#39;Test:&#39;, disabled=False, continuous_update=False, orientation=&#39;horizontal&#39;, readout=True, readout_format=&#39;d&#39; ) . Get the value . x=widgets.IntSlider() print(&#39;The value is {}&#39;.format(str(x.value))) x . The value is 0 . A different way with interact . from ipywidgets import interact #some function we want to call def square(x): return x * x *2 #the new widget slider interact(square, x=(0, 100, 10)); . A text box . widgets.Text(value=&#39;Hello World!&#39;, disabled=True) . A toggle button . widgets.ToggleButton( value=False, description=&#39;Click me&#39;, disabled=False, button_style=&#39;&#39;, # &#39;success&#39;, &#39;info&#39;, &#39;warning&#39;, &#39;danger&#39; or &#39;&#39; tooltip=&#39;Description&#39;, icon=&#39;check&#39; # (FontAwesome names without the `fa-` prefix) ) . A dropdown menu . widgets.Dropdown( options=[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], value=&#39;2&#39;, description=&#39;Number:&#39;, disabled=False, ) . A radiobutton with a label in a box . widgets.Box( [ widgets.Label(value=&#39;Pizza topping with a very long label:&#39;), widgets.RadioButtons( options=[ &#39;pepperoni&#39;, &#39;pineapple&#39;, &#39;anchovies&#39;, &#39;and the long name that will fit fine and the long name that will fit fine and the long name that will fit fine &#39; ], layout={&#39;width&#39;: &#39;max-content&#39;} ) ] ) . Some html . widgets.HTMLMath( value=r&quot;Some math and &lt;i&gt;HTML&lt;/i&gt;: (x^2 ) and $$ frac{x+1}{x-1}$$&quot;, placeholder=&#39;Some HTML&#39;, description=&#39;Some HTML&#39;, ) . Accordion, with slider and textbox . accordion = widgets.Accordion(children=[widgets.IntSlider(), widgets.Text()], titles=(&#39;Slider&#39;, &#39;Text&#39;)) accordion . multiple sliders . a = widgets.IntSlider(description=&#39;a&#39;) b = widgets.IntSlider(description=&#39;b&#39;) c = widgets.IntSlider(description=&#39;c&#39;) def f(a, b, c): print(&#39;{}*{}*{}={}&#39;.format(a, b, c, a*b*c)) out = widgets.interactive_output(f, {&#39;a&#39;: a, &#39;b&#39;: b, &#39;c&#39;: c}) widgets.HBox([widgets.VBox([a, b, c]), out]) . Inserting into a website . After installing nbinteract a html file of a python notebook can be created . nbinteract Quick_ipyWidget.ipynb -s thomashsimm/TestWdgets/main . &lt;/div&gt; .",
            "url": "https://thomashsimm.com/2021/10/29/Imbedding-Python-Web.html",
            "relUrl": "/2021/10/29/Imbedding-Python-Web.html",
            "date": " • Oct 29, 2021"
        }
        
    
  
    
        ,"post9": {
            "title": "Data Viz",
            "content": "toc:true | branch: master | badges: true | comments: true | author: Thomas H. Simm | categories: [data viz, posters, data science, Thomas Simm] | . . Some data visualizations from my work in metallurgy. Most of my work was line plots so tried to keep these to a minimum here. . EBSD . Electron backscatter diffraction (EBSD) is a scanning electron microscope–based microstructural-crystallographic characterization technique commonly used in the study of crystalline or polycrystalline materials.[1][2] The technique can provide information about the structure,[3] crystal orientation ,[3]phase,[3] or strain[4] in the material. . [1] Randle, Valerie; Engler, Olaf (2000). Introduction to texture analysis: macrotexture, microtexture and orientation mapping (Digital printing 2003 ed.). Boca Raton: CRC Press. ISBN 978-9056992248. . [2] Schwartz, A. J.; Kumar, M.; Adams, B. L.; Field, D. P. (2000). Electron backscatter diffraction in materials science. New York: Kluwer Academic. . [3] Electron backscatter diffraction in materials science (2nd ed.). Springer Science+Business Media. 2009. p. 1. ISBN 978-0-387-88135-5. . [4] Wright, Stuart I.; Matthew, M. Nowell; David, P. Field. (2011). &quot;A review of strain analysis using electron backscatter diffraction&quot;. Microscopy and Microanalysis. 17. 17 (3): 316–329. Bibcode:2011MiMic..17..316W. doi:10.1017/S1431927611000055. PMID 21418731. . From: https://en.wikipedia.org/wiki/Electron_backscatter_diffraction . . A matenistic steel showing prior austenite grains. The top image has undergone an additional rolling regime resulting in smaller grain size. This is your classic EBSD orientation map with a twist in that the orientations are predicted. The colours represent different orientations given by the legend on the left- they are a vector [phi1,Phi,phi2] (MTEX) with each spatial point having it’s own vector. The colours are reconstructed using ARPGE to give a prediction on what the grains would be prior to cooling, based on the rotation matrix between adjacent elements. There are two problems here, defining the orientation relationships (or rotations) between neighbours and reconstructing grains. In the next case we can ignore the first. . **Paper**: The Influence of Lath, Block and Prior Austenite Grain (PAG) Size on the Tensile, Creep and Fatigue Properties of Novel Maraging Steel . An austenitic stainless steel that transforms to martensite under load. This is similar to the above example, but easier to solve as we only need to look at the rotation across one boundary at a time. In the top figure the coloured regions represent a different phase (martensite) with austenite grains and the particular colour what the orientation relationship (OR) is. The lines show the slip systems and the maximum Schmid factor. Basically, some OR are preferred, the direction of the martensite relates to the particular OR and the Schmid factors. . **Paper**: In situ observation of strain and phase transformation in plastically deformed 301 austenitic stainless steel . The change in various EBSD maps of an austenitic stainless steel (see above) before and after being pulled to 10% strain. See also the image below. Each set of maps (on horizontal axis and below) give a different measure of plastic deformation. But if we look closely we can see some areas with high values of one parameter can have low values of another. Even if we average over a grain it can be difficult to predict behaviour. These observations illustrate aspects of plastic deformation such as the chaotic nature and the none unique definition of plastic deformation. . **Paper**: The τ-plot, a multicomponent 1-D pole figure plot, to quantify the heterogeneity of plastic deformation . This is a localised strain map of the sample shown above but a slightly bigger region. This is produced by digital image correlation (DIC) by comparing two surface images. The data is then combined with the EBSD data allowing us to visualise the grain boundaries (black lines). . So how do we take account of orientation differences in grains (they matter) AND the chaotic nature of deformation and differences in parameters? . We do some averageing . This is a classic plot in metallurgy called the inverse pole figure (IPF) plot. Simply put each point on the triangle represents a different group of orientations. We are averageing based on an orientation criteria. In the top figures are two models that relate to plastic deformation (Schmid factor left and Taylor model right) plotted on to this IPF plot. The bottom two figures represent experimental data of a ‘Damage parameter’ (number of un-indexed points on boundary) of grains after creep deformation of an austenitic stainless steel. Clearly (hopefully), we can see a transition from type with increasing stress and overall plastic deformation. {Some adjustments could be done on the algorithm to create the plots but the main points remain} . . In a similar manner we can average details of a sample based on orientation in a different manner, as shown here. The reason for this averaging is so we can combine EBSD with powder diffraction (X-ray and neutron). Powder diffraction provides useful insights on some parameters connected to EBSD such as texture, plastic deformation and phases. Furthermore, the information can be from larger volumes of the sample (and not just the surface) than EBSD. However, the way it is measured means we have to modify how we combine the data. In the figure crystal plasticity models are compared with experimental data for EBSD and powder diffraction on the same axis. . **Paper**: The τ-plot, a multicomponent 1-D pole figure plot, to quantify the heterogeneity of plastic deformation . APT . The atom probe was introduced at the 14th Field Emission Symposium in 1967 by Erwin Wilhelm Müller and J. A. Panitz. It combined a field ion microscope with a mass spectrometer having a single particle detection capability and, for the first time, an instrument could “… determine the nature of one single atom seen on a metal surface and selected from neighboring atoms at the discretion of the observer”.[1] . https://en.wikipedia.org/wiki/Atom_probe . The image is an APT tip (a 3D cylinder type shape) showing iso-surfaces for two different elements (i.e. inside these surfaces the composition of an element {Ni and Mo here} is higher than a set value). This image is typical of APT analysis and produced from a designated software package. . This transforms data similar to shown above, first the APT data was cut into slices- this makes it easier to visualize the density and details and compares better with other techniques such as TEM. Secondly, I adjusted colours and contrast to improve the visual feel. . The above maps are pretty but very qualitative. Some extra details can be found by extracting details from the data as shown here. . Posters . . . . .",
            "url": "https://thomashsimm.com/2021/10/24/Data-Viz.html",
            "relUrl": "/2021/10/24/Data-Viz.html",
            "date": " • Oct 24, 2021"
        }
        
    
  
    
        ,"post10": {
            "title": "Git and Github",
            "content": ". Introduction to Git and GitHub . From the Coursera course within Google IT Automation with Python Professional Certificate https://www.coursera.org/learn/introduction-git-github/home/welcome . Check out the following links for more information: . https://git-scm.com/doc . https://en.wikipedia.org/wiki/Version_control . The Linux kernel documentation itself (https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/process/submitting-patches.rst?id=HEAD), as well as impassioned opinions from other developers. (http://stopwritingramblingcommitmessages.com/ https://robots.thoughtbot.com/5-useful-tips-for-a-better-commit-message) . You can check out &quot;Setting your email in Git&quot; (https://help.github.com/articles/setting-your-email-in-git/) and &quot;Keeping your email address private&quot; on the GitHub help site for how to do this. (https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-user-account/managing-email-preferences/setting-your-commit-email-address) . Run in github bash . Git is a distributed version control system. . Distributed means that each developer has a copy of the whole repository on their local machine. . . diff find the difference between two files . diff . https://man7.org/linux/man-pages/man1/diff.1.html . diff is used to find differences between two files. On its own, it’s a bit hard to use; instead, use it with diff -u to find lines which differ in two files: diff -u . diff -u is used to compare two files, line by line, and have the differing lines compared side-by-side in the same output. See below: . &gt;&gt;diff test.py test2.py . output . 3c3 &lt; c=a**b &gt; c=a**b+a 4a5 &gt; d=c**c . 3c3 . line in file 1 - c=change - line in file 2 a=added . &gt;&gt;diff -u test.py test2.py #output test.py 2021-10-17 11:14:24.880950400 +0100 +++ test2.py 2021-10-17 11:14:21.155278200 +0100 @@ -1,4 +1,5 @@ a=3 b=2 -c=a**b +c=a**b+a print(c) +d=c**c . adding -u gives extra context to changes . applying changes . Create a file with the changes in . &gt;&gt;diff -u test.py test2.py &gt;change.diff . patch . http://man7.org/linux/man-pages/man1/patch.1.html . &gt;&gt;patch test-Copy1.py &lt; change.diff . this applies changes in change.diff to test-Copy1.diff . VCS version control system . By keeping track of the changes that we make to our files, a VCS lets us know when a file changed, who changed it, and also lets us easily roll back those changes. . git config . &gt;&gt;git config --global user.email &quot;me@example.com&quot; &gt;&gt;git config --global user.name &quot;My name&quot; . set email and name . --global means for all repositories . &gt;&gt;git config -l . create a new repository . &gt;&gt;mkdir testa &gt;&gt;cd testa &gt;&gt;git init . detals of the created directory . &gt;&gt;ls -l .git #output-&gt;&gt; -rw-r--r-- 1 44781 197609 23 Oct 17 12:06 HEAD -rw-r--r-- 1 44781 197609 130 Oct 17 12:06 config -rw-r--r-- 1 44781 197609 73 Oct 17 12:06 description drwxr-xr-x 1 44781 197609 0 Oct 17 12:06 hooks/ drwxr-xr-x 1 44781 197609 0 Oct 17 12:06 info/ drwxr-xr-x 1 44781 197609 0 Oct 17 12:06 objects/ drwxr-xr-x 1 44781 197609 0 Oct 17 12:06 refs/ . The git directory acts as a database for all the changes tracked in Git and the working tree acts as a sandbox where we can edit the current versions of the files. . add a file to the directory and get it tracked . &gt;&gt;cp ../test.py . #note the dot at end to say copy to this directory &gt;&gt;git add test.py . The file is now in the staging area or index . contains all info about what files and changes are in the next commit . &gt;&gt;git add -p . this would all tracked and shows differences and asks if want to make the add . get the status . &gt;&gt;git status On branch master No commits yet Changes to be committed: (use &quot;git rm --cached &lt;file&gt;...&quot; to unstage) new file: test.py . test.py ready to be committed . Make a commit . &gt;&gt;git commit # Please enter the commit message for your changes. Lines starting # with &#39;#&#39; will be ignored, and an empty message aborts the commit. # # On branch master # # Initial commit # # Changes to be committed: # new file: test.py # ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ . this opens up an editor with text as shown . Enter details of the commit . To exit and save: Type the description at the very top, press esc to exit insert mode, then type :x! (now the cursor is at the bottom) and hit enter to save and exit . Alternatively add -m command with details of commit . git commit -m &#39;Changed print to include some text&#39; . Tracked files . Modified made changes but not committed yet | . | Staged in staging area | git add | . | Committed in git directory | git commit | . | . Commit messages . Brief description . More indepth details . More indepth . (remember to add new lines) . Git log . &gt;&gt;git log commit 05958854b7ad68f8b1a178f260dccd844aec0e16 (HEAD -&gt; master) Author: thomashsimm &lt;thomas @gmail.com&gt; Date: Sun Oct 17 13:04:10 2021 +0100 added python start line commit 917a027f6282ce1c2c01e00a48bb72995e3984a6 Author: thomashsimm &lt;thomas @gmail.com&gt; Date: Sun Oct 17 12:56:41 2021 +0100 Changed print to include some text commit 7e32e328db17594fd0a507b4a23f489b68c09543 Author: thomashsimm &lt;thomas @gmail.com&gt; Date: Sun Oct 17 12:38:02 2021 +0100 Add new file test.py . Skipping the Staging Area . &gt;&gt;git commit -a or &gt;&gt;git commit -a -m &quot;Added a new output&quot; . a shortcut to stage any changes to tracked files and commit them in one step . Getting more information about our changes . &gt;&gt;git log -p . Equivalent to diff -u (describe above) . to get more info on a particular commit . &gt;&gt;git show 7e32e328db17594fd0a507b4a23f489b68c09543 . Some stats of repo . &gt;&gt;git log --stat . changes in file, relative to repo/staging area . &gt;&gt;git diff . Deleting and Renaming Files . &gt;&gt;git rm test.py . removes the file test.py . &gt;&gt;git commit -m &quot;Deleted test.py&quot; . commit the change/deletion of the file . &gt;&gt;git mv test2.py test.py . rename a file . N.B. git mv can also be used for moving files . &gt;&gt;echo .DS_STORE &gt; .gitignore #create .gitignore file to ignore .DS_STORE files (OS sys) &gt;&gt;ls -la #view hidden files &gt;&gt;git add .gitignore #add file &gt;&gt;git commit -m &quot;added a gitignore file&quot; #commit changes . Overview git cheat sheet . git commit -a &nbsp;&nbsp;&nbsp; Stages files automatically . git log -p &nbsp;&nbsp;&nbsp; Produces patch text . git show&nbsp;&nbsp;&nbsp;Shows various objects . git diff&nbsp;&nbsp;&nbsp;Is similar to the Linux diff command, and can show the differences in various commits . git diff --staged&nbsp;&nbsp;&nbsp;An alias to --cached, this will show all staged files compared to the named commit . git add -p &nbsp;&nbsp;&nbsp;Allows a user to interactively review patches to add to the current commit . git mv&nbsp;&nbsp;&nbsp;Similar to the Linux mv command, this moves a file . git rmSimilar to the Linux rm command, this deletes, or removes a file . There are many useful git cheatsheets online as well. Please take some time to research and study a few, such as this one. https://github.github.com/training-kit/downloads/github-git-cheat-sheet.pdf . .gitignore files . .gitignore files are used to tell the git tool to intentionally ignore some files in a given Git repository. For example, this can be useful for configuration files or metadata files that a user may not want to check into the master branch. Check out more at: https://git-scm.com/docs/gitignore. . A few common examples of file patterns to exclude can be found here https://gist.github.com/octocat/9257657. . Undoing changes . Undoing unstaged changes . &gt;&gt;git restore test.py . &quot;git restore ...&quot; to discard changes in working directory&lt;/p&gt; This comes up as an option to do when go git status . Same as git checkout . This takes the file from the directory and changes the one in the working tree to match this . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; Undoing staged changes . Say we&#39;ve added all files in a directory . git add * . When we run git status we reaslise it includes a file we don&#39;t want to add . To remove the add we do: . &gt;&gt;git restore --staged newfile.txt or &gt;&gt;git reset HEAD newfile.txt . Amending commits . &gt;git commit --amend . This allows us to ammend the last commit . So for example we could add some more files to it and then modify the comments on the commit . Then overwrites the previous commit . Only use for: local changes . Amend Commits are not for commits that have been made public . Rollbacks . Revert to an earlier commit . With git revert, a new commit is created with inverse changes. This cancels previous changes instead of making it as though the original commit never happened. . &gt;&gt;git revert HEAD . Add description of why doing rollback . Recall press esc to exit insert mode, then type :x! (now the cursor is at the bottom) and hit enter to save and exit . Identifying a commit . SHA1 hash numbers that Git uses to identify commits . They provide the consistency that is critical for distributed systems such as Git. . | They are created using the commit message, date, author, and the snapshot taken of the working tree. . | They are composed of 40 characters. . | . &gt;&gt;git show # pick one of the commits &gt;&gt;git show 34051fe65ab25ae011b0473fd1707e6e84f89b71 # And if we wanted to revert to this &gt;&gt;git revert 34051fe65ab25ae011b0473fd1707e6e84f89b71 # this would also work if id is unique in repo &gt;&gt; git revert 34051f . Git Revert Cheat Sheet . git checkout is effectively used to switch branches. https://git-scm.com/docs/git-checkout | . git reset basically resets the repo, throwing away some changes. It’s somewhat difficult to understand, so reading the examples in the documentation may be a bit more useful. https://git-scm.com/docs/git-reset#_examples | . There are some other useful articles online, which discuss more aggressive approaches to resetting the repo. https://jwiegley.github.io/git-from-the-bottom-up/3-Reset/4-doing-a-hard-reset.html | . git commit --amend is used to make changes to commits after-the-fact, which can be useful for making notes about a given commit. https://git-scm.com/docs/git-commit#Documentation/git-commit.txtamend | . git revert makes a new commit which effectively rolls back a previous commit. It’s a bit like an undo command. https://git-scm.com/docs/git-revert | . There are a few ways you can rollback commits in Git. https://git-scm.com/book/en/v2/Git-Basics-Undoing-Things | . There are some interesting considerations about how git object data is stored, such as the usage of sha-1. | . Feel free to read more here: . A) https://en.wikipedia.org/wiki/SHA-1 . B) https://github.blog/2017-03-20-sha-1-collision-detection-on-github-com/ . Git Branch . a pointer to a particular commit | . it represents an independent line of development in a project | . the default branch that git creates for you when initialised is called master (sometimes main) | . To do something new or experimenting try adding a new branch | . New branches enable changes to be worked on without disrupting the most current working state | . List all branches in a repo . &gt;&gt;git branch * master . just the one at the moment the master . Add a new branch . &gt;&gt;git branch tryThis &gt;&gt;git branch * master tryThis . the * indicates the branch we are in . Switch to different branch . we use git checkout to check out the latest snapshot for both files and for branches. . &gt;&gt;git checkout tryThis Switched to branch &#39;tryThis&#39; &gt;&gt;git branch master * tryThis . Add and switch branches . &gt;&gt;git checkout -b orThis Switched to a new branch &#39;orThis&#39; &gt;&gt;git branch master * orThis tryThis . &gt;&gt; git log -2 commit 9204f0f890143d81c8fc3fa5db839be5f65e63e9 (HEAD -&gt; orThis) Author: thomashsimm &lt;thomas @gmail.com&gt; Date: Sun Oct 17 18:25:06 2021 +0100 add an empty file commit 34051fe65ab25ae011b0473fd1707e6e84f89b71 (tryThis, master) Author: thomashsimm &lt;thomas @gmail.com&gt; Date: Sun Oct 17 15:36:19 2021 +0100 Revert &quot;Revert &quot;added a gitignore file&quot;&quot; This reverts commit dc28347e0177c298e9b527ab8140973fb3a567ba. . We see the last two commits in this branch. Notice how next to the latest commit ID, git shows that this is where head is pointing to and that the branch is called orThis. . Next to the previous commit,git shows that both the master and the trThis branches are pointing to that snapshot of the project. . In this way, we can see that the orThis branch is ahead of the master branch. . &gt;&gt;nano gogo2.py #creates file gogo2.py &gt;&gt;git add * &gt;&gt;git commit -m &quot;gogo2.py file added to orThis&quot; &gt;&gt;ls -l total 2 -rw-r--r-- 1 44781 197609 9 Oct 17 18:56 gogo2.py -rw-r--r-- 1 44781 197609 38 Oct 17 14:51 test.py #go back to master &gt;&gt;git checkout master total 3 -rw-r--r-- 1 44781 197609 7 Oct 17 18:59 go.py -rw-r--r-- 1 44781 197609 16 Oct 17 18:59 gogo.py -rw-r--r-- 1 44781 197609 38 Oct 17 14:51 test.py #gogo2.py is not here! . Delete branch . &gt;&gt;git branch -d tryThis error: The branch &#39;tryThis&#39; is not fully merged. If you are sure you want to delete it, run &#39;git branch -D tryThis&#39;. &gt;&gt;git branch -D tryThis Deleted branch tryThis (was 59ec266). &gt;&gt;git branch * master orThis . Merging branches . Merging is the term that Git uses for combining branch data and history together. . &gt;&gt;git branch * master orThis #then merge orThis &gt;&gt;git merge orThis Updating da04c1c..4eb59cb Fast-forward go2.py | 4 ++++ 1 file changed, 4 insertions(+) create mode 100644 go2.py . &gt;&gt;git log commit 4eb59cb2dca6a09fb59477fcdf4595551ff9f85f (HEAD -&gt; master, branch2) Author: thomashsimm &lt;thomas @gmail.com&gt; Date: Sun Oct 17 19:17:28 2021 +0100 . Both branches are pointed at the same commit -&gt; (HEAD -&gt; master, branch2) . Merge conflict . From time to time, we might find that both the branches we&#39;re trying to merge have edits to the same part of the same file. . This will result in something called a merge conflict. . Normally, Git can automatically merge files for us. But when we have a merge conflict, it will need a little help to figure out what to do. . &gt;&gt;git merge branch2 Auto-merging go.py CONFLICT (content): Merge conflict in go.py Automatic merge failed; fix conflicts and then commit the result. #error message produced . &gt;&gt;git status On branch master You have unmerged paths. (fix conflicts and run &quot;git commit&quot;) (use &quot;git merge --abort&quot; to abort the merge) Unmerged paths: (use &quot;git add &lt;file&gt;...&quot; to mark resolution) both modified: go.py Untracked files: (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed) .gogo.py.swp no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;) . To try to resolve this we open up the file in editor . &gt;&gt;nano go.py ####in editor&gt;&gt; b=3 &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD #hello ======= #comment here too &gt;&gt;&gt;&gt;&gt;&gt;&gt; branch2 ####which we change to this to keep both mods&gt;&gt; b=3 #hello #comment here too . Then add the file and check the status . &gt;&gt;git add go.py &gt;&gt;git status On branch master All conflicts fixed but you are still merging. (use &quot;git commit&quot; to conclude merge) Changes to be committed: modified: go.py &gt;&gt;git commit [master b7e6929] Merge branch &#39;branch2&#39; Kept both features . File &#34;&lt;ipython-input-2-5de9e5fcd226&gt;&#34;, line 1 &gt;&gt;git add go.py ^ SyntaxError: invalid syntax . Conflicts now gone . And committed . --graph --oneline ==&gt;&gt; helps us visualise the merge . &gt;&gt;git log --graph --oneline . . Abort merge . &gt;&gt;git merge --abort . Git Branches and Merging Cheat Sheet . git branch Used to manage branches https://git-scm.com/docs/git-branch . git branch [branchname] Creates the branch https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging . git branch -d [branchname] Deletes the branch https://git-scm.com/docs/git-branch#Documentation/git-branch.txt--D . git branch -D [branchname] Forcibly deletes the branch https://git-scm.com/docs/git-branch#Documentation/git-branch.txt--D . git checkout [branchname] Switches to a branch. https://git-scm.com/docs/git-checkout . git checkout -b [branchname] Creates a new branch and switches to it. https://git-scm.com/docs/git-checkout#Documentation/git-checkout.txt--bltnewbranchgt . git merge [branchname] Merge joins branches together. https://git-scm.com/docs/git-merge . git merge --abort If there are merge conflicts (meaning files are incompatible), --abort can be used to abort the merge action. . git log --graph --onelineThis shows a summarized view of the commit history for a repo. https://git-scm.com/book/en/v2/Git-Basics-Viewing-the-Commit-History . Working with remotes . GitHub is a web-based Git repository hosting service. . On top of the version control functionality of Git, GitHub includes extra features like bug tracking, wikis, and task management. . GitHub lets us share and access repositories on the web and copy or clone them to our local computer, so we can work on them. . GitHub is a popular choice with a robust feature set, but it&#39;s not the only one. Other services that provide similar functionality are BitBucket, and GitLab. . . GitHub provides free access to a Git server for public and private repositories. . It limits the number of contributors for the free private repositories, and offers an unlimited private repository service for a monthly fee. We&#39;ll be using a free repository for our examples, which is fine for educational use, small personal projects, or open source development. . Clone a directory . This is to create a local copy of a repository from the github website . 1) Go to the repo . 2) Click code and copy the clone URL HTTPS . other options are availabe too | . . 3) In Git bash run . git clone https://github.com/ThomasHSimm/SwanseaProperty.git . Fill in any passwords if required . #Then add and commit the changes &gt;&gt;git commit -a -m &quot;Modified the readme&quot; [main c9307f7] modified read me 1 file changed, 1 insertion(+) . Git Push . Send the changes to the remote repository . &gt;&gt;git push Enumerating objects: 5, done. Counting objects: 100% (5/5), done. Delta compression using up to 8 threads Compressing objects: 100% (3/3), done. Writing objects: 100% (3/3), 309 bytes | 309.00 KiB/s, done. Total 3 (delta 2), reused 0 (delta 0), pack-reused 0 remote: Resolving deltas: 100% (2/2), completed with 2 local objects. To https://github.com/ThomasHSimm/SwanseaProperty.git 08aa0a2..c9307f7 main -&gt; main . Basic Interaction with GitHub Cheat-Sheet . There are various remote repository hosting sites: . - GitHub - BitBucket - Gitlab. . Follow the workflow at https://github.com/join to set up a free account, username, and password. After that, these steps (https://help.github.com/articles/create-a-repo/) will help you create a brand new repository on GitHub. . Some useful commands for getting started: . git clone URL . Git clone is used to clone a remote repository into a local workspace https://git-scm.com/docs/git-clone . git push . Git push is used to push commits from your local repo to a remote repo https://git-scm.com/docs/git-push . git pull . Git pull is used to fetch the newest updates from a remote repository https://git-scm.com/docs/git-pull . These can be useful for keeping your local workspace up to date. . https://help.github.com/en/articles/caching-your-github-password-in-git | . https://help.github.com/en/articles/generating-an-ssh-key | . Using a remote repository . to find the configuration of a remote repository go to the local copy and use git remote -v to find where the data is fetched from and pushed to. Below they are the same but can be different if say fetch with HTTP for read only and say SSH for pushing. But need to be same place. . &gt;&gt;git remote -v origin https://github.com/ThomasHSimm/THS_website.git (fetch) origin https://github.com/ThomasHSimm/THS_website.git (push) . And more information with git remote show origin . &gt;&gt;git remote show origin * remote origin Fetch URL: https://github.com/ThomasHSimm/THS_website.git Push URL: https://github.com/ThomasHSimm/THS_website.git HEAD branch: master Remote branches: gh-pages tracked master tracked Local branch configured for &#39;git pull&#39;: master merges with remote master Local ref configured for &#39;git push&#39;: master pushes to master (up to date) . If above had said master pushes to master (local out of date) . This means there have been changes on the remote and the local is now out of date- e.g. someone else has changed the repo. . We&#39;d now need to run &gt;&gt;git fetch to sync the data. . Find branches git is tracking git branch -r . To make changes to a remote branch we have to pull the remote branch, merge it with the local branch then push to the origin- the same thing we&#39;d do with the master. . Like with local change &gt;&gt;git status can give us changes in the remote repository if it exists (when in the local one) as well as the local changes . Fetching new changes . &gt;&gt;git fetch . This copies changes done in remote repo to local repo . But unlike git pull doesn&#39;t instantly merge changes . git pull = fetch and merge | git fetch = just fetches | . Can merge like this . &gt;&gt;git merge orgin/master . Or just do both with pull . As long as there are no conflicts, Git will move the current branch tip up to the target branch tip and combine histories of both commits. Using a fast-forward merge . &gt;&gt;git pull . To create a local branch for a remote branch we don&#39;t have yet run git checkout BRANCH_NAME . git remote update will fetch the contents of all remote branches and allow us to merge the contents ourselves. . Git Remotes Cheat-Sheet . git remote . Lists remote repos . git remote -v . List remote repos verbosely . git remote show [name] . Describes a single remote repo . git remote update . Fetches the most up-to-date objects . git fetch . Downloads specific objects . git branch -r . Lists remote branches; can be combined with other branch arguments to manage remote branches . Conflict Resolution Cheat Sheet . Merge conflicts are not uncommon when working in a team of developers, or on Open Source Software. Fortunately, GitHub has some good documentation on how to handle them when they happen: . https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-merge-conflicts . https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/resolving-a-merge-conflict-using-the-command-line . You can also use git rebase branchname to change the base of the current branch to be branchname . The git rebase command is a lot more powerful. Check out this link (https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History) for more information. . Git Fork and Pull Request Cheat Sheet . Check out the following link for more information: . https://help.github.com/en/articles/about-pull-request-merges . More Information on Code Reviews . Check out the following links for more information: . http://google.github.io/styleguide/ . https://help.github.com/en/articles/about-pull-request-reviews . https://medium.com/osedea/the-perfect-code-review-process-845e6ba5c31 . https://smartbear.com/learn/code-review/what-is-code-review/ . Additional Tools . Check out the following links for more information: . https://arp242.net/diy.html | . https://help.github.com/en/articles/closing-issues-using-keywords | . https://help.github.com/en/articles/setting-guidelines-for-repository-contributors | . https://www.infoworld.com/article/3271126/what-is-cicd-continuous-integration-and-continuous-delivery-explained.html | . https://stackify.com/what-is-cicd-whats-important-and-how-to-get-it-right/ | . https://docs.travis-ci.com/user/tutorial/ | . https://docs.travis-ci.com/user/build-stages/ | . . &lt;/div&gt; .",
            "url": "https://thomashsimm.com/2021/10/18/Git-and-Github.html",
            "relUrl": "/2021/10/18/Git-and-Github.html",
            "date": " • Oct 18, 2021"
        }
        
    
  
    
        ,"post11": {
            "title": "Building A Classifier App With Weblink",
            "content": ". Building a Classifier App with Weblink . Thomas H. Simm, PhD . Creating an image classifier app that is on the net! Using Jupyter notebooks, FastAi, Binder and Voila categories: [fastai, jupyter, Binder, Voila, myBinder, ThomasHSimm] . 1) The Model Part . 2) The Python Part Of the App . 3) The Binder Part . 1) The model Part . The model was run on https://colab.research.google.com with a GPU Necessary to have a GPU for time . Some imports and installs . !pip install -Uqq fastbook import fastbook fastbook.setup_book() . Gets Azure search key to use Bing search API . key = os.environ.get(&#39;AZURE_SEARCH_KEY&#39;, &#39;keygoeshere&#39;) . I’m going to do a classifier for holiday types . destas={&#39;beach&#39;:{&#39;beach&#39;,&#39;tropical&#39;,&#39;sea&#39;,&#39;beach holidays&#39;}, &#39;snow&#39;:{&#39;ski&#39;,&#39;snowboard&#39;,&#39;snow&#39;,&#39;ski holidays&#39;}, &#39;countryside&#39;:{&#39;lakes mountains&#39;,&#39;countryside&#39;,&#39;forest&#39;,&#39;fields&#39;}, &#39;city&#39;:{&#39;city&#39;,&#39;cities&#39;,&#39;bars&#39;,&#39;buildings&#39;}, &#39;safari&#39;:{&#39;safari&#39;,&#39;safari holidays&#39;,&#39;safari park&#39;,&#39;safari africa&#39;}} . Creates a folder containing images for each type . Need to add to dir with different searches not delete and add new stuff each time . For eaach holiday type- go through the search topics and add the results together before downloading images to the holiday type folder . This gives 600 pics per holiday type . path = Path(&#39;Destinations&#39;) try: path.mkdir() except: pass . # resultsALL for o in destas: dest = (path/o) dest.mkdir(exist_ok=True) for ii,oo in enumerate(destas[o]): # print(oo) results = search_images_bing(key, f&#39;{oo}&#39;) if ii&gt;0: resultsALL = L(resultsALL,results).concat() else: resultsALL=results print(o) print(np.shape(resultsALL)) download_images(dest, urls=resultsALL.attrgot(&#39;contentUrl&#39;)) . Create a data block for fastai . fns = get_image_files(path) dests = DataBlock( blocks=(ImageBlock, CategoryBlock), get_items=get_image_files, splitter=RandomSplitter(valid_pct=0.2, seed=42), get_y=parent_label, item_tfms=Resize(128)) . get rid of failed images . failed = verify_images(fns) failed.map(Path.unlink) failed . Have a look at the images . dls = dests.dataloaders(path) dls.valid.show_batch(max_n=40, nrows=10) . . create a dls for the learner . randomresizedcrop | default aug transforms | . dests = dests.new( item_tfms=RandomResizedCrop(224, min_scale=0.5), batch_tfms=aug_transforms()) dls = dests.dataloaders(path) . Do the learning over 4 epochs . learn = cnn_learner(dls, resnet18, metrics=error_rate) learn.fine_tune(4) . . Confusion matrix . interp = ClassificationInterpretation.from_learner(learn) interp.plot_confusion_matrix() . . Save the model (saves as export.pkl) . learn.export() . 2) The App in python . Some imports . # Classifier App # THSimm from fastai.vision.all import * from fastai.vision.widgets import * import urllib.request . Create parts of the widget . learn_inf = load_learner(&#39;export.pkl&#39;) btn_upload = widgets.FileUpload() out_pl = widgets.Output() out_pl.clear_output() lbl_pred = widgets.Label() . Function occurs on click upload . def on_click_classify(change): img = PILImage.create(btn_upload.data[-1]) out_pl.clear_output() with out_pl: display(img.to_thumb(500,500)) pred,pred_idx,probs = learn_inf.predict(img) lbl_pred.value = f&#39;Prediction: {pred}; Probability: {probs[pred_idx]:.04f}&#39; . btn_upload.observe(on_click_classify,names=[&#39;data&#39;]) . What is displayed . #hide_output text =&#39;Select your plane&#39; display(VBox([widgets.HTML(value = f&quot;&lt;h1&gt;&lt;font color=&#39;Black&#39;&gt;{text}&lt;/h1&gt; &lt;ol text-align: center&gt;&lt;font color=&#39;Black&#39;&gt; &lt;li&gt;Beach&lt;/li&gt; &lt;li&gt;Snow&lt;/li&gt; &lt;li&gt;Countryside&lt;/li&gt; &lt;li&gt;City&lt;/li&gt; &lt;li&gt;Safari&lt;/li&gt; &lt;/ol&gt;&quot;), btn_upload, out_pl, lbl_pred]) ) . 3) The Binder Part . Binder . mybinder.org is an online service for building and sharing reproducible and interactive computational environments from online repositories. Under the hood, it is a federation of BinderHub deployments that are maintained by the Binder community. It serves as both a public service and a demonstration of the BinderHub technology, though it is by no means the only BinderHub in existence. If you’re interested in deploying your own BinderHub for your own uses, please see the BinderHub documentation and don’t hesitate to reach out to the Binder community. https://mybinder.readthedocs.io/en/latest/introduction.html#preparing-a-repository-for-binder . Basically allowing us to put code online . Voila . The 2nd import part is Voila which allows us to hide the code and just display outputs . https://voila.readthedocs.io/en/stable/using.html . Method: . Create repository on github that is public, containing the ipynb file and a requirements.txt file | Then go to binder https://mybinder.org/ | Fill in form as shown below | . In requirements.txt: . voila fastai packaging ipywidgets . . The result . https://mybinder.org/v2/gh/ThomasHSimm/LocationsClassifier/HEAD?urlpath=%2Fvoila%2Frender%2FAppForDestClass.ipynb . https://tinyurl.com/LocClassAppThomasHSimm . . .",
            "url": "https://thomashsimm.com/2021/10/11/Building-a-Classifier-App-with-weblink.html",
            "relUrl": "/2021/10/11/Building-a-Classifier-App-with-weblink.html",
            "date": " • Oct 11, 2021"
        }
        
    
  
    
        ,"post12": {
            "title": "Building a Classifier App on the web",
            "content": ". 1) The Model Part . 2) The Python Part Of the App . 3) The Binder Part . 1) The model Part . The model was run on https://colab.research.google.com with a GPU . Necessary to have a GPU for time . Some imports and installs . !pip install -Uqq fastbook import fastbook fastbook.setup_book() . from fastbook import * from fastai.vision.widgets import * . Gets Azure search key to use Bing search API . key = os.environ.get(&#39;AZURE_SEARCH_KEY&#39;, &#39;keygoeshere&#39;) . I&#39;m going to do a classifier for holiday types . destas={&#39;beach&#39;:{&#39;beach&#39;,&#39;tropical&#39;,&#39;sea&#39;,&#39;beach holidays&#39;}, &#39;snow&#39;:{&#39;ski&#39;,&#39;snowboard&#39;,&#39;snow&#39;,&#39;ski holidays&#39;}, &#39;countryside&#39;:{&#39;lakes mountains&#39;,&#39;countryside&#39;,&#39;forest&#39;,&#39;fields&#39;}, &#39;city&#39;:{&#39;city&#39;,&#39;cities&#39;,&#39;bars&#39;,&#39;buildings&#39;}, &#39;safari&#39;:{&#39;safari&#39;,&#39;safari holidays&#39;,&#39;safari park&#39;,&#39;safari africa&#39;}} . Creates a folder containing images for each type . Need to add to dir with different searches not delete and add new stuff each time . For eaach holiday type- go through the search topics and add the results together before downloading images to the holiday type folder . This gives 600 pics per holiday type . path = Path(&#39;Destinations&#39;) try: path.mkdir() except: pass . for o in destas: dest = (path/o) dest.mkdir(exist_ok=True) for ii,oo in enumerate(destas[o]): # print(oo) results = search_images_bing(key, f&#39;{oo}&#39;) if ii&gt;0: resultsALL = L(resultsALL,results).concat() else: resultsALL=results print(o) print(np.shape(resultsALL)) download_images(dest, urls=resultsALL.attrgot(&#39;contentUrl&#39;)) . Create a data block for fastai . fns = get_image_files(path) dests = DataBlock( blocks=(ImageBlock, CategoryBlock), get_items=get_image_files, splitter=RandomSplitter(valid_pct=0.2, seed=42), get_y=parent_label, item_tfms=Resize(128)) . get rid of failed images . failed = verify_images(fns) failed.map(Path.unlink) failed . Have a look at the images . dls = dests.dataloaders(path) dls.valid.show_batch(max_n=40, nrows=10) . . create a dls for the learner . randomresizedcrop | default aug transforms | . dests = dests.new( item_tfms=RandomResizedCrop(224, min_scale=0.5), batch_tfms=aug_transforms()) dls = dests.dataloaders(path) . Do the learning over 4 epochs . learn = cnn_learner(dls, resnet18, metrics=error_rate) learn.fine_tune(4) . . Confusion matrix . interp = ClassificationInterpretation.from_learner(learn) interp.plot_confusion_matrix() . . Save the model (saves as export.pkl) . learn.export() . 2) The App in python . Some imports . # THSimm from fastai.vision.all import * from fastai.vision.widgets import * import urllib.request . Create parts of the widget . learn_inf = load_learner(&#39;export.pkl&#39;) btn_upload = widgets.FileUpload() out_pl = widgets.Output() out_pl.clear_output() lbl_pred = widgets.Label() . Function occurs on click upload . def on_click_classify(change): img = PILImage.create(btn_upload.data[-1]) out_pl.clear_output() with out_pl: display(img.to_thumb(500,500)) pred,pred_idx,probs = learn_inf.predict(img) lbl_pred.value = f&#39;Prediction: {pred}; Probability: {probs[pred_idx]:.04f}&#39; . btn_upload.observe(on_click_classify,names=[&#39;data&#39;]) . What is displayed . text =&#39;Select your plane&#39; display(VBox([widgets.HTML(value = f&quot;&lt;h1&gt;&lt;font color=&#39;Black&#39;&gt;{text}&lt;/h1&gt; &lt;ol text-align: center&gt;&lt;font color=&#39;Black&#39;&gt; &lt;li&gt;Beach&lt;/li&gt; &lt;li&gt;Snow&lt;/li&gt; &lt;li&gt;Countryside&lt;/li&gt; &lt;li&gt;City&lt;/li&gt; &lt;li&gt;Safari&lt;/li&gt; &lt;/ol&gt;&quot;), btn_upload, out_pl, lbl_pred]) ) . 3) The Binder Part . Binder . mybinder.org is an online service for building and sharing reproducible and interactive computational environments from online repositories. Under the hood, it is a federation of BinderHub deployments that are maintained by the Binder community. It serves as both a public service and a demonstration of the BinderHub technology, though it is by no means the only BinderHub in existence. If you’re interested in deploying your own BinderHub for your own uses, please see the BinderHub documentation and don’t hesitate to reach out to the Binder community.https://mybinder.readthedocs.io/en/latest/introduction.html#preparing-a-repository-for-binder . Basically allowing us to put code online . Voila . The 2nd import part is Voila which allows us to hide the code and just display outputs . https://voila.readthedocs.io/en/stable/using.html . Method: . Create repository on github that is public, containing the ipynb file and a requirements.txt file | Then go to binder https://mybinder.org/ | Fill in form as shown below | . In requirements.txt: . voila fastai packaging ipywidgets . . The result . https://mybinder.org/v2/gh/ThomasHSimm/LocationsClassifier/HEAD?urlpath=%2Fvoila%2Frender%2FAppForDestClass.ipynb . https://tinyurl.com/LocClassAppThomasHSimm . . .",
            "url": "https://thomashsimm.com/fastai/jupyter/binder/voila/mybinder/thomashsimm/2021/10/10/ImageClassifier.html",
            "relUrl": "/fastai/jupyter/binder/voila/mybinder/thomashsimm/2021/10/10/ImageClassifier.html",
            "date": " • Oct 10, 2021"
        }
        
    
  
    
        ,"post13": {
            "title": "Python Learnings",
            "content": ". . Introducing Python Object Types . Based on Chapter 4 of &quot;Learning Python&quot;, 4th Edition, Mark Lutz, O&#39;Reilly . Some maths . import math print(math.pi) print(math.sqrt(34)) . import random print(random.random()) print(random.choice([1,2,3,4])) print(random.choice([1,2,3,4])) . Indexing . S=&#39;Spam&#39; print(S[1:3]) print(S[:-1]) print(S[1:]) print(S[:]) print(S*3) . Immutability . # strings are not immutable S[0]=&#39;p&#39; ##error . S = &#39;z&#39; +S[1:] print(S) #or use replaces . String specific methods . print(S.find(&#39;pa&#39;))#finds position #replace parts of a string print(S) print(S.replace(&#39;pa&#39;,&#39;XYZ&#39;)) #upper and lower case print(S.upper()) print(S.lower()) . line=&#39;aaa,bbb,cccc,dd d n&#39; #split based on something print(line.split(&#39;,&#39;)) #creates a list print(type(line.split(&#39;,&#39;))) # strip out whitespace on rhs print(line.rstrip()) . Formatting . print(&#39;%s, eggs, and %s&#39; % (&#39;spam&#39;, &#39;SPAM!&#39;)) print(&#39;{0}, eggs, and {1}&#39;.format(&#39;spam&#39;, &#39;SPAM!&#39;)) . Help . Put into help( ) to get help on it . help(S.format) . Lists . The Python list object is the most general sequence provided by the language. Lists are positionally ordered collections of arbitrarily typed objects, and they have no fixed size. They are also mutable—unlike strings, lists can be modified in-place by assignment to offsets as well as a variety of list method calls . #list of different types L =[123, &#39;spam&#39;,1.23] print(L) #access print(L[2]) #append L.append(&#39;NI&#39;) print(L) #get rid of one pop! L.pop(0) print(L) M=[&#39;aa&#39;,&#39;jeji&#39;,&#39;boio&#39;,&#39;popo&#39;,&#39;gsss&#39;,&#39;zulu&#39;,&#39;ccc&#39;] #sort M.sort() print(M) M.reverse() print(M) . Comprehensions . Python includes a more advanced operation known as a list comprehension expression, which turns out to be a powerful way to process structures like our matrix. . M=[[1, 2, 3], [4, 5,6], [7, 8, 9]] print(M[1][2]) # this is a comprehension col1 = [row[1] for row in M] print(col1) #put if statement in print([row[1] for row in M if row[1]%2 ==0]) . print(M[0][:]) # we can&#39;t do this! for a column M[1,:] . Dictionaries . Python dictionaries are something completely different (Monty Python reference intended)—they are not sequences at all, but are instead known as mappings. Mappings are also collections of other objects, but they store objects by key instead of by relative position. In fact, mappings don’t maintain any reliable left-to-right order; they simply map keys to associated values. Dictionaries, the only mapping type in Python’s core objects set, are also mutable: they may be changed in-place and can grow and shrink on demand, like lists. . D = {&#39;food&#39;:&#39;Spam&#39;,&#39;quality&#39;:4, &#39;color&#39;:&#39;pink&#39;} print(D) #or create by key assignment D={} D[&#39;food&#39;]=&#39;Spam&#39; D[&#39;quality&#39;]=4 D[&#39;color&#39;]=&#39;pink&#39; print(D) #index it print(D[&#39;food&#39;]) . #what if the info is more complex? Nest rec = {&#39;name&#39;:{&#39;first&#39;:&#39;Bob&#39;,&#39;last&#39;:&#39;Smith&#39;}, &#39;job&#39;:[&#39;dev&#39;,&#39;mgr&#39;], &#39;age&#39;:40.5} #index them print(rec[&#39;name&#39;]) print(rec[&#39;name&#39;][&#39;last&#39;]) print(rec[&#39;job&#39;][0]) #or add more NB job is a list rec[&#39;job&#39;].append(&#39;janitor&#39;) print(rec) #keys are 1st bit print(rec.keys()) . Tuples . roughly like a list that cannot be changed—tuples are sequences, like lists, but they are immutable, like strings. Syntactically, they are coded in parentheses instead of square brackets, and they support arbitrary types, arbitrary nesting, and the usual sequence operations: . T=(1,2,3,4) print(len(T)) #concatenation print(T+(5,6)) #indexing print(T[0]) ## or T = (&#39;spam&#39;, 3.0, [11, 22, 33]) print(T) . Numeric Types . Based on Chapter 5 of &quot;Learning Python&quot;, 4th Edition, Mark Lutz, O&#39;Reilly . print(type(3)) print(type(3.0)) . print(102.2//3.2) #normal division print(102.2/3.2) #to the power print(3**2) #remainder print(100%3) #complex numbers j or J print((1j +2)*3J) . (52-6)*5*7.5*10*.89 10*.89*5*7.5 . Class Methods . Classes and Instances . Classes define the behavior of all instances of a specific class. . | Each variable of a specific class is an instance or object. . | Objects can have attributes, which store information about the object. . | You can make objects do work by calling their methods. . | The first parameter of the methods (self) represents the current instance. . | Methods are just like functions, but they can only be used through a class. . | . Special methods . Special methods start and end with __. (two underscores) . | Special methods have specific names, like init for the constructor or str for the conversion to string. . | . Defining a class . class ClassName: def method_name(self, other_parameters): body_of_method . Defining a class with a method . class ClassName: &quot;&quot;&quot;Documentation for the class.&quot;&quot;&quot; def method_name(self, other_parameters): &quot;&quot;&quot;Documentation for the method.&quot;&quot;&quot; body_of_method . Object Composition . You can have a situation where two different classes are related, but there is no inheritance going on. This is referred to as composition -- where one class makes use of code contained in another class. For example, imagine we have a Package class which represents a software package. It contains attributes about the software package, like name, version, and size. We also have a Repository class which represents all the packages available for installation. While there’s no inheritance relationship between the two classes, they are related. The Repository class will contain a dictionary or list of Packages that are contained in the repository. Let&#39;s take a look at an example Repository class definition: . class Repository: ... def __init__(self): ... self.packages = {} ... def add_package(self, package): ... self.packages[package.name] = package ... def total_size(self): ... result = 0 ... for package in self.packages.values(): ... result += package.size ... return result . In the constructor method, we initialize the packages dictionary, which will contain the package objects available in this repository instance. We initialize the dictionary in the constructor to ensure that every instance of the Repository class has its own dictionary. . We then define the add_package method, which takes a Package object as a parameter, and then adds it to our dictionary, using the package name attribute as the key. . Finally, we define a total_size method which computes the total size of all packages contained in our repository. This method iterates through the values in our repository dictionary and adds together the size attributes from each package object contained in the dictionary, returning the total at the end. In this example, we’re making use of Package attributes within our Repository class. We’re also calling the values() method on our packages dictionary instance. Composition allows us to use objects as attributes, as well as access all their attributes and methods. .",
            "url": "https://thomashsimm.com/2021/10/04/PythonBook.html",
            "relUrl": "/2021/10/04/PythonBook.html",
            "date": " • Oct 4, 2021"
        }
        
    
  
    
        ,"post14": {
            "title": "The operating system",
            "content": ". import os import sys . name of operating system . print(&#39;os.name&#39;,&#39;,&#39;,os.name,&#39; n&#39;) . os.name , nt . get current dir . print(&#39;os.getcwd()&#39;,&#39;,&#39;,os.getcwd(),&#39; n&#39;) . os.getcwd() , C: Users 44781 pyproj _misc . list files in dir . print(&#39;os.listdir()&#39;,&#39;,&#39;,os.listdir(),&#39; n&#39;) . os.listdir() , [&#39;.ipynb_checkpoints&#39;, &#39;adapic.jpg&#39;, &#39;awarhol.jpg&#39;, &#39;awarhol.webp&#39;, &#39;dog.jpg&#39;, &#39;draw.png&#39;, &#39;ebsd2.tif&#39;, &#39;ebsdmap.png&#39;, &#39;ebsdmap.tif&#39;, &#39;fastAI_C1_notes.ipynb&#39;, &#39;image_1000.jpg&#39;, &#39;image_5000(1).jpg&#39;, &#39;IndeedExtract-Copy1.ipynb&#39;, &#39;IndeedExtract-Copy2.ipynb&#39;, &#39;No_61_Mark_Rothko-thumbnail_webp-9999x9999.webp&#39;, &#39;os.ipynb&#39;, &#39;output&#39;, &#39;PF_500C R.png&#39;, &#39;PythonBook.ipynb&#39;, &#39;re.ipynb&#39;, &#39;styleTransfer.ipynb&#39;, &#39;test2&#39;, &#39;Untitled.ipynb&#39;, &#39;vangogh.jpg&#39;, &#39;vgg19_weights_tf_dim_ordering_tf_kernels_notop.h5&#39;, &#39;water.webp&#39;] . make a directory . this_dir=os.getcwd() directory=&#39;test&#39; #this adds either / or depending on os path = os.path.join(this_dir, directory) try: os.mkdir(path) except: pass #or try: os.mkdir(&#39;test2&#39;) except: pass . list files in dir . print(&#39;os.listdir()&#39;,&#39;,&#39;,os.listdir(),&#39; n&#39;) . os.listdir() , [&#39;.ipynb_checkpoints&#39;, &#39;adapic.jpg&#39;, &#39;awarhol.jpg&#39;, &#39;awarhol.webp&#39;, &#39;dog.jpg&#39;, &#39;draw.png&#39;, &#39;ebsd2.tif&#39;, &#39;ebsdmap.png&#39;, &#39;ebsdmap.tif&#39;, &#39;fastAI_C1_notes.ipynb&#39;, &#39;image_1000.jpg&#39;, &#39;image_5000(1).jpg&#39;, &#39;IndeedExtract-Copy1.ipynb&#39;, &#39;IndeedExtract-Copy2.ipynb&#39;, &#39;No_61_Mark_Rothko-thumbnail_webp-9999x9999.webp&#39;, &#39;os.ipynb&#39;, &#39;output&#39;, &#39;PF_500C R.png&#39;, &#39;PythonBook.ipynb&#39;, &#39;re.ipynb&#39;, &#39;styleTransfer.ipynb&#39;, &#39;test&#39;, &#39;test2&#39;, &#39;Untitled.ipynb&#39;, &#39;vangogh.jpg&#39;, &#39;vgg19_weights_tf_dim_ordering_tf_kernels_notop.h5&#39;, &#39;water.webp&#39;] . Check file/dir exists . print(os.path.exists(&quot;test2&quot;),os.path.exists(&quot;test&quot;)) . True True . change directory . os.chdir(directory) print(&#39;os.getcwd()&#39;,&#39;,&#39;,os.getcwd(),&#39; n&#39;) . os.getcwd() , C: Users 44781 pyproj _misc test . Create and Rename a file . open(&#39;Old.txt&#39;,&#39;a&#39;).close() # check file exists print(&#39;old=&#39;,os.path.exists(&quot;Old.txt&quot;),&#39;. new=&#39;,os.path.exists(&quot;New.txt&quot;)) # rename a file fd = &quot;Old.txt&quot; os.rename(fd,&#39;New.txt&#39;) # check file exists print(&#39;old=&#39;,os.path.exists(&quot;Old.txt&quot;),&#39;. new=&#39;,os.path.exists(&quot;New.txt&quot;)) . old= True . new= False old= False . new= True . Copy a file- . can be done in os but easier in shutil . https://stackabuse.com/how-to-copy-a-file-in-python/ . import shutil shutil.copyfile(&#39;New.txt&#39;, &#39;Old.txt&#39;) # check file exists print(&#39;old=&#39;,os.path.exists(&quot;Old.txt&quot;),&#39;. new=&#39;,os.path.exists(&quot;New.txt&quot;)) . old= True . new= True . Remove a file . os.remove(&quot;New.txt&quot;) # os.remove(&quot;Old.txt&quot;) # check file exists print(&#39;old=&#39;,os.path.exists(&quot;Old.txt&quot;),&#39;. new=&#39;,os.path.exists(&quot;New.txt&quot;)) . old= True . new= False . Go back up in directory . os.path.dirname(os.path.dirname( )) . &#39;C: Users 44781 pyproj&#39; . os.rmdir(path) #list files in dir print(&#39;os.listdir()&#39;,&#39;,&#39;,os.listdir(),&#39; n&#39;) . os.listdir() , [&#39;.ipynb_checkpoints&#39;, &#39;adapic.jpg&#39;, &#39;awarhol.jpg&#39;, &#39;awarhol.webp&#39;, &#39;dog.jpg&#39;, &#39;draw.png&#39;, &#39;ebsd2.tif&#39;, &#39;ebsdmap.png&#39;, &#39;ebsdmap.tif&#39;, &#39;fastAI_C1_notes.ipynb&#39;, &#39;image_1000.jpg&#39;, &#39;image_5000(1).jpg&#39;, &#39;IndeedExtract-Copy1.ipynb&#39;, &#39;IndeedExtract-Copy2.ipynb&#39;, &#39;No_61_Mark_Rothko-thumbnail_webp-9999x9999.webp&#39;, &#39;os.ipynb&#39;, &#39;output&#39;, &#39;PF_500C R.png&#39;, &#39;PythonBook.ipynb&#39;, &#39;re.ipynb&#39;, &#39;styleTransfer.ipynb&#39;, &#39;test2&#39;, &#39;Untitled.ipynb&#39;, &#39;vangogh.jpg&#39;, &#39;vgg19_weights_tf_dim_ordering_tf_kernels_notop.h5&#39;, &#39;water.webp&#39;] . Create new files . nano file.txt #create file touch file.txt . !cd . C: Users 44781 pyproj _misc test . Subprocess module . import subprocess # subprocess.run(&quot;date&quot;,shell=True) print(subprocess.run([&#39;cmd&#39;, &#39;/c&#39;, &#39;date&#39;])) . CompletedProcess(args=[&#39;cmd&#39;, &#39;/c&#39;, &#39;date&#39;], returncode=1) . Pointers for Getting Your Environment Setup . Learning more about operating systems . We’ve talked briefly about what an operating system is and what we&#39;ll need to know about operating systems for this course. If you want to learn some additional operating system concepts, check out the videos on this subject in the Technical Support Fundamentals course (https://www.coursera.org/lecture/technical-support-fundamentals/module-introduction-I3n9l). If you want to dive deeper onto how to manage Windows and Linux, check out the Operating Systems and You: Becoming a Power User course (https://www.coursera.org/learn/os-power-user). . If you want to discover more about the history of Unix, you can read all the details on the Unix Wikipedia page https://en.wikipedia.org/wiki/History_of_Unix. . Installing Python and additional modules . If you don&#39;t have Python installed yet, we recommend that you visit the official Python website (http://www.python.org/) and download the installer that corresponds to your operating system. . There’s a bunch of guides out there for installing Python and they all follow a similar process to the one we described in the videos. This guide from Real Python (https://realpython.com/installing-python/) includes instructions on how to install python on a range of different operating systems and distributions. . Once you have Python installed on your operating system, it&#39;s a good idea to familiarize yourself with pip and the associated tools. You can find more info about these here https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/. . Using package management systems . Package management systems help you better manage the software installed on your machine. These management systems vary a lot from operating system to operating system. So, you need to pick the one that works for the OS you’re using. Check out these guides for help with this: . Installing Python 3 on Windows 10 with Chocolatey https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-local-programming-environment-on-windows-10 | . Installing Python 3 on MacOS with Homebrew http://www.pyladies.com/blog/Get-Your-Mac-Ready-for-Python-Programming/ | . Package management basics on Linux https://www.digitalocean.com/community/tutorials/package-management-basics-apt-yum-dnf-pkg | . Other information . Python in the Microsoft Store for Windows 10 https://devblogs.microsoft.com/python/python-in-the-windows-10-may-2019-update/ | . Setting up Your Environment . After you’ve installed Python and checked that it works, the next step to set up your developer environment is to choose your main code editor. . These are some of the common editors for Python, available for all platforms: . Atom https://atom.io/ . | Eclipse https://www.eclipse.org/ . | PyCharm https://www.jetbrains.com/pycharm/ . | Sublime Text http://www.sublimetext.com/ . | Visual Studio Code https://code.visualstudio.com/ . | . You can read more about these editors, and others, in these overview comparatives: . Python IDEs and Code Editors (Guide) https://realpython.com/python-ides-code-editors-guide/#pycharm . | Best Python IDEs and Code Editors https://www.softwaretestinghelp.com/python-ide-code-editors/ . | Top 5 Python IDEs for Data Science https://www.datacamp.com/community/tutorials/data-science-python-ide . | . We encourage you to try out these editors and pick your favorite. Then, install it on your computer and experiment with writing and executing Python scripts locally. . Reading and Writing Files Cheat-Sheet . Check out the following link for more information: . https://docs.python.org/3/library/functions.html#open | . Files and Directories Cheat-Sheet . Check out the following links for more information: . https://docs.python.org/3/library/os.html . | https://docs.python.org/3/library/os.path.html . | https://en.wikipedia.org/wiki/Unix_time . | . CSV Files Cheat Sheet . Check out the following links for more information: . https://docs.python.org/3/library/csv.html . | https://realpython.com/python-csv/ . | .",
            "url": "https://thomashsimm.com/2021/10/04/OS.html",
            "relUrl": "/2021/10/04/OS.html",
            "date": " • Oct 4, 2021"
        }
        
    
  
    
        ,"post15": {
            "title": "Swansea House Price Report",
            "content": "An investigation of the influence of location and property characteristics in Swansea, UK . Overview . An investigation of the effect of the details (or characteristics) of a property (e.g., room size) and its nearness to different location venues (e.g. shops), on the property prices in Swansea, UK. . The Swansea area is characterised by details of its households, both property and location details. This information is used to show the importance these aspects have on property price and create house price predictions. Cluster analysis is performed to look at the characteristics of different areas. . The investigation is an exploratory analysis of the capabilities of machine learning and the foursquare location service (https://foursquare.com/). The report is produced for the final submission of the IBM Data Science Professional Certificate [https://www.coursera.org/professional-certificates/ibm-data-science]. Some of the data and python files involved in the analysis are given at https://github.com/dMaterialia/SwanseaProperty. Some other links involving interactive plots are given within the report. . Keywords: Swansea, Property, FourSquare, IBM Data Science, Machine Learning, Clustering, Random Forrest Model . Contents . 1 Introduction 3 . 2 Data and Methods 5 . 2.1 Data 5 . 2.1.1 Census Data 5 . 2.1.2 Doogal data 5 . 2.1.3 Four Square 6 . 2.1.4 Location Polygons 6 . 2.2 Methodology 6 . 2.2.1 Property Prices 6 . 2.2.2 Selected Areas 7 . 2.2.3 FourSquare 8 . 2.2.4 Swansea Data Plots 9 . 2.2.5 Machine Learning Algorithms 10 . 2.2.6 Post processing 11 . 3 Results 11 . 3.1 Property Details 11 . 3.2 Location details 15 . 3.2.1 Locations Using Search 15 . 3.2.2 Locations Using Explore 17 . 3.3 Location and Property details 18 . 4 Discussion 19 . 4.1 The Selected Areas 19 . 4.2 Effect of number of rooms 20 . 4.3 Quantifying the Location Effect 21 . 4.4 Is the model and data a good predictor of property prices? 22 . 4.5 Getting more out of clustering 23 . 5 Conclusion 23 . 6 References 24 . Introduction . Swansea is a city in Wales in the United Kingdom. It is the second largest city in Wales and the twenty-fifth largest city in the United Kingdom, with a population of 241,300 in 2014 [1]. The city is located by the sea, on the Bristol Channel. Within the Swansea region there is a mixture of location types including seaside, maritime, residential, shopping, industrial, and agricultural (Figure 1). . The city’s location relative to the sea and the nearest cities in Wales and England have an important influence on the city. The nearest city is Cardiff the capital of Wales, 68 km to the west, whereas to the east St. Davids is the nearest city at 110 km and to the north St Asaph at 220 km away is the nearest city. The population density in the surrounding regions is therefore relatively low compared to the rest of the UK (Figure 2) and Swansea is a relatively remote location to other places in the UK. . . Figure . Images of Swansea. Sources various. . Within the Swansea city region being investigated the nature of the individual regions varies considerably. To the west is the Gower peninsula a coastal region which is designated as an Area of Outstanding Natural Beauty [2]. Whereas, to the north and east are regions with a high density of industrial estates. There are also areas known for their nightlife including Uplands and Mumbles as well as the city centre region. The Swansea marina district is a thriving residential area near the city centre consisting of a high density of flats, which replaced the previous industrial area that had declined from 1970s onwards [3]. In addition, the student population has an important influence on the city, with a high-density student population to the west of the city in the Uplands and Brynmill areas. In between these areas are a variety of residential areas, with varying deprivation and property prices. . . Figure . Population density of the UK, arrow highlights Swansea. Image from [4]. . In the property world, the cliche is that the three most important factors in the desirability of a house are “location, location, location” [5]. The location of Swansea relative to the rest of the UK and the location of the parts of Swansea to its local geography (e.g., the beach, city centre, marina) have shaped the nature of the areas within it. One of the questions that this work seeks to answer is how the current local geography dictates the property prices. How true is “location, location, location” and can this effect be quantified relative to the details of a property? What are the different aspects about location that matter? And to what extent? What can be used to guide property investment or government planning? This can be done by considering what details may change in the future and what cannot (e.g., distance to a beach versus distance to local shop). . It should be noted that socio-economics or crime statistics are purposely ignored, this makes the problem simpler but is also done because this is not what is being investigated. However, the simplicity of the data used may be at a detriment in terms of predictions. These details could be relatively easily included, as deprivation is included in one of the datasets and the crime statistics are readily available. However, property price and deprivation or crime statistics are well linked. Hence, including these variables may mask other effects of location or property details. . The work will try to address: . How much of the property price can be ascertained from details of the property, such as number of rooms, alone? . | And can the influence of location on price be quantified based on the businesses, facilities and environment situated nearby? . | . Property prices will be used as a target value, as an indication of the property’s desirability. The other values will be used as parameters to understand this. . Data and Methods . Data . The two main sources of data in this report are the UK Census data and the foursquare.com database. In addition, the website doogal.co.uk and UK data service are also used. . Census Data . The UK census is a data collection exercise in the United Kingdom which occurs every 10 years. Participation in the census is compulsory and is used to obtain statistics on the UK’s economy and society, which is then used to assist the planning and allocation of resources, policy-making and decision-making [6]. Details of the census can be accessed at the website [7]. Mainly to maintain anonymity of participants, the census data is separated into areas which are unique to the census. The areas are larger than single postal code regions, e.g., SA2 0DE, but smaller than the first digits of the postcode e.g., SA2 or district regions such as Uplands in Swansea. . In the Swansea area there are ~9,000 unique postcodes. Whereas for the UK census areas there are ~1,000 regions in Swansea. Most analysis will be done on these census areas to allow data to be merged from different sources. . As shown in Figure 3 lots of information can be obtained from the census data. Based on the remit used here, only 3 of these datasets were used: 1) KS101EW- Usual resident population, 2) KS401EW- Dwellings, household spaces and accommodation type, 3) KS403EW- Rooms, bedrooms, and central heating. Within these files only some of the data is used. The categories extracted are shown in Table 1. . Table . Categories used from Census data about property details. . No. of People | Area (hect.) | Density (ppl/hect.) | Rooms Per House | Bedrooms . Per House . | % No central . heat . | No. of Dwell.s | % Detached | % Semi Detached | % Terraced | % Flats | % Mobile | . . Figure . Screen shot of the Census data page used [8]. . Doogal data . There is some cross-over between with the Census data as some of the same data sources are used. But Doogal will mainly be used for: . To match postcodes to census ID . | Location data- latitude and longitude . | Property price information . | . Four Square . For location information FourSquare [9] will be used. Instead of using the explore function, several key locations have been identified that can characterise an area. These include: . Beach . | Parks . | Pubs . | Supermarkets . | Doctors . | etc . | . Approximately 20 categories will be used, which will mean ~20, 000 calls to foursquare. The reason for this method is that the explore approach was not able to uniquely identify regions, for example large cluster sizes were needed. More detail is provided in the methods section. . Location Polygons . Location polygons were found from the UK data service [10] this allows plotting of Choropleth Maps. Choropleth Maps are location plots where different regions are colour coded based on a parameter such as house price. To do this polygons of the regions are required, normally in in .KML or .shp file formats. A slight modification of the Census polygons was done to convert .shp files to .json files for use in Folium which is shown in the file “createSwanseaJSON_fromGov.ipynb”. . Methodology . All analysis is done using Python 3.8. Both Spyder and JupyterLabs are used. Spyder to create .py function files which are then called by the notebooks in JupyterLabs for visualisation of the results. Most of the scripts and data can be accessed on my GitHub page for this project [11]. The interactive nature of folium plots are difficult to share, the best way around this is to use nbviewer [12] to share notebooks put on github. . Property Prices . The property data exists as sales data for each post code over several years. Since, property price is the key variable in this report some consideration of how to deal with this is needed. Given inflation of property prices, this data is not ideal. Data sources such as Zoopla which create an expected price of a property; however, this cannot be used here as they forbid webscraping. Instead, to use the property sales data property inflation will have to be accounted for. A simple way to do this, and that used here, is to take the average over a period after the financial crash and before a current upsurge in prices when prices were approximately level (Figure 4). Between 2008 and 2019 is used. . A secondary data filtering was attempted, whereby the house prices where adjusted based on the percentage of house types in the Census data. i.e., Avg. House Price = %Terraced x Avg. Terrace price + %Detached x Avg. Detached price + etc. However, given the sparsity in some areas for property sales it gave undue weight to some individual house sales. For this reason, the overall average was used. A more refined procedure accounting for the number of sales in each property type that uses general trends in prices in different property types across Swansea would be an improvement. In addition, a weighting of predictions based on confidence of property prices would be another improvement. . . Figure . Change in property price for different post code areas. All property sales are used, and a moving average is used. . As is shown in Figure 5. There is a considerable variation in property prices across Swansea. . . Figure . Price of properties in Swansea Census regions. . Selected Areas . To help break-down the data, five regions within Swansea have been selected to provide additional information. These are shown in Figure 6. . The Langland region is situated to the west of the city on the Gower peninsula close to a beach. . | The Penderry region ranks low in the Census deprivation index, situated to the north of the region. . | The Morriston North region is a middling region within Swansea, situated in the north of the region and close to the M5 motorway. . | Uplands is one of the most popular areas outside the centre for its nightlife and shops, it also has a high student density. . | The Swansea Marina area is a relatively new region within Swansea, emerging after the deindustrialisation of the area, consisting mainly of flats. The Maritime region chosen is one of the more expensive Census regions in this area. . | . . Figure . Map of Swansea area. The city centre and locations of post-code regions that will be looked at in more detail are shown. . FourSquare . Foursquare is used to get information about venues close to the census regions. Venues include a wide range of places including shops, offices, beaches, sports centres (a full list is found here [13]. The venues are separated with a venue hierarchy, so for example for a football stadium, is in the stadium category which is itself in the Arts &amp; Entertainment category. One way this hierarchy caused problems was in separating out restaurants from fast food venues, where each specific venue had to be selected. . Foursquare has two main venue searches: . Search: returns a list of venues near a given location [14] . | Explore: returns a list of recommended venues near a given location [15] . | . Both have some customization on the criteria searched, based on the type of venue as well as other criteria. This is particularly the case for ‘explore’ where time of day/week, popularity of venue and price can be considered. Venue categories can be limited both by providing a list of categories and in ‘explore’ only by specifying a section which includes: “food, drinks, coffee, shops, arts, outdoors, sights, trending, nextVenues (venues frequently visited after a given venue), or topPicks (a mix of recommendations generated without a query from the user)” [15]. . Two methods are used, one using ‘search’ to get selected venues near the census regions, and a second using ‘explore’ using the different section categories. ‘Search’ is used for supervised machine learning to predict property price. And ‘explore’ for unsupervised learning to categorise clusters based on location. . For the ‘search’ call 24 venue categories were chosen (shown in Table 2) and either the distance to this venue type (given as Distance in the table) or how many are within a given radius of the census region (given as Frequency in the table). The distance metric is the radius over which these are determined. Further details of this processing is in the file “ClusteringByLocation.py” in the function “fit_Clusters”. . Table . The different venue categories used in the ‘search’ call. ‘Distance’ means that the distance to a venue is measured, whereas ‘Frequency’ gives the number of those venues within the given radius. . . For the ‘explore’ call each of the ‘Sections’ are used with a search radius of 800 m, the time and day were set as ‘any’, and sortByPopularity as 1 (i.e. venues at any time sorted by popularity). The data requires additional processing to incorporate into a machine learning model. First one hot encoding is used to convert the categorical data about venue details (a list of venue types for each location) to a form as shown in Figure 7, whereby a 1 indicates the venue category exists. Then for each location the rows are added and normalised, so that the number in a row represents the fraction of that venue type found in that area. So, in the figure area W00010265 has 3.8% American restaurants, 1.9% BBQ joints. This is the data used in the model. To help with categorising the data is then converted to a list of the most common venue types, as shown in the figure. Further details of this processing is in the file “ClusteringByLocation.py” in the function “Clustering”. . . . Figure . Output from data processing after details of venues have been determined. Top-left, one hot encoding, top-right convert to a fractional values for modelling, bottom, covert to help categorising and plotting. . Swansea Data Plots . Plots of Swansea to visualise the results were performed with Folium [16]. Two types of plots were used Choropleth maps, where the region is coloured based on a scalar quantity, and Cluster plots, where the colour of marker shows what cluster an area is in. . For the latter two colour arrays (rainbow and rainbow2) were created for the inner and outer colour of the markers using seaborn, as follows: . # set color scheme for the clusters . N = kclusters+5#add a bit as color returns to same . import seaborn as sns . import copy . import random . colors_array = sns.color_palette(‘hls’, N)#husl hls Paired . rainbow = [colors.rgb2hex(i) for i in colors_array] . rainbow2=copy.copy(rainbow) . random.shuffle(rainbow) . Machine Learning Algorithms . Both supervised and unsupervised models were used. . Figure 8 displays a handy guide for choosing a machine learning algorithm, taken from [17]. For the trained models, we want to predict a value. Therefore, as shown in the figure a linear regression model is a fast method to use. For comparison a Decision Forest Regression is used, which has a high accuracy whilst also having fast training times. The third method used for supervised learning, k-nearest neighbour regression, was chosen because the algorithm is like the one used for the unsupervised learning, and may provide different insights in the data. For the unsupervised learning model, a model was wanted that could cluster data and reveal structures. For this there is one clear choice from the figure, K-means clustering. . The supervised models used property price as a target. For all models, data was split into test and train datasets with 70% of the data used for training. All reported errors in results are from applying the model to the test dataset. A linear regression model was used on the property details, but due to its accuracy compared to other methods was not used elsewhere. A random forest regressor model (RandomForestRegressor) and a K nearest neighbours regressor (KNeighborsRegressor) are the main models used for supervised modelling. For the RandomForestRegressor the number of trees in the forest is determined by finding the minimum mean absolute error using a range of values for the number of trees (up to 600). For the KNeighborsRegressor the number of nearest neighbours was found using GridSearch for neighbours up to 15 (values normally found were ~4). . An unsupervised model was used on the location data to cluster different areas. For this a K-Means clustering (Kmeans) model was used. To determine the number of clusters to form, the ‘elbow method’ was used. This was done by calculating the square of Euclidean distance of each point from its cluster centre for different number of clusters. The two are plotted against each other and the value chosen is where there is a noticeable flattening in the curve (the elbow). . All models used are from scikit-learn [18]. . . Figure . Machine learning algorithm cheat sheet, taken from [17]. . Post processing . To help understand the results of the supervised learning models more and find out about the effect of location and number of rooms an additional processing is performed. The way this is done is by altering the data slightly and giving it back to the model. . For example, to understand the location effect on property prices, the average property details are given to the model alongside the region’s location details. This can be seen in the function “locationeffect” in “MachineLearnBig.py”. Or to quantify the effect of the number of rooms by changing the number of rooms whilst keeping other parameters the same. . Results . Property Details . An overview of the property details data is shown in Table 3 and for the selected locations. For each parameter there is a wide range in values, many variables vary by a factor of more than 2 between maximum and minimum values. The deprivation index, a measure of how deprived an area is using multiple sources such as employment, social class, and availability of cars [19], is also included here but not used in analysis (the higher the value the less deprived). The selected locations also show a range of values for the parameters. The properties in Mumbles have an average price over five times that in Penderry, and two times higher than the Uplands and Maritime regions. There is also a mix in property types, Maritime is mainly flats, whereas Penderry and Morriston are mainly semi-detached and Mumbles mainly detached. Variations in the density of people in the areas also changes significantly, being lowest in the Maritime district which is around seven times denser than Penderry and Mumbles districts. . The 12 parameters on the left are used as input for the model with a target of the average price. . Table . Information of the details of properties in the different Census regions within Swansea using the “.describe” function of pandas. . . Table . Average property details of the selected regions. Note that a higher deprivation index indicates less deprivation of a region. . . The influence that the parameters have on property price can be highlighted by scatter plots and the Pearson correlation coefficient. The Pearson correlation gives the following relationships: 0.5 to 1 strong correlation, 0.3 to 0.49 moderate correlation, 0 to 0.29 low correlation. . For the property data, scatter plots with Pearson correlation displayed in the tile are shown in Figure 9. Most of the property detail variables have a low correlation with price. The exceptions to this are: (1) Number of rooms and bedroom which have a high positive correlation (i.e., more rooms more expensive properties), (2) The percentage of detached properties, positively correlated with price, and (3) the percentage of terraced properties, which is negatively correlated with price and unlike the other two only moderately correlated. . . Figure . Correlation plots of the different details of properties used compared with the averaged property prices. . Using the property details and house prices, predictions on the property prices using different models were made. The results of this analysis are shown in Table 5. . The first model used was a linear regression model, the parameters obtained being shown in Table 6. The results of the model are consistent with the correlation plots, although a little difficult to interpret for the house types. But it is notable that the model estimates a gain of £36,000 per extra room in a property. . With the linear regression model using the property data the mean absolute error (MAE) in property price is £27,000 and the variance score is 0.58. For the KNN regressor model the values are improved for MAE at £24,900 but lower for variance at 0.53. The best model is the Random Forrest Regressor, which has MAE of £24,600 and variance of 0.57. . Based on these results a reasonably accurate predictor of property price can be made from the property details alone. However, there is more to property prices than property details alone. This is illustrated in Figure 10, which shows the difference between property prices and predictions using the Random Forrest model. The figure shows that some areas have a marked difference in property price between model and actual. The regions in the Gower in the west (with negative price difference) suggest the importance of location. . . Figure . Map of Swansea showing the difference in Census regions between predicted property price based on property details. Using the RF model. A negative value indicates the model underestimates the measured property price. . Table . Details of models to predict the property price in Swansea. The mean absolute error (MAE), variance score and details of the parameters used are shown. The models are performed for details about the property alone (Property), details about the location alone (Location), and details about both location and property details (Location + Property). Three different machine learning models are used. . . Table . Results of using a linear regression on the property details to predict property prices. The property price is given as: intercept + parameter multiplied by value. E.g. 7000 + 37000x5 + -2100 + …. For a 5 room terraced property. . . Location details . To examine the influence of location, several approaches are taken. Given that the Random Forrest Regressor model was more accurate in its prediction than the other two, this model will be used here. . As a first step the longitude and latitude of each region are used as the variables to predict price (recall that 70% of the data is used for training and 30% for testing). As shown in Table 5, with only this position data, this model predicts property prices with a lower mean absolute error than the equivalent RF model using the property details (£22,600 versus £24,900 for RF property details). Therefore, this confirms location as the number one classifier on a property and the mantra: “Location, Location, Location”. . This description of location (Latitude and Longitude) would be of no use in predicting property prices in different areas outside Swansea, or for understanding the reason for the location effect. Instead, to try to quantify this location effect in Swansea the FourSquare website is used to determine details about the census regions. Two approaches are used: . (1) Finding the distance and density of several selected features from each Census region using the FourSquare ‘search’ function [14], . (2) Finding the features nearby a region based on different categories using the FourSquare ‘explore’ function [15]. . Locations Using Search . From the first of these categories, the correlation of different categories is shown in Figure 11. The Pearson correlation gives the following relationships: 0.5 to 1 strong correlation, 0.3 to 0.49 moderate correlation, 0 to 0.29 low correlation. Most categories have a low correlation. Only supermarket distance has a strong relationship (a positive one, the further away the higher the property prices) and only industry distance has a moderate correlation (a negative one lower house prices closer to industry). Both shopping centre and Schools have a positive correlation at ~0.29, just under the moderate definition. This may be a sign that the categories, or how they were implemented (e.g. distance/frequency), are not the best choice. . The clustering based on these categories is shown in Figure 13. As may be expected due to the nature of the data, the clustering occurs over distinct regions of 1-3 km in size. Although, there are some exceptions to this (e.g. Cluster 29 and cluster 2 where there are 2 separate regions). . . Figure . Correlation plots of the different location details of properties used compared with the averaged property prices. . When the location data is used to predict property prices the predictions (see Table 5) are better than using the property details alone. However, they are also equivalent to those using just the longitude and latitude information. Furthermore, if a 50:50 split between training and test data is used the Longitude-Latitude method outperforms the venue-location based predictions. This would again suggest the venue-location data is not getting to the bottom of the reason of differences in locations. It could either be that the location-venue data is unable to understand the differences and that other data including deprivation and crime statistics may need to be included or that the implementation of the foursquare data needs improvement. The large negative areas in the predicted price difference plots on the West of Swansea found using the property details (Figure 10), are reduced when using the location details (Figure 12) but still exist. . . Figure . Map of Swansea showing the difference in Census regions between predicted property price based on location using the ‘search’ function. Using the RF model. A negative value indicates the model underestimates the measured property price. . . Figure . A cluster analysis of locations based on the location details from the ‘search’ category. . Locations Using Explore . The location details from explore using the section “topPicks”, “trending” and “shops” were used for predicting the house price. As is shown in Table 5, the models give the largest mean absolute error of all the models. The data was not meant primarily for this, it was intended for unsupervised Cluster analysis, and so it makes sense that the model is poor at predictions. . The same data was used to predict different Clusters. One of these plots is shown in Figure 14 using the section as ‘trending’. The main feature of these plots is the interactivity, which cannot be displayed using an image file. Instead, the interactive plots are found on nbviewer [20]. This gives details about what the clusters represent and to check whether two markers that look the same are the same cluster, when the cluster size is high different clusters can look the same. . . Figure . A cluster analysis of locations based on the location details from the ‘explore category. . Location and Property details . House price predictions were made using the property details and the location information from the ‘Search’ call and are shown in Table 5. As would be expected the mean absolute error is lower than the individual models (£17,800 versus £22,800 for location alone), and the variance score is higher (0.78 compared to 0.70 respectively). The error is still relatively high at £17,800, which indicates there is more details to the property price than those given to the model. To illustrate these differences between predictions, the difference between predicted and actual house prices is shown in Figure 15. . . Figure . Map of Swansea showing the difference in Census regions between predicted property price based on property details and location details. Using the RF model. A negative value indicates the model underestimates the measured property price. . Discussion . The Selected Areas . To help understand the data, more detail of the selected regions is shown below. . Table . Details about the selected areas, including model predictions and the most common venues in different categories from clustering. . . . . . Effect of number of rooms . One way to increase a property’s value that is available to most home-owners is increasing the number of rooms in a property, which can be done by converting an attic or building an extension. Decisions on doing this will be influenced by several factors, and one of the most important is the influence it will have on the property sales price. An indication of the effect of the number of rooms was found by using the Random Forrest (RF) model and shown in Figure 16. . To calculate the value, for each location a range of number of rooms is given to the model whilst maintain all the other features (property details and location), which gives the change in the price of a property with number of rooms (Figure 17). The RF model is based around the use of the sigmoid function, which switches between two values. Due to this the price increase per extra room is not easily found, so instead the difference between the lower and upper house price values is taken and plotted in the figure. . The data should be seen as a guide for homeowners in the regions considering increasing the rooms, or for assessing whether to buy a property. The main trend seen in the figure, which may be expected, is that there is a reasonable correlation between the average property price in a region and this room effect. . . Figure . Map of Swansea showing the difference in Census regions for the effect of the number of rooms in a property. Using the RF model. . . Figure . The effect of number of rooms on property prices in the selected regions. The property effect is the difference between the maximum and minimum prices. . Quantifying the Location Effect . In previous sections it was shown that the location of a property has a greater influence on the price than its property details. To quantify the location effect, a value was obtained of the difference in the average houses price based on its location (Figure 18). This again uses the RF model but this time the property details taken for each region are the average across the districts and using their own location details. The value displayed is the average house price minus the price of the average property in that location. . . Figure . Map of Swansea showing the difference in Census regions for the effect of the number of location of a property. Using the RF model. The value displayed is the average house price minus the price of the average property in the individual locations. Lower values indicate expensive locations. . . Figure . Map of Swansea showing the difference in Census regions between predicted property price based on property details and location details. Using the RF model. A negative value indicates the model underestimates the measured property price. Circles show neighbouring regions with large variations in accuracy of property price predictions. . ## . Is the model and data a good predictor of property prices? . The predictions of the property details and location model, have an error of £18,000. The error can be low in some areas but considerable in others. If the areas with large property prices were excluded, Gower and Marina, the model may be reasonably accurate but with these areas included it is a poor predictor. The level of predictions is of the level of someone with a reasonable understanding of Swansea property prices but would not compete with valuations from estate agents or from those on Zoopla [22]. . The success of the model could be greatly improved by incorporation of crime statistics and deprivation, both of which are readily available. However, refinement is probably required on the property details and perhaps more importantly the location details provided. It is worth recalling that using the latitude and longitude performs slightly better than using the location information from the ‘search’ function. So better incorporation of the location details using foursquare or something similar would greatly improve the model. . These modifications could include including the star rating of venues, taking account of the surrounding ruralness, distance to beach and not just one of several recognised beach venues along Swansea Bay. Alternatively, splitting the model into two, one for the Gower and another for the rest could help. In addition, A comparison of the model on a different area, such as Cardiff, would help to understand the underlying trends about what contributes to the location effect. . The data and models are instead best used as a guide for potential buyers/renters or current homeowners. . Getting more out of clustering . The way the clustering and ‘explore’ location details are used could be refined to get more from this data. In this form they act as a series of maps where differences in the area can be explored from the interactive folium maps. One way to do this would be to convert them into an algorithm that suggests areas to a user based on the wight they put on certain venue types. For example, a user is asked how important different venue types are to them and the model suggests certain areas. . Conclusion . A model to predict property prices in the Swansea region based on details of the property and location relative to nearby venues, was shown to be reasonably accurate. Although, large errors particularly in the West were found in house price predictions. . When broken down to using either the property details or the location, the location was found to be a more accurate indicator of property prices. The characterising of location using the distance and frequency of nearby venues appears to be a significant limitation on the model, as just using longitude and latitude information in the model gave more accurate results. This detail along with not accounting for crime or deprivation would significantly improve predictions. But because of this, and other factors, the reasons why a location is desirable or not has not been established. . Clustering locations based on nearby venues offers a good visual tool for understanding an area. But to make it effective for potential homeowners or others exploring Swansea housing requires more work. . References . [1] https://en.wikipedia.org/wiki/Swansea . [2] https://en.wikipedia.org/wiki/Gower_Peninsula . [3] https://en.wikipedia.org/wiki/Swansea_Marina . [4] https://medium.com/@briskat/england-wales-population-density-heat-map-26a28a2b6091 . [5] https://en.wikipedia.org/wiki/Location,_Location,_Location . [6] https://en.wikipedia.org/wiki/2011_United_Kingdom_census . [7] https://www.nomisweb.co.uk/census/2011 . [8] https://www.nomisweb.co.uk/census/2011/bulk/r2_2 . [9] https://foursquare.com/ . [10] https://borders.ukdataservice.ac.uk/easy_download.html . [11] https://github.com/dMaterialia/SwanseaProperty . [12] https://nbviewer.jupyter.org/ . [13] https://developer.foursquare.com/docs/build-with-foursquare/categories/ . [14] https://developer.foursquare.com/docs/api-reference/venues/search/ . [15] https://developer.foursquare.com/docs/api-reference/venues/explore/ . [16] https://python-visualization.github.io/folium/ . [17] https://docs.microsoft.com/en-us/azure/machine-learning/how-to-select-algorithms . [18] https://scikit-learn.org/stable . [19] https://census.ukdataservice.ac.uk/get-data/related/deprivation.aspx . [20]https://nbviewer.jupyter.org/github/dMaterialia/SwanseaProperty/blob/main/ClusterPlots.ipynb . [21]https://nbviewer.jupyter.org/github/dMaterialia/SwanseaProperty/blob/main/ChoroPloting.ipynb . [22] https://www.zoopla.co.uk/ .",
            "url": "https://thomashsimm.com/2021/08/04/Swansea-House-Price-Report.html",
            "relUrl": "/2021/08/04/Swansea-House-Price-Report.html",
            "date": " • Aug 4, 2021"
        }
        
    
  
    
        ,"post16": {
            "title": "Regular expressions RE",
            "content": ". search for details of text matching a pattern . import re . Find a string within a string . result = re.search(r&quot;aza&quot;,&quot;bazaar&quot;) result . &lt;re.Match object; span=(1, 4), match=&#39;aza&#39;&gt; . result = re.search(r&quot;aza&quot;,&quot;plaza&quot;) result . &lt;re.Match object; span=(2, 5), match=&#39;aza&#39;&gt; . Find a string at the start . re.search(r&quot;^x&quot;,&quot;xenon&quot;) . &lt;re.Match object; span=(0, 1), match=&#39;x&#39;&gt; . The . is a joker button . re.search(r&quot;x.n&quot;,&quot;xenon&quot;) . &lt;re.Match object; span=(0, 3), match=&#39;xen&#39;&gt; . Character classes are inside square brackets . These are OR statements . [a-z] is all lowercase letters [A-Z] is upercase letters [0-9] is numbers . print(re.search(r&quot;[Ppc]ython&quot;,&quot;cython&quot;)) print(re.search(r&quot;[a-z]ython&quot;,&quot;dython&quot;)) print(re.search(r&quot;[a-z]way&quot;,&quot;My way&quot;)) print(re.search(r&quot;[a-z]way&quot;,&quot;Myway&quot;)) #find cloud with letter or number after it print(re.search(r&quot;cloud[a-zA-Z0-9]&quot;,&quot;cloud9&quot;)) print(re.search(r&quot;[a-zA-Z0-9]&quot;,&quot;dy9thon&quot;)) . &lt;re.Match object; span=(0, 6), match=&#39;cython&#39;&gt; &lt;re.Match object; span=(0, 6), match=&#39;dython&#39;&gt; None &lt;re.Match object; span=(1, 5), match=&#39;yway&#39;&gt; &lt;re.Match object; span=(0, 6), match=&#39;cloud9&#39;&gt; &lt;re.Match object; span=(0, 1), match=&#39;d&#39;&gt; . apply a NOT to all in the character class . This uses the pipe class ^ . print(re.search(r&quot;[^a-zA-Z0-9]&quot;,&quot;dy9 thon&quot;)) #this finds an underscore print(re.search(r&quot;[^a-zA-Z0-9]&quot;,&quot;dy9_thon&quot;)) #this includes a not for spaces print(re.search(r&quot;[^a-zA-Z0-9 ]&quot;,&quot;dy9 thon-&quot;)) . &lt;re.Match object; span=(3, 4), match=&#39; &#39;&gt; &lt;re.Match object; span=(3, 4), match=&#39;_&#39;&gt; &lt;re.Match object; span=(8, 9), match=&#39;-&#39;&gt; . find a string OR another one . print(re.search(r&quot;cat|dog&quot;,&quot;I ilke cats&quot;)) . &lt;re.Match object; span=(7, 10), match=&#39;cat&#39;&gt; . Extension of . . .* means can have any length . Greedy . print(re.search(r&quot;p.*n&quot;,&quot;python programming&quot;)) #this finds something starting with py ending n but only a-z chars print(re.search(r&quot;py[a-z]*n&quot;,&quot;python programming&quot;)) . &lt;re.Match object; span=(0, 17), match=&#39;python programmin&#39;&gt; &lt;re.Match object; span=(0, 6), match=&#39;python&#39;&gt; . matches one or more occurences of it | . So o+l looks for ol . print(re.search(r&quot;o+l&quot;,&quot;olly&quot;)) #this fails because there is an i inbetween print(re.search(r&quot;o+l&quot;,&quot;oilly&quot;)) #this finds from 1st o to l print(re.search(r&quot;o+l&quot;,&quot;oolly&quot;)) . &lt;re.Match object; span=(0, 2), match=&#39;ol&#39;&gt; None &lt;re.Match object; span=(0, 3), match=&#39;ool&#39;&gt; . ? zero or one occurence of the character before it . print(re.search(r&quot;p?each&quot;,&quot;To each their own&quot;)) # print(re.search(r&quot;p?each&quot;,&quot;To peach their own&quot;)) # print(re.search(r&quot;p?each&quot;,&quot;Top each their own&quot;)) . &lt;re.Match object; span=(3, 7), match=&#39;each&#39;&gt; &lt;re.Match object; span=(3, 8), match=&#39;peach&#39;&gt; &lt;re.Match object; span=(4, 8), match=&#39;each&#39;&gt; . Check for special characters . Putting before finds the special char . print(re.search(r&quot;.com&quot;,&quot;internet.com&quot;)) # but not here print(re.search(r&quot;.com&quot;,&quot;welcome&quot;)) # Add backslash we get it here print(re.search(r&quot; .com&quot;,&quot;internet.com&quot;)) # and a negative here print(re.search(r&quot; .com&quot;,&quot;welcome&quot;)) . &lt;re.Match object; span=(8, 12), match=&#39;.com&#39;&gt; &lt;re.Match object; span=(2, 6), match=&#39;lcom&#39;&gt; &lt;re.Match object; span=(8, 12), match=&#39;.com&#39;&gt; None . w matches letters number and underscores . d matches digits . s for whitespace characters, space tab or newline . b for word boundaries . print(re.search(r&quot; w*&quot;,&quot;internet.com&quot;)) # and here the whole string print(re.search(r&quot; w*&quot;,&quot;internet99_com&quot;)) . &lt;re.Match object; span=(0, 8), match=&#39;internet&#39;&gt; &lt;re.Match object; span=(0, 14), match=&#39;internet99_com&#39;&gt; . ^ Beginning character . $ End character . # works here print(re.search(r&quot;A.*a&quot;,&quot;Australia&quot;)) # anot here as want to end in a print(re.search(r&quot;A.*a&quot;,&quot;Azerbaijan&quot;)) #add the begin and end chars- works correct for both print(re.search(r&quot;^A.*a$&quot;,&quot;Australia&quot;)) print(re.search(r&quot;^A.*a$&quot;,&quot;Azerbaijan&quot;)) . &lt;re.Match object; span=(0, 9), match=&#39;Australia&#39;&gt; &lt;re.Match object; span=(0, 9), match=&#39;Azerbaija&#39;&gt; &lt;re.Match object; span=(0, 9), match=&#39;Australia&#39;&gt; None . Combine a few . This is for valid variable names . # [a-zA-Z0-9_] then letters, numbers or undercore # *$ end with above pattern=r&quot;^[a-zA-Z_][a-zA-Z0-9_]*$&quot; print(re.search(pattern,&quot;LLnananj_9&quot;)) print(re.search(pattern,&quot;LLnananj_9&quot;)) print(re.search(pattern,&quot;9LLnananj_9&quot;)) . &lt;re.Match object; span=(0, 10), match=&#39;LLnananj_9&#39;&gt; &lt;re.Match object; span=(0, 10), match=&#39;LLnananj_9&#39;&gt; None . capturing groups . # then comma and space # ends with letters number and underscores result = re.search(r&quot;^( w*), ( w*)$&quot;,&quot;Lovelace, Ada&quot;) print(result) print(result.groups()) print(result[0]) print(result[1]) print(result[2]) #print result2 followed by 1 separated by space print( &quot;{} {}&quot;.format(result[2], result[1]) ) . &lt;re.Match object; span=(0, 13), match=&#39;Lovelace, Ada&#39;&gt; (&#39;Lovelace&#39;, &#39;Ada&#39;) Lovelace, Ada Lovelace Ada Ada Lovelace . numeric repetition qualifiers . [a-z]{n} for a repetition of lower case chars n time . print(re.search(r&quot;[a-zA-Z]{5}&quot;,&quot;a ghost&quot;)) # a number but we only get the first print(re.search(r&quot;[a-zA-Z]{5}&quot;,&quot;a scary super ghost&quot;)) . &lt;re.Match object; span=(2, 7), match=&#39;ghost&#39;&gt; &lt;re.Match object; span=(2, 7), match=&#39;scary&#39;&gt; . re.findall will find all instances . and b either side we will get a full word . print(re.findall(r&quot;[a-zA-Z]{5}&quot;,&quot;a scary super ghost&quot;)) # but if we give a longer word? print(re.findall(r&quot;[a-zA-Z]{5}&quot;,&quot;a scary superior ghost&quot;)) # we get part of the superior word # to get just the words we want of 5 long can use b print(re.findall(r&quot; b[a-zA-Z]{5} b&quot;,&quot;a scary superior ghost&quot;)) . [&#39;scary&#39;, &#39;super&#39;, &#39;ghost&#39;] [&#39;scary&#39;, &#39;super&#39;, &#39;ghost&#39;] [&#39;scary&#39;, &#39;ghost&#39;] . [a-z]{n,m} repetition between n and m . [a-z]{n,} repetition of n or more . [a-z]{,n} repetitions of n or less . print(re.findall(r&quot; b[a-zA-Z]{2,4} b&quot;,&quot;a ab abc abcd abcde abcdef&quot;)) #NB b needed otherwise see below print(re.findall(r&quot;[a-zA-Z]{2,4}&quot;,&quot;a ab abc abcd abcde abcdef&quot;)) # 2 and above full word print(re.findall(r&quot; b[a-zA-Z]{2,} b&quot;,&quot;a ab abc abcd abcde abcdef&quot;)) # {,3} up to this many reps print(re.findall(r&quot; b[a-zA-Z]{,3} b&quot;,&quot;a ab abc abcd abcde abcdef&quot;)) . [&#39;ab&#39;, &#39;abc&#39;, &#39;abcd&#39;] [&#39;ab&#39;, &#39;abc&#39;, &#39;abcd&#39;, &#39;abcd&#39;, &#39;abcd&#39;, &#39;ef&#39;] [&#39;ab&#39;, &#39;abc&#39;, &#39;abcd&#39;, &#39;abcde&#39;, &#39;abcdef&#39;] [&#39;a&#39;, &#39;&#39;, &#39;ab&#39;, &#39;&#39;, &#39;abc&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;] . log = &quot;July 31 07:51:48 mycomputer bad_process[12345]: ERROR Performing package upgrade&quot; # has [ followed by digits at least 1 followed by ] regex= r&quot; [( d+) ]&quot; result= re.search(regex,log) print(result[0]) . [12345] . def extract_pid(log_line): regex= r&quot; [( d+) ]&quot; result=re.search(regex,log_line) if result is None: return &quot;&quot; return result[1] print(extract_pid(log)) print(extract_pid(&quot;[cat] sass&quot;)) . 12345 . re.split split based on some characters . re.sub substitute values . With sub . &quot;A&quot;,&quot;B&quot;,&quot;C&quot; A=pattern B=what to put as replacement C=full text . print(re.split(r&quot;[.?!]&quot;,&quot;One sentence. Another one? And the last one!&quot;)) print(re.split(r&quot;([.?!])&quot;,&quot;One sentence. Another one? And the last one!&quot;)) . [&#39;One sentence&#39;, &#39; Another one&#39;, &#39; And the last one&#39;, &#39;&#39;] [&#39;One sentence&#39;, &#39;.&#39;, &#39; Another one&#39;, &#39;?&#39;, &#39; And the last one&#39;, &#39;!&#39;, &#39;&#39;] . print(re.sub(r&quot;[ w.%+-]+@[ w.-]+&quot;,&quot;[REDACTED]&quot;,&quot;Received an email for go_nuts95@my.examle.com&quot;)) . Received an email for [REDACTED] . texta = &quot;Lovelace, Ada&quot; patt = r&quot;^([ w]*), ([ w]*$)&quot; res=re.search(patt, texta) print(res[0],res[1],res[2]) #this says sub with: result2 space result 1 re.sub(patt, r&quot; 2 1&quot;,texta) . Lovelace, Ada Lovelace Ada . &#39;Ada Lovelace&#39; . Some Examples . import re def repeating_letter_a(text): #here we go A or a - followed by a-z or space- followed by a or A result = re.search(r&quot;(a|A)[a-z ]*(a|A)&quot;, text) return result != None print(repeating_letter_a(&quot;banana&quot;)) # True print(repeating_letter_a(&quot;pineapple&quot;)) # False print(repeating_letter_a(&quot;Animal Kingdom&quot;)) # True print(repeating_letter_a(&quot;A is for apple&quot;)) # True . True False True True . # passed has at least 2 groups of alphanumeric characters # (including letters, numbers, and underscores) # separated by one or more whitespace characters. import re def check_character_groups(text): result = re.search(r&quot; w s w&quot;, text) return result != None print(check_character_groups(&quot;One&quot;)) # False print(check_character_groups(&quot;123 Ready Set GO&quot;)) # True print(check_character_groups(&quot;username user_01&quot;)) # True print(check_character_groups(&quot;shopping_list: milk, bread, eggs.&quot;)) # False . False True True False . import re def check_web_address(text): # starts with letters,numbers,underscores # followed by a dot then ends with letters,numbers,underscores pattern = r&quot; w . w*$&quot; result = re.search(pattern, text) return result != None print(check_web_address(&quot;gmail.com&quot;)) # True print(check_web_address(&quot;www@google&quot;)) # False print(check_web_address(&quot;www.Coursera.org&quot;)) # True print(check_web_address(&quot;web-address.com/homepage&quot;)) # False print(check_web_address(&quot;My_Favorite-Blog.US&quot;)) # True . True False True False True . import re def rearrange_name(name): result = re.search(r&quot;^([ w .-]*), ([ w .-]*)$&quot;, name) if result == None: return name return &quot;{} {}&quot;.format(result[2], result[1]) name=rearrange_name(&quot;Kennedy, John F.&quot;) print(name) name=rearrange_name(&quot;Kennedy, John Franklin&quot;) print(name) . John F. Kennedy John Franklin Kennedy . import re def long_words(text): #this says full words ( b) with chars [A-Za-z] repeated 7 times or more {7,} pattern = r&quot; b[A-Za-z]{7,} b&quot; result = re.findall(pattern, text) return result print(long_words(&quot;I like to drink coffee in the morning.&quot;)) # [&#39;morning&#39;] print(long_words(&quot;I also have a taste for hot chocolate in the afternoon.&quot;)) # [&#39;chocolate&#39;, &#39;afternoon&#39;] print(long_words(&quot;I never drink tea late at night.&quot;)) # [] . [&#39;morning&#39;] [&#39;chocolate&#39;, &#39;afternoon&#39;] [] . # to return the uppercase message in parenthesis, after the process id. import re def extract_pid(log_line): regex = r&quot;( [( d+) ]), ( b[A-Z]{2,} b)&quot; # result = re.search(regex, log_line) if result is None: return None print(result) return result[0]#&quot;{} ({})&quot;.format(result[1],result[2]) print(extract_pid(&quot;July 31 07:51:48 mycomputer bad_process[12345]: ERROR Performing package upgrade&quot;)) # 12345 (ERROR) print(extract_pid(&quot;99 elephants in a [cage]&quot;)) # None print(extract_pid(&quot;A string that also has numbers [34567] but no uppercase message&quot;)) # None print(extract_pid(&quot;July 31 08:08:08 mycomputer new_process[67890]: RUNNING Performing backup&quot;)) # 67890 (RUNNING) . None None None None . # as implemented in the following code. # What is the resulting split list? re.split(r&quot;the|a&quot;, &quot;One sentence. Another one? And the last one!&quot;) . [&#39;One sentence. Ano&#39;, &#39;r one? And &#39;, &#39; l&#39;, &#39;st one!&#39;] . import re def transform_record(record): pat = r&quot;( b[A-Za-z ]{2,} b),([0-9-]{2,}),( b[A-Za-z ]{2,} b)&quot; new_record = re.sub(pat,r&quot; 1,+1- 2, 3&quot;,record) return new_record print(transform_record(&quot;Sabrina Green,802-867-5309,System Administrator&quot;)) # Sabrina Green,+1-802-867-5309,System Administrator print(transform_record(&quot;Eli Jones,684-3481127,IT specialist&quot;)) # Eli Jones,+1-684-3481127,IT specialist print(transform_record(&quot;Melody Daniels,846-687-7436,Programmer&quot;)) # Melody Daniels,+1-846-687-7436,Programmer print(transform_record(&quot;Charlie Rivera,698-746-3357,Web Developer&quot;)) # Charlie Rivera,+1-698-746-3357,Web Developer . Sabrina Green,+1-802-867-5309,System Administrator Eli Jones,+1-684-3481127,IT specialist Melody Daniels,+1-846-687-7436,Programmer Charlie Rivera,+1-698-746-3357,Web Developer . import re def multi_vowel_words(text): pattern = r&quot;[A-Za-z]*[aeiou]{3,}[a-z]*&quot; result = re.findall(pattern, text) return result print(multi_vowel_words(&quot;Life is beautiful&quot;)) # [&#39;beautiful&#39;] print(multi_vowel_words(&quot;Obviously, the queen is courageous and gracious.&quot;)) # [&#39;Obviously&#39;, &#39;queen&#39;, &#39;courageous&#39;, &#39;gracious&#39;] print(multi_vowel_words(&quot;The rambunctious children had to sit quietly and await their delicious dinner.&quot;)) # [&#39;rambunctious&#39;, &#39;quietly&#39;, &#39;delicious&#39;] print(multi_vowel_words(&quot;The order of a data queue is First In First Out (FIFO)&quot;)) # [&#39;queue&#39;] print(multi_vowel_words(&quot;Hello world!&quot;)) # [] . [&#39;beautiful&#39;] [&#39;Obviously&#39;, &#39;queen&#39;, &#39;courageous&#39;, &#39;gracious&#39;] [&#39;rambunctious&#39;, &#39;quietly&#39;, &#39;delicious&#39;] [&#39;queue&#39;] [] . import re def transform_comments(line_of_code): patt=r&quot;#{1,}&quot; result = re.sub(patt,&quot;//&quot;,line_of_code) return result print(transform_comments(&quot;### Start of program&quot;)) # Should be &quot;// Start of program&quot; print(transform_comments(&quot; number = 0 ## Initialize the variable&quot;)) # Should be &quot; number = 0 // Initialize the variable&quot; print(transform_comments(&quot; number += 1 # Increment the variable&quot;)) # Should be &quot; number += 1 // Increment the variable&quot; print(transform_comments(&quot; return(number)&quot;)) # Should be &quot; return(number)&quot; . // Start of program number = 0 // Initialize the variable number += 1 // Increment the variable return(number) . import re def convert_phone_number(phone): patt = r&quot;[0-9]{1,}&quot; resa=re.findall(patt,phone) result = re.sub(patt,r&quot;resa[0],resa[1]&quot;,phone) return result print(convert_phone_number(&quot;My number is 212-345-9999.&quot;)) # My number is (212) 345-9999. print(convert_phone_number(&quot;Please call 888-555-1234&quot;)) # Please call (888) 555-1234 print(convert_phone_number(&quot;123-123-12345&quot;)) # 123-123-12345 print(convert_phone_number(&quot;Phone number of Buckingham Palace is +44 303 123 7300&quot;)) # Phone number of Buckingham Palace is +44 303 123 7300 . My number is resa[0],resa[1]-resa[0],resa[1]-resa[0],resa[1]. Please call resa[0],resa[1]-resa[0],resa[1]-resa[0],resa[1] resa[0],resa[1]-resa[0],resa[1]-resa[0],resa[1] Phone number of Buckingham Palace is +resa[0],resa[1] resa[0],resa[1] resa[0],resa[1] resa[0],resa[1] .",
            "url": "https://thomashsimm.com/2020/10/17/Regular-Expressions.html",
            "relUrl": "/2020/10/17/Regular-Expressions.html",
            "date": " • Oct 17, 2020"
        }
        
    
  
    
        ,"post17": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://thomashsimm.com/jupyter/2020/10/10/Template.html",
            "relUrl": "/jupyter/2020/10/10/Template.html",
            "date": " • Oct 10, 2020"
        }
        
    
  
    
        ,"post18": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://thomashsimm.com/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": ". Materials scientist / Data scientist . Projects . Materials science data viz . Some Computer Programming projects . Swansea house prices- regression model . 1. Part 1- Census and location data . 2. Part 2- Property sale data . 3. Part 3- Creating a property prediction App . Building a NN Image Classifier App on the web . Neural network art style transfer . Bike share in Chicago data science . Python Web Scraping . Data Science Courses Completed . Links . GitHub . LinkedIn . Google Scholar . Research Gate . Wordpress site . Tweets by ThomasHSimm",
          "url": "https://thomashsimm.com/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://thomashsimm.com/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}